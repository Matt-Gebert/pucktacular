ARM GAS  D:\TEMP\ccXa8Gba.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_Pan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_Pan_Enable,"ax",%progbits
  19              		.align	1
  20              		.global	PWM_Pan_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_Pan_Enable, %function
  24              	PWM_Pan_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_Pan.c"
   1:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_Pan.c **** * File Name: PWM_Pan.c
   3:.\Generated_Source\PSoC5/PWM_Pan.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_Pan.c **** *
   5:.\Generated_Source\PSoC5/PWM_Pan.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_Pan.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_Pan.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_Pan.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_Pan.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_Pan.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_Pan.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  15:.\Generated_Source\PSoC5/PWM_Pan.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  17:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_Pan.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_Pan.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_Pan.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_Pan.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  24:.\Generated_Source\PSoC5/PWM_Pan.c **** #include "PWM_Pan.h"
  25:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  26:.\Generated_Source\PSoC5/PWM_Pan.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_Pan.c **** #ifdef PWM_Pan_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_Pan.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_Pan.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* PWM_Pan_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_Pan.c **** uint8 PWM_Pan_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  34:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  35:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Start
  37:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  39:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_Pan.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_Pan.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  44:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  47:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  50:.\Generated_Source\PSoC5/PWM_Pan.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_Pan.c **** *  PWM_Pan_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_Pan.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  54:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  57:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_Pan.c ****     if(PWM_Pan_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
  60:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_Init();
  61:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
  63:.\Generated_Source\PSoC5/PWM_Pan.c ****     PWM_Pan_Enable();
  64:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  65:.\Generated_Source\PSoC5/PWM_Pan.c **** }
  66:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  67:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  68:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Init
  70:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  72:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_Pan.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_Pan.c **** *  PWM_Pan_Start().
  76:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  77:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  80:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  83:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  86:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl)
  87:.\Generated_Source\PSoC5/PWM_Pan.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl) */
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  90:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(!PWM_Pan_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 PWM_Pan_interruptState;
  94:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (!PWM_Pan_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  97:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL |= PWM_Pan_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL |= PWM_Pan_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 104:.\Generated_Source\PSoC5/PWM_Pan.c ****         ctrl = PWM_Pan_CONTROL3 & ((uint8 )(~PWM_Pan_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL3 = ctrl | PWM_Pan_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 107:.\Generated_Source\PSoC5/PWM_Pan.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 &= ((uint8)(~PWM_Pan_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 |= PWM_Pan_SYNC;
 110:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 111:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 &= ((uint8)(~PWM_Pan_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 |= PWM_Pan_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 115:.\Generated_Source\PSoC5/PWM_Pan.c ****     #elif (PWM_Pan_UseControl)
 116:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_Pan.c ****         ctrl = PWM_Pan_CONTROL & ((uint8)(~PWM_Pan_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_Pan.c ****                 ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL = ctrl | PWM_Pan_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_Pan.c ****                                    PWM_Pan_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 123:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (!PWM_Pan_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP0 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else /* (PWM_Pan_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP0 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP1 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 133:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_WriteCounter(PWM_Pan_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (!PWM_Pan_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 136:.\Generated_Source\PSoC5/PWM_Pan.c ****     PWM_Pan_WritePeriod(PWM_Pan_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 138:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare(PWM_Pan_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare1(PWM_Pan_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare2(PWM_Pan_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 145:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_KillModeMinTime)
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteKillTime(PWM_Pan_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 149:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteDeadTime(PWM_Pan_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 153:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_SetInterruptMode(PWM_Pan_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 157:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE |= PWM_Pan_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL2 |= PWM_Pan_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 165:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_STATUS_AUX_CTRL |= PWM_Pan_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 171:.\Generated_Source\PSoC5/PWM_Pan.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_Pan.c ****             CyExitCriticalSection(PWM_Pan_interruptState);
 173:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 174:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Clear the FIFO to enable the PWM_Pan_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_Pan.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 180:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 181:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 182:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Enable
 184:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 186:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 189:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 192:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 195:.\Generated_Source\PSoC5/PWM_Pan.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_Pan.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 198:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE |= PWM_Pan_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_STBY_ENABLE |= PWM_Pan_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 207:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL |= PWM_Pan_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 7A650040 		.word	1073767802
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_Pan_Enable, .-PWM_Pan_Enable
  45              		.section	.text.PWM_Pan_Stop,"ax",%progbits
  46              		.align	1
  47              		.global	PWM_Pan_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_Pan_Stop, %function
  51              	PWM_Pan_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 212:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 213:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 214:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Stop
 216:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 218:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_Pan.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 222:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 225:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 228:.\Generated_Source\PSoC5/PWM_Pan.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_Pan.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_Pan.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 232:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Stop(void) 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 7A650040 		.word	1073767802
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_Pan_Stop, .-PWM_Pan_Stop
  71              		.section	.text.PWM_Pan_WriteCounter,"ax",%progbits
  72              		.align	1
  73              		.global	PWM_Pan_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_Pan_WriteCounter, %function
  77              	PWM_Pan_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 239:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE &= ((uint8)(~PWM_Pan_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Pan_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 245:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 246:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 249:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 250:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 254:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 258:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_Pan.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 262:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 268:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 270:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1_
 272:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 276:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL3 &= ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 279:.\Generated_Source\PSoC5/PWM_Pan.c ****             #elif (PWM_Pan_UseControl)
 280:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 281:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1
 283:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                 PWM_Pan_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode1masked = comparemode & PWM_Pan_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 288:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE2
 290:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                PWM_Pan_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode2masked = comparemode & PWM_Pan_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 295:.\Generated_Source\PSoC5/PWM_Pan.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL &= ((uint8)(~(PWM_Pan_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_Pan.c ****                                             PWM_Pan_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 300:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 304:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 306:.\Generated_Source\PSoC5/PWM_Pan.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 308:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 310:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 311:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 315:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 318:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_Pan.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 325:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 328:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1_SHIF
 330:.\Generated_Source\PSoC5/PWM_Pan.c ****                                            PWM_Pan_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 comparemodemasked = comparemode & PWM_Pan_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 335:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if (PWM_Pan_UseControl)
 336:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 340:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 342:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 344:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 345:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 349:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 352:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_Pan.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 356:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 359:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 362:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 363:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(0 != PWM_Pan_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE2_SHIFT)) 
 365:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                  PWM_Pan_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 comparemodemasked = comparemode & PWM_Pan_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (0 != PWM_Pan_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 370:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_UseControl)
 371:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 375:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /*PWM_Pan_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 377:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 380:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (!PWM_Pan_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 382:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 383:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 387:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 393:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 396:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 399:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 402:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_Pan.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 086A0040 		.word	1073768968
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_Pan_WriteCounter, .-PWM_Pan_WriteCounter
  96              		.section	.text.PWM_Pan_ReadCounter,"ax",%progbits
  97              		.align	1
  98              		.global	PWM_Pan_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_Pan_ReadCounter, %function
 102              	PWM_Pan_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 408:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 409:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 410:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 414:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 418:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 421:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 424:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_Pan.c ****           (void)CY_GET_REG8(PWM_Pan_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 432:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 14650040 		.word	1073767700
 122 0010 A86A0040 		.word	1073769128
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_Pan_ReadCounter, .-PWM_Pan_ReadCounter
 126              		.section	.text.PWM_Pan_ClearFIFO,"ax",%progbits
 127              		.align	1
 128              		.global	PWM_Pan_ClearFIFO
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_Pan_ClearFIFO, %function
 132              	PWM_Pan_ClearFIFO:
 133              	.LFB6:
 435:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 436:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 11


 438:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 439:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 443:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 446:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 449:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 452:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 134              		.loc 1 454 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.L14:
 140              	.LBB14:
 141              	.LBB15:
 455:.\Generated_Source\PSoC5/PWM_Pan.c ****             while(0u != (PWM_Pan_ReadStatusRegister() & PWM_Pan_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_Pan.c ****             {
 457:.\Generated_Source\PSoC5/PWM_Pan.c ****                 (void)PWM_Pan_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_Pan.c ****             }
 459:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 460:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 461:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 463:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* !PWM_Pan_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 465:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 466:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 470:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_Pan.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_Pan.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 474:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_Pan.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_Pan.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 478:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 481:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_Pan.c **** {
 484:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(PWM_Pan_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 12


 487:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_PERIOD_LSB_PTR, period);
 488:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 490:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 491:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 493:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 494:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 498:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 505:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 508:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 511:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 515:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_Pan.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 519:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 525:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_PWMMode == PWM_Pan__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_Pan.c ****                 CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_Pan.c ****                 CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_PWMMode == PWM_Pan__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 533:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 534:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 535:.\Generated_Source\PSoC5/PWM_Pan.c **** #else
 536:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 537:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 538:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 542:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare1 value.  The compare output will
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 13


 544:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 548:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 551:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 554:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_Pan.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 558:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 564:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 565:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 566:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 570:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 577:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 580:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 583:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_Pan.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 587:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 593:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 595:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 597:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 598:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 14


 601:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 602:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 605:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 608:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 611:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 614:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(!PWM_Pan_DeadBand2_4)
 616:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG8(PWM_Pan_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_DEADBAND_COUNT &= ((uint8)(~PWM_Pan_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 622:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Pan_DEADBAND_COUNT_SHIFT)
 625:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                     PWM_Pan_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_DEADBAND_COUNT |= deadtime & PWM_Pan_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 630:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (!PWM_Pan_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 632:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 633:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 634:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 638:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 641:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 644:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 647:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 650:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(!PWM_Pan_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_Pan.c ****             return (CY_GET_REG8(PWM_Pan_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 655:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_Pan.c ****                 return ((uint8)(((uint8)(PWM_Pan_DEADBAND_COUNT & PWM_Pan_DEADBAND_COUNT_MASK)) >>
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 15


 658:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                                            PWM_Pan_DEADBAND_COUNT_S
 659:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_Pan.c ****                 return (PWM_Pan_DEADBAND_COUNT & PWM_Pan_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (!PWM_Pan_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 664:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 666:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 668:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 669:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 673:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 677:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 680:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 683:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 686:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 688:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 689:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 690:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 694:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 697:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 700:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 710:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 713:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG8(PWM_Pan_STATUS_PTR));
 142              		.loc 1 713 0
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 16


 143 0000 034B     		ldr	r3, .L18
 144 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 145              	.LBE15:
 146              	.LBE14:
 455:.\Generated_Source\PSoC5/PWM_Pan.c ****             while(0u != (PWM_Pan_ReadStatusRegister() & PWM_Pan_STATUS_FIFONEMPTY))
 147              		.loc 1 455 0
 148 0004 DB06     		lsls	r3, r3, #27
 149 0006 02D5     		bpl	.L17
 150              	.LBB16:
 151              	.LBB17:
 714:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 715:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 716:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 718:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 719:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseControl)
 720:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 721:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 722:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 726:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 730:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 733:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 736:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 739:.\Generated_Source\PSoC5/PWM_Pan.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 741:.\Generated_Source\PSoC5/PWM_Pan.c ****         result = CY_GET_REG8(PWM_Pan_CONTROL_PTR);
 742:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 744:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 745:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 746:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 750:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 754:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 17


 761:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 764:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 767:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_CONTROL_PTR, control);
 768:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 769:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 770:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 772:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 773:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (!PWM_Pan_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 775:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 776:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 780:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 783:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 786:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 789:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 792:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_CAPTURE_LSB_PTR));
 152              		.loc 1 792 0
 153 0008 024B     		ldr	r3, .L18+4
 154 000a 1B88     		ldrh	r3, [r3]
 155 000c F8E7     		b	.L14
 156              	.L17:
 157              	.LBE17:
 158              	.LBE16:
 459:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 159              		.loc 1 459 0
 160 000e 7047     		bx	lr
 161              	.L19:
 162              		.align	2
 163              	.L18:
 164 0010 6A650040 		.word	1073767786
 165 0014 A86A0040 		.word	1073769128
 166              		.cfi_endproc
 167              	.LFE6:
 168              		.size	PWM_Pan_ClearFIFO, .-PWM_Pan_ClearFIFO
 169              		.section	.text.PWM_Pan_Init,"ax",%progbits
 170              		.align	1
 171              		.global	PWM_Pan_Init
 172              		.thumb
 173              		.thumb_func
 174              		.type	PWM_Pan_Init, %function
 175              	PWM_Pan_Init:
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 18


 176              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl)
 177              		.loc 1 85 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_Pan.c ****                 ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK));
 185              		.loc 1 117 0
 186 0002 144A     		ldr	r2, .L21
 187 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 188              	.LVL1:
 189 0006 03F0C003 		and	r3, r3, #192
 190              	.LVL2:
 119:.\Generated_Source\PSoC5/PWM_Pan.c ****                                    PWM_Pan_DEFAULT_COMPARE1_MODE;
 191              		.loc 1 119 0
 192 000a 43F00903 		orr	r3, r3, #9
 193 000e 1370     		strb	r3, [r2]
 129:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP1 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 194              		.loc 1 129 0
 195 0010 937E     		ldrb	r3, [r2, #26]	@ zero_extendqisi2
 196 0012 43F00103 		orr	r3, r3, #1
 197 0016 9376     		strb	r3, [r2, #26]
 130:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_Resolution == 8) */
 198              		.loc 1 130 0
 199 0018 D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
 200 001a 43F00103 		orr	r3, r3, #1
 201 001e D376     		strb	r3, [r2, #27]
 202              	.LVL3:
 203              	.LBB18:
 204              	.LBB19:
 406:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 205              		.loc 1 406 0
 206 0020 40F2CF73 		movw	r3, #1999
 207 0024 A2F88E34 		strh	r3, [r2, #1166]	@ movhi
 208              	.LVL4:
 209              	.LBE19:
 210              	.LBE18:
 211              	.LBB20:
 212              	.LBB21:
 487:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 213              		.loc 1 487 0
 214 0028 A2F80E35 		strh	r3, [r2, #1294]	@ movhi
 215              	.LVL5:
 216              	.LBE21:
 217              	.LBE20:
 218              	.LBB22:
 219              	.LBB23:
 522:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 220              		.loc 1 522 0
 221 002c 0A4B     		ldr	r3, .L21+4
 222 002e 8222     		movs	r2, #130
 223 0030 1A80     		strh	r2, [r3]	@ movhi
 224              	.LVL6:
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 19


 225              	.LBE23:
 226              	.LBE22:
 227              	.LBB24:
 228              	.LBB25:
 686:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 229              		.loc 1 686 0
 230 0032 0022     		movs	r2, #0
 231 0034 A3F2BE43 		subw	r3, r3, #1214
 232 0038 1A70     		strb	r2, [r3]
 233              	.LBE25:
 234              	.LBE24:
 167:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Use the interrupt output of the status register for IRQ output */
 235              		.loc 1 167 0
 236 003a FFF7FEFF 		bl	CyEnterCriticalSection
 237              	.LVL7:
 169:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 238              		.loc 1 169 0
 239 003e 074A     		ldr	r2, .L21+8
 240 0040 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 241 0042 43F01003 		orr	r3, r3, #16
 242 0046 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 243              		.loc 1 172 0
 244 0048 FFF7FEFF 		bl	CyExitCriticalSection
 245              	.LVL8:
 179:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 246              		.loc 1 179 0
 247 004c BDE80840 		pop	{r3, lr}
 248              		.cfi_restore 14
 249              		.cfi_restore 3
 250              		.cfi_def_cfa_offset 0
 176:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
 251              		.loc 1 176 0
 252 0050 FFF7FEBF 		b	PWM_Pan_ClearFIFO
 253              	.LVL9:
 254              	.L22:
 255              		.align	2
 256              	.L21:
 257 0054 7A650040 		.word	1073767802
 258 0058 486A0040 		.word	1073769032
 259 005c 9A650040 		.word	1073767834
 260              		.cfi_endproc
 261              	.LFE1:
 262              		.size	PWM_Pan_Init, .-PWM_Pan_Init
 263              		.section	.text.PWM_Pan_Start,"ax",%progbits
 264              		.align	1
 265              		.global	PWM_Pan_Start
 266              		.thumb
 267              		.thumb_func
 268              		.type	PWM_Pan_Start, %function
 269              	PWM_Pan_Start:
 270              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* If not Initialized then initialize all required hardware and software */
 271              		.loc 1 56 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 20


 275 0000 10B5     		push	{r4, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 279              		.loc 1 58 0
 280 0002 054C     		ldr	r4, .L25
 281 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 282 0006 1BB9     		cbnz	r3, .L24
  60:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_initVar = 1u;
 283              		.loc 1 60 0
 284 0008 FFF7FEFF 		bl	PWM_Pan_Init
 285              	.LVL10:
  61:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 286              		.loc 1 61 0
 287 000c 0123     		movs	r3, #1
 288 000e 2370     		strb	r3, [r4]
 289              	.L24:
  65:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 290              		.loc 1 65 0
 291 0010 BDE81040 		pop	{r4, lr}
 292              		.cfi_restore 14
 293              		.cfi_restore 4
 294              		.cfi_def_cfa_offset 0
  63:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 295              		.loc 1 63 0
 296 0014 FFF7FEBF 		b	PWM_Pan_Enable
 297              	.LVL11:
 298              	.L26:
 299              		.align	2
 300              	.L25:
 301 0018 00000000 		.word	.LANCHOR0
 302              		.cfi_endproc
 303              	.LFE0:
 304              		.size	PWM_Pan_Start, .-PWM_Pan_Start
 305              		.section	.text.PWM_Pan_WritePeriod,"ax",%progbits
 306              		.align	1
 307              		.global	PWM_Pan_WritePeriod
 308              		.thumb
 309              		.thumb_func
 310              		.type	PWM_Pan_WritePeriod, %function
 311              	PWM_Pan_WritePeriod:
 312              	.LFB7:
 483:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(PWM_Pan_UsingFixedFunction)
 313              		.loc 1 483 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL12:
 487:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 319              		.loc 1 487 0
 320 0000 014B     		ldr	r3, .L28
 321 0002 1880     		strh	r0, [r3]	@ movhi
 322 0004 7047     		bx	lr
 323              	.L29:
 324 0006 00BF     		.align	2
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 21


 325              	.L28:
 326 0008 886A0040 		.word	1073769096
 327              		.cfi_endproc
 328              	.LFE7:
 329              		.size	PWM_Pan_WritePeriod, .-PWM_Pan_WritePeriod
 330              		.section	.text.PWM_Pan_WriteCompare,"ax",%progbits
 331              		.align	1
 332              		.global	PWM_Pan_WriteCompare
 333              		.thumb
 334              		.thumb_func
 335              		.type	PWM_Pan_WriteCompare, %function
 336              	PWM_Pan_WriteCompare:
 337              	.LFB8:
 518:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 338              		.loc 1 518 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL13:
 522:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 344              		.loc 1 522 0
 345 0000 014B     		ldr	r3, .L31
 346 0002 1880     		strh	r0, [r3]	@ movhi
 347 0004 7047     		bx	lr
 348              	.L32:
 349 0006 00BF     		.align	2
 350              	.L31:
 351 0008 486A0040 		.word	1073769032
 352              		.cfi_endproc
 353              	.LFE8:
 354              		.size	PWM_Pan_WriteCompare, .-PWM_Pan_WriteCompare
 355              		.section	.text.PWM_Pan_SetInterruptMode,"ax",%progbits
 356              		.align	1
 357              		.global	PWM_Pan_SetInterruptMode
 358              		.thumb
 359              		.thumb_func
 360              		.type	PWM_Pan_SetInterruptMode, %function
 361              	PWM_Pan_SetInterruptMode:
 362              	.LFB9:
 685:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_STATUS_MASK_PTR, interruptMode);
 363              		.loc 1 685 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368              	.LVL14:
 686:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 369              		.loc 1 686 0
 370 0000 014B     		ldr	r3, .L34
 371 0002 1870     		strb	r0, [r3]
 372 0004 7047     		bx	lr
 373              	.L35:
 374 0006 00BF     		.align	2
 375              	.L34:
 376 0008 8A650040 		.word	1073767818
 377              		.cfi_endproc
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 22


 378              	.LFE9:
 379              		.size	PWM_Pan_SetInterruptMode, .-PWM_Pan_SetInterruptMode
 380              		.section	.text.PWM_Pan_ReadStatusRegister,"ax",%progbits
 381              		.align	1
 382              		.global	PWM_Pan_ReadStatusRegister
 383              		.thumb
 384              		.thumb_func
 385              		.type	PWM_Pan_ReadStatusRegister, %function
 386              	PWM_Pan_ReadStatusRegister:
 387              	.LFB10:
 712:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG8(PWM_Pan_STATUS_PTR));
 388              		.loc 1 712 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 393              		.loc 1 713 0
 394 0000 014B     		ldr	r3, .L37
 395 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 396              		.loc 1 714 0
 397 0004 7047     		bx	lr
 398              	.L38:
 399 0006 00BF     		.align	2
 400              	.L37:
 401 0008 6A650040 		.word	1073767786
 402              		.cfi_endproc
 403              	.LFE10:
 404              		.size	PWM_Pan_ReadStatusRegister, .-PWM_Pan_ReadStatusRegister
 405              		.section	.text.PWM_Pan_ReadControlRegister,"ax",%progbits
 406              		.align	1
 407              		.global	PWM_Pan_ReadControlRegister
 408              		.thumb
 409              		.thumb_func
 410              		.type	PWM_Pan_ReadControlRegister, %function
 411              	PWM_Pan_ReadControlRegister:
 412              	.LFB11:
 738:.\Generated_Source\PSoC5/PWM_Pan.c ****         uint8 result;
 413              		.loc 1 738 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 741:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (result);
 418              		.loc 1 741 0
 419 0000 014B     		ldr	r3, .L40
 420 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 421              	.LVL15:
 743:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 422              		.loc 1 743 0
 423 0004 7047     		bx	lr
 424              	.L41:
 425 0006 00BF     		.align	2
 426              	.L40:
 427 0008 7A650040 		.word	1073767802
 428              		.cfi_endproc
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 23


 429              	.LFE11:
 430              		.size	PWM_Pan_ReadControlRegister, .-PWM_Pan_ReadControlRegister
 431              		.section	.text.PWM_Pan_WriteControlRegister,"ax",%progbits
 432              		.align	1
 433              		.global	PWM_Pan_WriteControlRegister
 434              		.thumb
 435              		.thumb_func
 436              		.type	PWM_Pan_WriteControlRegister, %function
 437              	PWM_Pan_WriteControlRegister:
 438              	.LFB12:
 766:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_CONTROL_PTR, control);
 439              		.loc 1 766 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL16:
 767:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 445              		.loc 1 767 0
 446 0000 014B     		ldr	r3, .L43
 447 0002 1870     		strb	r0, [r3]
 448 0004 7047     		bx	lr
 449              	.L44:
 450 0006 00BF     		.align	2
 451              	.L43:
 452 0008 7A650040 		.word	1073767802
 453              		.cfi_endproc
 454              	.LFE12:
 455              		.size	PWM_Pan_WriteControlRegister, .-PWM_Pan_WriteControlRegister
 456              		.section	.text.PWM_Pan_ReadCapture,"ax",%progbits
 457              		.align	1
 458              		.global	PWM_Pan_ReadCapture
 459              		.thumb
 460              		.thumb_func
 461              		.type	PWM_Pan_ReadCapture, %function
 462              	PWM_Pan_ReadCapture:
 463              	.LFB13:
 791:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_CAPTURE_LSB_PTR));
 464              		.loc 1 791 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              		.loc 1 792 0
 470 0000 014B     		ldr	r3, .L46
 471 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 472              		.loc 1 793 0
 473 0004 80B2     		uxth	r0, r0
 474 0006 7047     		bx	lr
 475              	.L47:
 476              		.align	2
 477              	.L46:
 478 0008 A86A0040 		.word	1073769128
 479              		.cfi_endproc
 480              	.LFE13:
 481              		.size	PWM_Pan_ReadCapture, .-PWM_Pan_ReadCapture
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 24


 482              		.section	.text.PWM_Pan_ReadCompare,"ax",%progbits
 483              		.align	1
 484              		.global	PWM_Pan_ReadCompare
 485              		.thumb
 486              		.thumb_func
 487              		.type	PWM_Pan_ReadCompare, %function
 488              	PWM_Pan_ReadCompare:
 489              	.LFB14:
 794:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 795:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (!PWM_Pan_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 797:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 798:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 800:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 801:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 805:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 809:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 812:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 815:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 490              		.loc 1 817 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_Pan.c ****             return ((uint16)CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_Pan.c ****             return (CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 495              		.loc 1 821 0
 496 0000 014B     		ldr	r3, .L49
 497 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 498              		.loc 1 823 0
 499 0004 80B2     		uxth	r0, r0
 500 0006 7047     		bx	lr
 501              	.L50:
 502              		.align	2
 503              	.L49:
 504 0008 486A0040 		.word	1073769032
 505              		.cfi_endproc
 506              	.LFE14:
 507              		.size	PWM_Pan_ReadCompare, .-PWM_Pan_ReadCompare
 508              		.section	.text.PWM_Pan_ReadPeriod,"ax",%progbits
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 25


 509              		.align	1
 510              		.global	PWM_Pan_ReadPeriod
 511              		.thumb
 512              		.thumb_func
 513              		.type	PWM_Pan_ReadPeriod, %function
 514              	PWM_Pan_ReadPeriod:
 515              	.LFB15:
 824:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 825:.\Generated_Source\PSoC5/PWM_Pan.c **** #else
 826:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 827:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 828:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 832:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 835:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 838:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 841:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 844:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 846:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 847:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 848:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 852:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 855:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 858:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 861:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 864:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 866:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 867:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 869:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 870:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_Pan.c **** *
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 26


 874:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 877:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 880:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_Pan.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 883:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_Pan.c **** uint16 PWM_Pan_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_Pan.c **** {
 516              		.loc 1 885 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(PWM_Pan_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_Pan.c ****         return ((uint16)CY_GET_REG16(PWM_Pan_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_PERIOD_LSB_PTR));
 521              		.loc 1 889 0
 522 0000 014B     		ldr	r3, .L52
 523 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 524              		.loc 1 891 0
 525 0004 80B2     		uxth	r0, r0
 526 0006 7047     		bx	lr
 527              	.L53:
 528              		.align	2
 529              	.L52:
 530 0008 886A0040 		.word	1073769096
 531              		.cfi_endproc
 532              	.LFE15:
 533              		.size	PWM_Pan_ReadPeriod, .-PWM_Pan_ReadPeriod
 534              		.global	PWM_Pan_initVar
 535              		.bss
 536              		.set	.LANCHOR0,. + 0
 537              		.type	PWM_Pan_initVar, %object
 538              		.size	PWM_Pan_initVar, 1
 539              	PWM_Pan_initVar:
 540 0000 00       		.space	1
 541              		.text
 542              	.Letext0:
 543              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 544              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 545              		.section	.debug_info,"",%progbits
 546              	.Ldebug_info0:
 547 0000 BD030000 		.4byte	0x3bd
 548 0004 0400     		.2byte	0x4
 549 0006 00000000 		.4byte	.Ldebug_abbrev0
 550 000a 04       		.byte	0x4
 551 000b 01       		.uleb128 0x1
 552 000c A4020000 		.4byte	.LASF40
 553 0010 01       		.byte	0x1
 554 0011 34010000 		.4byte	.LASF41
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 27


 555 0015 BF000000 		.4byte	.LASF42
 556 0019 00000000 		.4byte	.Ldebug_ranges0+0
 557 001d 00000000 		.4byte	0
 558 0021 00000000 		.4byte	.Ldebug_line0
 559 0025 02       		.uleb128 0x2
 560 0026 01       		.byte	0x1
 561 0027 06       		.byte	0x6
 562 0028 4B030000 		.4byte	.LASF0
 563 002c 02       		.uleb128 0x2
 564 002d 01       		.byte	0x1
 565 002e 08       		.byte	0x8
 566 002f B1000000 		.4byte	.LASF1
 567 0033 02       		.uleb128 0x2
 568 0034 02       		.byte	0x2
 569 0035 05       		.byte	0x5
 570 0036 9A020000 		.4byte	.LASF2
 571 003a 02       		.uleb128 0x2
 572 003b 02       		.byte	0x2
 573 003c 07       		.byte	0x7
 574 003d 57000000 		.4byte	.LASF3
 575 0041 02       		.uleb128 0x2
 576 0042 04       		.byte	0x4
 577 0043 05       		.byte	0x5
 578 0044 41000000 		.4byte	.LASF4
 579 0048 02       		.uleb128 0x2
 580 0049 04       		.byte	0x4
 581 004a 07       		.byte	0x7
 582 004b 57010000 		.4byte	.LASF5
 583 004f 02       		.uleb128 0x2
 584 0050 08       		.byte	0x8
 585 0051 05       		.byte	0x5
 586 0052 58020000 		.4byte	.LASF6
 587 0056 02       		.uleb128 0x2
 588 0057 08       		.byte	0x8
 589 0058 07       		.byte	0x7
 590 0059 8C000000 		.4byte	.LASF7
 591 005d 03       		.uleb128 0x3
 592 005e 04       		.byte	0x4
 593 005f 05       		.byte	0x5
 594 0060 696E7400 		.ascii	"int\000"
 595 0064 02       		.uleb128 0x2
 596 0065 04       		.byte	0x4
 597 0066 07       		.byte	0x7
 598 0067 DA010000 		.4byte	.LASF8
 599 006b 04       		.uleb128 0x4
 600 006c 7E010000 		.4byte	.LASF9
 601 0070 02       		.byte	0x2
 602 0071 9201     		.2byte	0x192
 603 0073 2C000000 		.4byte	0x2c
 604 0077 04       		.uleb128 0x4
 605 0078 A8010000 		.4byte	.LASF10
 606 007c 02       		.byte	0x2
 607 007d 9301     		.2byte	0x193
 608 007f 3A000000 		.4byte	0x3a
 609 0083 02       		.uleb128 0x2
 610 0084 04       		.byte	0x4
 611 0085 04       		.byte	0x4
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 28


 612 0086 7E000000 		.4byte	.LASF11
 613 008a 02       		.uleb128 0x2
 614 008b 08       		.byte	0x8
 615 008c 04       		.byte	0x4
 616 008d A1010000 		.4byte	.LASF12
 617 0091 02       		.uleb128 0x2
 618 0092 01       		.byte	0x1
 619 0093 08       		.byte	0x8
 620 0094 46030000 		.4byte	.LASF13
 621 0098 04       		.uleb128 0x4
 622 0099 36020000 		.4byte	.LASF14
 623 009d 02       		.byte	0x2
 624 009e 3C02     		.2byte	0x23c
 625 00a0 A4000000 		.4byte	0xa4
 626 00a4 05       		.uleb128 0x5
 627 00a5 6B000000 		.4byte	0x6b
 628 00a9 04       		.uleb128 0x4
 629 00aa 00000000 		.4byte	.LASF15
 630 00ae 02       		.byte	0x2
 631 00af 3D02     		.2byte	0x23d
 632 00b1 B5000000 		.4byte	0xb5
 633 00b5 05       		.uleb128 0x5
 634 00b6 77000000 		.4byte	0x77
 635 00ba 02       		.uleb128 0x2
 636 00bb 04       		.byte	0x4
 637 00bc 07       		.byte	0x7
 638 00bd 3B020000 		.4byte	.LASF16
 639 00c1 06       		.uleb128 0x6
 640 00c2 44020000 		.4byte	.LASF17
 641 00c6 01       		.byte	0x1
 642 00c7 1603     		.2byte	0x316
 643 00c9 77000000 		.4byte	0x77
 644 00cd 01       		.byte	0x1
 645 00ce 06       		.uleb128 0x6
 646 00cf 06000000 		.4byte	.LASF18
 647 00d3 01       		.byte	0x1
 648 00d4 C702     		.2byte	0x2c7
 649 00d6 6B000000 		.4byte	0x6b
 650 00da 01       		.byte	0x1
 651 00db 07       		.uleb128 0x7
 652 00dc 69010000 		.4byte	.LASF19
 653 00e0 01       		.byte	0x1
 654 00e1 9301     		.2byte	0x193
 655 00e3 01       		.byte	0x1
 656 00e4 F5000000 		.4byte	0xf5
 657 00e8 08       		.uleb128 0x8
 658 00e9 84000000 		.4byte	.LASF21
 659 00ed 01       		.byte	0x1
 660 00ee 9301     		.2byte	0x193
 661 00f0 77000000 		.4byte	0x77
 662 00f4 00       		.byte	0
 663 00f5 07       		.uleb128 0x7
 664 00f6 6A000000 		.4byte	.LASF20
 665 00fa 01       		.byte	0x1
 666 00fb E201     		.2byte	0x1e2
 667 00fd 01       		.byte	0x1
 668 00fe 0F010000 		.4byte	0x10f
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 29


 669 0102 08       		.uleb128 0x8
 670 0103 3A000000 		.4byte	.LASF22
 671 0107 01       		.byte	0x1
 672 0108 E201     		.2byte	0x1e2
 673 010a 77000000 		.4byte	0x77
 674 010e 00       		.byte	0
 675 010f 07       		.uleb128 0x7
 676 0110 8C010000 		.4byte	.LASF23
 677 0114 01       		.byte	0x1
 678 0115 0402     		.2byte	0x204
 679 0117 01       		.byte	0x1
 680 0118 29010000 		.4byte	0x129
 681 011c 08       		.uleb128 0x8
 682 011d 57030000 		.4byte	.LASF24
 683 0121 01       		.byte	0x1
 684 0122 0402     		.2byte	0x204
 685 0124 77000000 		.4byte	0x77
 686 0128 00       		.byte	0
 687 0129 07       		.uleb128 0x7
 688 012a 21000000 		.4byte	.LASF25
 689 012e 01       		.byte	0x1
 690 012f AC02     		.2byte	0x2ac
 691 0131 01       		.byte	0x1
 692 0132 43010000 		.4byte	0x143
 693 0136 08       		.uleb128 0x8
 694 0137 66020000 		.4byte	.LASF26
 695 013b 01       		.byte	0x1
 696 013c AC02     		.2byte	0x2ac
 697 013e 6B000000 		.4byte	0x6b
 698 0142 00       		.byte	0
 699 0143 09       		.uleb128 0x9
 700 0144 74020000 		.4byte	.LASF27
 701 0148 01       		.byte	0x1
 702 0149 C7       		.byte	0xc7
 703 014a 00000000 		.4byte	.LFB2
 704 014e 10000000 		.4byte	.LFE2-.LFB2
 705 0152 01       		.uleb128 0x1
 706 0153 9C       		.byte	0x9c
 707 0154 09       		.uleb128 0x9
 708 0155 FD010000 		.4byte	.LASF28
 709 0159 01       		.byte	0x1
 710 015a E9       		.byte	0xe9
 711 015b 00000000 		.4byte	.LFB3
 712 015f 10000000 		.4byte	.LFE3-.LFB3
 713 0163 01       		.uleb128 0x1
 714 0164 9C       		.byte	0x9c
 715 0165 0A       		.uleb128 0xa
 716 0166 DB000000 		.4byte	0xdb
 717 016a 00000000 		.4byte	.LFB4
 718 016e 0C000000 		.4byte	.LFE4-.LFB4
 719 0172 01       		.uleb128 0x1
 720 0173 9C       		.byte	0x9c
 721 0174 80010000 		.4byte	0x180
 722 0178 0B       		.uleb128 0xb
 723 0179 E8000000 		.4byte	0xe8
 724 017d 01       		.uleb128 0x1
 725 017e 50       		.byte	0x50
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 30


 726 017f 00       		.byte	0
 727 0180 0C       		.uleb128 0xc
 728 0181 32030000 		.4byte	.LASF36
 729 0185 01       		.byte	0x1
 730 0186 A901     		.2byte	0x1a9
 731 0188 77000000 		.4byte	0x77
 732 018c 00000000 		.4byte	.LFB5
 733 0190 14000000 		.4byte	.LFE5-.LFB5
 734 0194 01       		.uleb128 0x1
 735 0195 9C       		.byte	0x9c
 736 0196 0D       		.uleb128 0xd
 737 0197 24020000 		.4byte	.LASF29
 738 019b 01       		.byte	0x1
 739 019c C501     		.2byte	0x1c5
 740 019e 00000000 		.4byte	.LFB6
 741 01a2 18000000 		.4byte	.LFE6-.LFB6
 742 01a6 01       		.uleb128 0x1
 743 01a7 9C       		.byte	0x9c
 744 01a8 CD010000 		.4byte	0x1cd
 745 01ac 0E       		.uleb128 0xe
 746 01ad CE000000 		.4byte	0xce
 747 01b1 00000000 		.4byte	.LBB14
 748 01b5 04000000 		.4byte	.LBE14-.LBB14
 749 01b9 01       		.byte	0x1
 750 01ba C701     		.2byte	0x1c7
 751 01bc 0E       		.uleb128 0xe
 752 01bd C1000000 		.4byte	0xc1
 753 01c1 08000000 		.4byte	.LBB16
 754 01c5 06000000 		.4byte	.LBE16-.LBB16
 755 01c9 01       		.byte	0x1
 756 01ca C901     		.2byte	0x1c9
 757 01cc 00       		.byte	0
 758 01cd 0F       		.uleb128 0xf
 759 01ce 4A000000 		.4byte	.LASF30
 760 01d2 01       		.byte	0x1
 761 01d3 54       		.byte	0x54
 762 01d4 00000000 		.4byte	.LFB1
 763 01d8 60000000 		.4byte	.LFE1-.LFB1
 764 01dc 01       		.uleb128 0x1
 765 01dd 9C       		.byte	0x9c
 766 01de 86020000 		.4byte	0x286
 767 01e2 10       		.uleb128 0x10
 768 01e3 5F030000 		.4byte	.LASF31
 769 01e7 01       		.byte	0x1
 770 01e8 57       		.byte	0x57
 771 01e9 6B000000 		.4byte	0x6b
 772 01ed 00000000 		.4byte	.LLST0
 773 01f1 10       		.uleb128 0x10
 774 01f2 83020000 		.4byte	.LASF32
 775 01f6 01       		.byte	0x1
 776 01f7 5D       		.byte	0x5d
 777 01f8 6B000000 		.4byte	0x6b
 778 01fc 18000000 		.4byte	.LLST1
 779 0200 11       		.uleb128 0x11
 780 0201 DB000000 		.4byte	0xdb
 781 0205 20000000 		.4byte	.LBB18
 782 0209 08000000 		.4byte	.LBE18-.LBB18
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 31


 783 020d 01       		.byte	0x1
 784 020e 85       		.byte	0x85
 785 020f 1B020000 		.4byte	0x21b
 786 0213 12       		.uleb128 0x12
 787 0214 E8000000 		.4byte	0xe8
 788 0218 CF07     		.2byte	0x7cf
 789 021a 00       		.byte	0
 790 021b 11       		.uleb128 0x11
 791 021c F5000000 		.4byte	0xf5
 792 0220 28000000 		.4byte	.LBB20
 793 0224 04000000 		.4byte	.LBE20-.LBB20
 794 0228 01       		.byte	0x1
 795 0229 88       		.byte	0x88
 796 022a 36020000 		.4byte	0x236
 797 022e 12       		.uleb128 0x12
 798 022f 02010000 		.4byte	0x102
 799 0233 CF07     		.2byte	0x7cf
 800 0235 00       		.byte	0
 801 0236 11       		.uleb128 0x11
 802 0237 0F010000 		.4byte	0x10f
 803 023b 2C000000 		.4byte	.LBB22
 804 023f 06000000 		.4byte	.LBE22-.LBB22
 805 0243 01       		.byte	0x1
 806 0244 8B       		.byte	0x8b
 807 0245 50020000 		.4byte	0x250
 808 0249 13       		.uleb128 0x13
 809 024a 1C010000 		.4byte	0x11c
 810 024e 82       		.byte	0x82
 811 024f 00       		.byte	0
 812 0250 11       		.uleb128 0x11
 813 0251 29010000 		.4byte	0x129
 814 0255 32000000 		.4byte	.LBB24
 815 0259 08000000 		.4byte	.LBE24-.LBB24
 816 025d 01       		.byte	0x1
 817 025e 9A       		.byte	0x9a
 818 025f 6A020000 		.4byte	0x26a
 819 0263 13       		.uleb128 0x13
 820 0264 36010000 		.4byte	0x136
 821 0268 00       		.byte	0
 822 0269 00       		.byte	0
 823 026a 14       		.uleb128 0x14
 824 026b 3E000000 		.4byte	.LVL7
 825 026f A8030000 		.4byte	0x3a8
 826 0273 14       		.uleb128 0x14
 827 0274 4C000000 		.4byte	.LVL8
 828 0278 B3030000 		.4byte	0x3b3
 829 027c 15       		.uleb128 0x15
 830 027d 54000000 		.4byte	.LVL9
 831 0281 96010000 		.4byte	0x196
 832 0285 00       		.byte	0
 833 0286 0F       		.uleb128 0xf
 834 0287 A3000000 		.4byte	.LASF33
 835 028b 01       		.byte	0x1
 836 028c 37       		.byte	0x37
 837 028d 00000000 		.4byte	.LFB0
 838 0291 1C000000 		.4byte	.LFE0-.LFB0
 839 0295 01       		.uleb128 0x1
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 32


 840 0296 9C       		.byte	0x9c
 841 0297 AE020000 		.4byte	0x2ae
 842 029b 14       		.uleb128 0x14
 843 029c 0C000000 		.4byte	.LVL10
 844 02a0 CD010000 		.4byte	0x1cd
 845 02a4 15       		.uleb128 0x15
 846 02a5 18000000 		.4byte	.LVL11
 847 02a9 43010000 		.4byte	0x143
 848 02ad 00       		.byte	0
 849 02ae 0A       		.uleb128 0xa
 850 02af F5000000 		.4byte	0xf5
 851 02b3 00000000 		.4byte	.LFB7
 852 02b7 0C000000 		.4byte	.LFE7-.LFB7
 853 02bb 01       		.uleb128 0x1
 854 02bc 9C       		.byte	0x9c
 855 02bd C9020000 		.4byte	0x2c9
 856 02c1 0B       		.uleb128 0xb
 857 02c2 02010000 		.4byte	0x102
 858 02c6 01       		.uleb128 0x1
 859 02c7 50       		.byte	0x50
 860 02c8 00       		.byte	0
 861 02c9 0A       		.uleb128 0xa
 862 02ca 0F010000 		.4byte	0x10f
 863 02ce 00000000 		.4byte	.LFB8
 864 02d2 0C000000 		.4byte	.LFE8-.LFB8
 865 02d6 01       		.uleb128 0x1
 866 02d7 9C       		.byte	0x9c
 867 02d8 E4020000 		.4byte	0x2e4
 868 02dc 0B       		.uleb128 0xb
 869 02dd 1C010000 		.4byte	0x11c
 870 02e1 01       		.uleb128 0x1
 871 02e2 50       		.byte	0x50
 872 02e3 00       		.byte	0
 873 02e4 0A       		.uleb128 0xa
 874 02e5 29010000 		.4byte	0x129
 875 02e9 00000000 		.4byte	.LFB9
 876 02ed 0C000000 		.4byte	.LFE9-.LFB9
 877 02f1 01       		.uleb128 0x1
 878 02f2 9C       		.byte	0x9c
 879 02f3 FF020000 		.4byte	0x2ff
 880 02f7 0B       		.uleb128 0xb
 881 02f8 36010000 		.4byte	0x136
 882 02fc 01       		.uleb128 0x1
 883 02fd 50       		.byte	0x50
 884 02fe 00       		.byte	0
 885 02ff 16       		.uleb128 0x16
 886 0300 CE000000 		.4byte	0xce
 887 0304 00000000 		.4byte	.LFB10
 888 0308 0C000000 		.4byte	.LFE10-.LFB10
 889 030c 01       		.uleb128 0x1
 890 030d 9C       		.byte	0x9c
 891 030e 17       		.uleb128 0x17
 892 030f 64030000 		.4byte	.LASF43
 893 0313 01       		.byte	0x1
 894 0314 E102     		.2byte	0x2e1
 895 0316 6B000000 		.4byte	0x6b
 896 031a 00000000 		.4byte	.LFB11
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 33


 897 031e 0C000000 		.4byte	.LFE11-.LFB11
 898 0322 01       		.uleb128 0x1
 899 0323 9C       		.byte	0x9c
 900 0324 37030000 		.4byte	0x337
 901 0328 18       		.uleb128 0x18
 902 0329 1D020000 		.4byte	.LASF34
 903 032d 01       		.byte	0x1
 904 032e E302     		.2byte	0x2e3
 905 0330 6B000000 		.4byte	0x6b
 906 0334 01       		.uleb128 0x1
 907 0335 50       		.byte	0x50
 908 0336 00       		.byte	0
 909 0337 0D       		.uleb128 0xd
 910 0338 17010000 		.4byte	.LASF35
 911 033c 01       		.byte	0x1
 912 033d FD02     		.2byte	0x2fd
 913 033f 00000000 		.4byte	.LFB12
 914 0343 0C000000 		.4byte	.LFE12-.LFB12
 915 0347 01       		.uleb128 0x1
 916 0348 9C       		.byte	0x9c
 917 0349 5C030000 		.4byte	0x35c
 918 034d 19       		.uleb128 0x19
 919 034e 84010000 		.4byte	.LASF44
 920 0352 01       		.byte	0x1
 921 0353 FD02     		.2byte	0x2fd
 922 0355 6B000000 		.4byte	0x6b
 923 0359 01       		.uleb128 0x1
 924 035a 50       		.byte	0x50
 925 035b 00       		.byte	0
 926 035c 16       		.uleb128 0x16
 927 035d C1000000 		.4byte	0xc1
 928 0361 00000000 		.4byte	.LFB13
 929 0365 0C000000 		.4byte	.LFE13-.LFB13
 930 0369 01       		.uleb128 0x1
 931 036a 9C       		.byte	0x9c
 932 036b 0C       		.uleb128 0xc
 933 036c AF010000 		.4byte	.LASF37
 934 0370 01       		.byte	0x1
 935 0371 3003     		.2byte	0x330
 936 0373 77000000 		.4byte	0x77
 937 0377 00000000 		.4byte	.LFB14
 938 037b 0C000000 		.4byte	.LFE14-.LFB14
 939 037f 01       		.uleb128 0x1
 940 0380 9C       		.byte	0x9c
 941 0381 0C       		.uleb128 0xc
 942 0382 0A020000 		.4byte	.LASF38
 943 0386 01       		.byte	0x1
 944 0387 7403     		.2byte	0x374
 945 0389 77000000 		.4byte	0x77
 946 038d 00000000 		.4byte	.LFB15
 947 0391 0C000000 		.4byte	.LFE15-.LFB15
 948 0395 01       		.uleb128 0x1
 949 0396 9C       		.byte	0x9c
 950 0397 1A       		.uleb128 0x1a
 951 0398 07010000 		.4byte	.LASF45
 952 039c 01       		.byte	0x1
 953 039d 20       		.byte	0x20
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 34


 954 039e 6B000000 		.4byte	0x6b
 955 03a2 05       		.uleb128 0x5
 956 03a3 03       		.byte	0x3
 957 03a4 00000000 		.4byte	PWM_Pan_initVar
 958 03a8 1B       		.uleb128 0x1b
 959 03a9 C3010000 		.4byte	.LASF39
 960 03ad 03       		.byte	0x3
 961 03ae 7D       		.byte	0x7d
 962 03af 6B000000 		.4byte	0x6b
 963 03b3 1C       		.uleb128 0x1c
 964 03b4 E7010000 		.4byte	.LASF46
 965 03b8 03       		.byte	0x3
 966 03b9 7E       		.byte	0x7e
 967 03ba 1D       		.uleb128 0x1d
 968 03bb 6B000000 		.4byte	0x6b
 969 03bf 00       		.byte	0
 970 03c0 00       		.byte	0
 971              		.section	.debug_abbrev,"",%progbits
 972              	.Ldebug_abbrev0:
 973 0000 01       		.uleb128 0x1
 974 0001 11       		.uleb128 0x11
 975 0002 01       		.byte	0x1
 976 0003 25       		.uleb128 0x25
 977 0004 0E       		.uleb128 0xe
 978 0005 13       		.uleb128 0x13
 979 0006 0B       		.uleb128 0xb
 980 0007 03       		.uleb128 0x3
 981 0008 0E       		.uleb128 0xe
 982 0009 1B       		.uleb128 0x1b
 983 000a 0E       		.uleb128 0xe
 984 000b 55       		.uleb128 0x55
 985 000c 17       		.uleb128 0x17
 986 000d 11       		.uleb128 0x11
 987 000e 01       		.uleb128 0x1
 988 000f 10       		.uleb128 0x10
 989 0010 17       		.uleb128 0x17
 990 0011 00       		.byte	0
 991 0012 00       		.byte	0
 992 0013 02       		.uleb128 0x2
 993 0014 24       		.uleb128 0x24
 994 0015 00       		.byte	0
 995 0016 0B       		.uleb128 0xb
 996 0017 0B       		.uleb128 0xb
 997 0018 3E       		.uleb128 0x3e
 998 0019 0B       		.uleb128 0xb
 999 001a 03       		.uleb128 0x3
 1000 001b 0E       		.uleb128 0xe
 1001 001c 00       		.byte	0
 1002 001d 00       		.byte	0
 1003 001e 03       		.uleb128 0x3
 1004 001f 24       		.uleb128 0x24
 1005 0020 00       		.byte	0
 1006 0021 0B       		.uleb128 0xb
 1007 0022 0B       		.uleb128 0xb
 1008 0023 3E       		.uleb128 0x3e
 1009 0024 0B       		.uleb128 0xb
 1010 0025 03       		.uleb128 0x3
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 35


 1011 0026 08       		.uleb128 0x8
 1012 0027 00       		.byte	0
 1013 0028 00       		.byte	0
 1014 0029 04       		.uleb128 0x4
 1015 002a 16       		.uleb128 0x16
 1016 002b 00       		.byte	0
 1017 002c 03       		.uleb128 0x3
 1018 002d 0E       		.uleb128 0xe
 1019 002e 3A       		.uleb128 0x3a
 1020 002f 0B       		.uleb128 0xb
 1021 0030 3B       		.uleb128 0x3b
 1022 0031 05       		.uleb128 0x5
 1023 0032 49       		.uleb128 0x49
 1024 0033 13       		.uleb128 0x13
 1025 0034 00       		.byte	0
 1026 0035 00       		.byte	0
 1027 0036 05       		.uleb128 0x5
 1028 0037 35       		.uleb128 0x35
 1029 0038 00       		.byte	0
 1030 0039 49       		.uleb128 0x49
 1031 003a 13       		.uleb128 0x13
 1032 003b 00       		.byte	0
 1033 003c 00       		.byte	0
 1034 003d 06       		.uleb128 0x6
 1035 003e 2E       		.uleb128 0x2e
 1036 003f 00       		.byte	0
 1037 0040 3F       		.uleb128 0x3f
 1038 0041 19       		.uleb128 0x19
 1039 0042 03       		.uleb128 0x3
 1040 0043 0E       		.uleb128 0xe
 1041 0044 3A       		.uleb128 0x3a
 1042 0045 0B       		.uleb128 0xb
 1043 0046 3B       		.uleb128 0x3b
 1044 0047 05       		.uleb128 0x5
 1045 0048 27       		.uleb128 0x27
 1046 0049 19       		.uleb128 0x19
 1047 004a 49       		.uleb128 0x49
 1048 004b 13       		.uleb128 0x13
 1049 004c 20       		.uleb128 0x20
 1050 004d 0B       		.uleb128 0xb
 1051 004e 00       		.byte	0
 1052 004f 00       		.byte	0
 1053 0050 07       		.uleb128 0x7
 1054 0051 2E       		.uleb128 0x2e
 1055 0052 01       		.byte	0x1
 1056 0053 3F       		.uleb128 0x3f
 1057 0054 19       		.uleb128 0x19
 1058 0055 03       		.uleb128 0x3
 1059 0056 0E       		.uleb128 0xe
 1060 0057 3A       		.uleb128 0x3a
 1061 0058 0B       		.uleb128 0xb
 1062 0059 3B       		.uleb128 0x3b
 1063 005a 05       		.uleb128 0x5
 1064 005b 27       		.uleb128 0x27
 1065 005c 19       		.uleb128 0x19
 1066 005d 20       		.uleb128 0x20
 1067 005e 0B       		.uleb128 0xb
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 36


 1068 005f 01       		.uleb128 0x1
 1069 0060 13       		.uleb128 0x13
 1070 0061 00       		.byte	0
 1071 0062 00       		.byte	0
 1072 0063 08       		.uleb128 0x8
 1073 0064 05       		.uleb128 0x5
 1074 0065 00       		.byte	0
 1075 0066 03       		.uleb128 0x3
 1076 0067 0E       		.uleb128 0xe
 1077 0068 3A       		.uleb128 0x3a
 1078 0069 0B       		.uleb128 0xb
 1079 006a 3B       		.uleb128 0x3b
 1080 006b 05       		.uleb128 0x5
 1081 006c 49       		.uleb128 0x49
 1082 006d 13       		.uleb128 0x13
 1083 006e 00       		.byte	0
 1084 006f 00       		.byte	0
 1085 0070 09       		.uleb128 0x9
 1086 0071 2E       		.uleb128 0x2e
 1087 0072 00       		.byte	0
 1088 0073 3F       		.uleb128 0x3f
 1089 0074 19       		.uleb128 0x19
 1090 0075 03       		.uleb128 0x3
 1091 0076 0E       		.uleb128 0xe
 1092 0077 3A       		.uleb128 0x3a
 1093 0078 0B       		.uleb128 0xb
 1094 0079 3B       		.uleb128 0x3b
 1095 007a 0B       		.uleb128 0xb
 1096 007b 27       		.uleb128 0x27
 1097 007c 19       		.uleb128 0x19
 1098 007d 11       		.uleb128 0x11
 1099 007e 01       		.uleb128 0x1
 1100 007f 12       		.uleb128 0x12
 1101 0080 06       		.uleb128 0x6
 1102 0081 40       		.uleb128 0x40
 1103 0082 18       		.uleb128 0x18
 1104 0083 9742     		.uleb128 0x2117
 1105 0085 19       		.uleb128 0x19
 1106 0086 00       		.byte	0
 1107 0087 00       		.byte	0
 1108 0088 0A       		.uleb128 0xa
 1109 0089 2E       		.uleb128 0x2e
 1110 008a 01       		.byte	0x1
 1111 008b 31       		.uleb128 0x31
 1112 008c 13       		.uleb128 0x13
 1113 008d 11       		.uleb128 0x11
 1114 008e 01       		.uleb128 0x1
 1115 008f 12       		.uleb128 0x12
 1116 0090 06       		.uleb128 0x6
 1117 0091 40       		.uleb128 0x40
 1118 0092 18       		.uleb128 0x18
 1119 0093 9742     		.uleb128 0x2117
 1120 0095 19       		.uleb128 0x19
 1121 0096 01       		.uleb128 0x1
 1122 0097 13       		.uleb128 0x13
 1123 0098 00       		.byte	0
 1124 0099 00       		.byte	0
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 37


 1125 009a 0B       		.uleb128 0xb
 1126 009b 05       		.uleb128 0x5
 1127 009c 00       		.byte	0
 1128 009d 31       		.uleb128 0x31
 1129 009e 13       		.uleb128 0x13
 1130 009f 02       		.uleb128 0x2
 1131 00a0 18       		.uleb128 0x18
 1132 00a1 00       		.byte	0
 1133 00a2 00       		.byte	0
 1134 00a3 0C       		.uleb128 0xc
 1135 00a4 2E       		.uleb128 0x2e
 1136 00a5 00       		.byte	0
 1137 00a6 3F       		.uleb128 0x3f
 1138 00a7 19       		.uleb128 0x19
 1139 00a8 03       		.uleb128 0x3
 1140 00a9 0E       		.uleb128 0xe
 1141 00aa 3A       		.uleb128 0x3a
 1142 00ab 0B       		.uleb128 0xb
 1143 00ac 3B       		.uleb128 0x3b
 1144 00ad 05       		.uleb128 0x5
 1145 00ae 27       		.uleb128 0x27
 1146 00af 19       		.uleb128 0x19
 1147 00b0 49       		.uleb128 0x49
 1148 00b1 13       		.uleb128 0x13
 1149 00b2 11       		.uleb128 0x11
 1150 00b3 01       		.uleb128 0x1
 1151 00b4 12       		.uleb128 0x12
 1152 00b5 06       		.uleb128 0x6
 1153 00b6 40       		.uleb128 0x40
 1154 00b7 18       		.uleb128 0x18
 1155 00b8 9742     		.uleb128 0x2117
 1156 00ba 19       		.uleb128 0x19
 1157 00bb 00       		.byte	0
 1158 00bc 00       		.byte	0
 1159 00bd 0D       		.uleb128 0xd
 1160 00be 2E       		.uleb128 0x2e
 1161 00bf 01       		.byte	0x1
 1162 00c0 3F       		.uleb128 0x3f
 1163 00c1 19       		.uleb128 0x19
 1164 00c2 03       		.uleb128 0x3
 1165 00c3 0E       		.uleb128 0xe
 1166 00c4 3A       		.uleb128 0x3a
 1167 00c5 0B       		.uleb128 0xb
 1168 00c6 3B       		.uleb128 0x3b
 1169 00c7 05       		.uleb128 0x5
 1170 00c8 27       		.uleb128 0x27
 1171 00c9 19       		.uleb128 0x19
 1172 00ca 11       		.uleb128 0x11
 1173 00cb 01       		.uleb128 0x1
 1174 00cc 12       		.uleb128 0x12
 1175 00cd 06       		.uleb128 0x6
 1176 00ce 40       		.uleb128 0x40
 1177 00cf 18       		.uleb128 0x18
 1178 00d0 9742     		.uleb128 0x2117
 1179 00d2 19       		.uleb128 0x19
 1180 00d3 01       		.uleb128 0x1
 1181 00d4 13       		.uleb128 0x13
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 38


 1182 00d5 00       		.byte	0
 1183 00d6 00       		.byte	0
 1184 00d7 0E       		.uleb128 0xe
 1185 00d8 1D       		.uleb128 0x1d
 1186 00d9 00       		.byte	0
 1187 00da 31       		.uleb128 0x31
 1188 00db 13       		.uleb128 0x13
 1189 00dc 11       		.uleb128 0x11
 1190 00dd 01       		.uleb128 0x1
 1191 00de 12       		.uleb128 0x12
 1192 00df 06       		.uleb128 0x6
 1193 00e0 58       		.uleb128 0x58
 1194 00e1 0B       		.uleb128 0xb
 1195 00e2 59       		.uleb128 0x59
 1196 00e3 05       		.uleb128 0x5
 1197 00e4 00       		.byte	0
 1198 00e5 00       		.byte	0
 1199 00e6 0F       		.uleb128 0xf
 1200 00e7 2E       		.uleb128 0x2e
 1201 00e8 01       		.byte	0x1
 1202 00e9 3F       		.uleb128 0x3f
 1203 00ea 19       		.uleb128 0x19
 1204 00eb 03       		.uleb128 0x3
 1205 00ec 0E       		.uleb128 0xe
 1206 00ed 3A       		.uleb128 0x3a
 1207 00ee 0B       		.uleb128 0xb
 1208 00ef 3B       		.uleb128 0x3b
 1209 00f0 0B       		.uleb128 0xb
 1210 00f1 27       		.uleb128 0x27
 1211 00f2 19       		.uleb128 0x19
 1212 00f3 11       		.uleb128 0x11
 1213 00f4 01       		.uleb128 0x1
 1214 00f5 12       		.uleb128 0x12
 1215 00f6 06       		.uleb128 0x6
 1216 00f7 40       		.uleb128 0x40
 1217 00f8 18       		.uleb128 0x18
 1218 00f9 9742     		.uleb128 0x2117
 1219 00fb 19       		.uleb128 0x19
 1220 00fc 01       		.uleb128 0x1
 1221 00fd 13       		.uleb128 0x13
 1222 00fe 00       		.byte	0
 1223 00ff 00       		.byte	0
 1224 0100 10       		.uleb128 0x10
 1225 0101 34       		.uleb128 0x34
 1226 0102 00       		.byte	0
 1227 0103 03       		.uleb128 0x3
 1228 0104 0E       		.uleb128 0xe
 1229 0105 3A       		.uleb128 0x3a
 1230 0106 0B       		.uleb128 0xb
 1231 0107 3B       		.uleb128 0x3b
 1232 0108 0B       		.uleb128 0xb
 1233 0109 49       		.uleb128 0x49
 1234 010a 13       		.uleb128 0x13
 1235 010b 02       		.uleb128 0x2
 1236 010c 17       		.uleb128 0x17
 1237 010d 00       		.byte	0
 1238 010e 00       		.byte	0
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 39


 1239 010f 11       		.uleb128 0x11
 1240 0110 1D       		.uleb128 0x1d
 1241 0111 01       		.byte	0x1
 1242 0112 31       		.uleb128 0x31
 1243 0113 13       		.uleb128 0x13
 1244 0114 11       		.uleb128 0x11
 1245 0115 01       		.uleb128 0x1
 1246 0116 12       		.uleb128 0x12
 1247 0117 06       		.uleb128 0x6
 1248 0118 58       		.uleb128 0x58
 1249 0119 0B       		.uleb128 0xb
 1250 011a 59       		.uleb128 0x59
 1251 011b 0B       		.uleb128 0xb
 1252 011c 01       		.uleb128 0x1
 1253 011d 13       		.uleb128 0x13
 1254 011e 00       		.byte	0
 1255 011f 00       		.byte	0
 1256 0120 12       		.uleb128 0x12
 1257 0121 05       		.uleb128 0x5
 1258 0122 00       		.byte	0
 1259 0123 31       		.uleb128 0x31
 1260 0124 13       		.uleb128 0x13
 1261 0125 1C       		.uleb128 0x1c
 1262 0126 05       		.uleb128 0x5
 1263 0127 00       		.byte	0
 1264 0128 00       		.byte	0
 1265 0129 13       		.uleb128 0x13
 1266 012a 05       		.uleb128 0x5
 1267 012b 00       		.byte	0
 1268 012c 31       		.uleb128 0x31
 1269 012d 13       		.uleb128 0x13
 1270 012e 1C       		.uleb128 0x1c
 1271 012f 0B       		.uleb128 0xb
 1272 0130 00       		.byte	0
 1273 0131 00       		.byte	0
 1274 0132 14       		.uleb128 0x14
 1275 0133 898201   		.uleb128 0x4109
 1276 0136 00       		.byte	0
 1277 0137 11       		.uleb128 0x11
 1278 0138 01       		.uleb128 0x1
 1279 0139 31       		.uleb128 0x31
 1280 013a 13       		.uleb128 0x13
 1281 013b 00       		.byte	0
 1282 013c 00       		.byte	0
 1283 013d 15       		.uleb128 0x15
 1284 013e 898201   		.uleb128 0x4109
 1285 0141 00       		.byte	0
 1286 0142 11       		.uleb128 0x11
 1287 0143 01       		.uleb128 0x1
 1288 0144 9542     		.uleb128 0x2115
 1289 0146 19       		.uleb128 0x19
 1290 0147 31       		.uleb128 0x31
 1291 0148 13       		.uleb128 0x13
 1292 0149 00       		.byte	0
 1293 014a 00       		.byte	0
 1294 014b 16       		.uleb128 0x16
 1295 014c 2E       		.uleb128 0x2e
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 40


 1296 014d 00       		.byte	0
 1297 014e 31       		.uleb128 0x31
 1298 014f 13       		.uleb128 0x13
 1299 0150 11       		.uleb128 0x11
 1300 0151 01       		.uleb128 0x1
 1301 0152 12       		.uleb128 0x12
 1302 0153 06       		.uleb128 0x6
 1303 0154 40       		.uleb128 0x40
 1304 0155 18       		.uleb128 0x18
 1305 0156 9742     		.uleb128 0x2117
 1306 0158 19       		.uleb128 0x19
 1307 0159 00       		.byte	0
 1308 015a 00       		.byte	0
 1309 015b 17       		.uleb128 0x17
 1310 015c 2E       		.uleb128 0x2e
 1311 015d 01       		.byte	0x1
 1312 015e 3F       		.uleb128 0x3f
 1313 015f 19       		.uleb128 0x19
 1314 0160 03       		.uleb128 0x3
 1315 0161 0E       		.uleb128 0xe
 1316 0162 3A       		.uleb128 0x3a
 1317 0163 0B       		.uleb128 0xb
 1318 0164 3B       		.uleb128 0x3b
 1319 0165 05       		.uleb128 0x5
 1320 0166 27       		.uleb128 0x27
 1321 0167 19       		.uleb128 0x19
 1322 0168 49       		.uleb128 0x49
 1323 0169 13       		.uleb128 0x13
 1324 016a 11       		.uleb128 0x11
 1325 016b 01       		.uleb128 0x1
 1326 016c 12       		.uleb128 0x12
 1327 016d 06       		.uleb128 0x6
 1328 016e 40       		.uleb128 0x40
 1329 016f 18       		.uleb128 0x18
 1330 0170 9742     		.uleb128 0x2117
 1331 0172 19       		.uleb128 0x19
 1332 0173 01       		.uleb128 0x1
 1333 0174 13       		.uleb128 0x13
 1334 0175 00       		.byte	0
 1335 0176 00       		.byte	0
 1336 0177 18       		.uleb128 0x18
 1337 0178 34       		.uleb128 0x34
 1338 0179 00       		.byte	0
 1339 017a 03       		.uleb128 0x3
 1340 017b 0E       		.uleb128 0xe
 1341 017c 3A       		.uleb128 0x3a
 1342 017d 0B       		.uleb128 0xb
 1343 017e 3B       		.uleb128 0x3b
 1344 017f 05       		.uleb128 0x5
 1345 0180 49       		.uleb128 0x49
 1346 0181 13       		.uleb128 0x13
 1347 0182 02       		.uleb128 0x2
 1348 0183 18       		.uleb128 0x18
 1349 0184 00       		.byte	0
 1350 0185 00       		.byte	0
 1351 0186 19       		.uleb128 0x19
 1352 0187 05       		.uleb128 0x5
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 41


 1353 0188 00       		.byte	0
 1354 0189 03       		.uleb128 0x3
 1355 018a 0E       		.uleb128 0xe
 1356 018b 3A       		.uleb128 0x3a
 1357 018c 0B       		.uleb128 0xb
 1358 018d 3B       		.uleb128 0x3b
 1359 018e 05       		.uleb128 0x5
 1360 018f 49       		.uleb128 0x49
 1361 0190 13       		.uleb128 0x13
 1362 0191 02       		.uleb128 0x2
 1363 0192 18       		.uleb128 0x18
 1364 0193 00       		.byte	0
 1365 0194 00       		.byte	0
 1366 0195 1A       		.uleb128 0x1a
 1367 0196 34       		.uleb128 0x34
 1368 0197 00       		.byte	0
 1369 0198 03       		.uleb128 0x3
 1370 0199 0E       		.uleb128 0xe
 1371 019a 3A       		.uleb128 0x3a
 1372 019b 0B       		.uleb128 0xb
 1373 019c 3B       		.uleb128 0x3b
 1374 019d 0B       		.uleb128 0xb
 1375 019e 49       		.uleb128 0x49
 1376 019f 13       		.uleb128 0x13
 1377 01a0 3F       		.uleb128 0x3f
 1378 01a1 19       		.uleb128 0x19
 1379 01a2 02       		.uleb128 0x2
 1380 01a3 18       		.uleb128 0x18
 1381 01a4 00       		.byte	0
 1382 01a5 00       		.byte	0
 1383 01a6 1B       		.uleb128 0x1b
 1384 01a7 2E       		.uleb128 0x2e
 1385 01a8 00       		.byte	0
 1386 01a9 3F       		.uleb128 0x3f
 1387 01aa 19       		.uleb128 0x19
 1388 01ab 03       		.uleb128 0x3
 1389 01ac 0E       		.uleb128 0xe
 1390 01ad 3A       		.uleb128 0x3a
 1391 01ae 0B       		.uleb128 0xb
 1392 01af 3B       		.uleb128 0x3b
 1393 01b0 0B       		.uleb128 0xb
 1394 01b1 27       		.uleb128 0x27
 1395 01b2 19       		.uleb128 0x19
 1396 01b3 49       		.uleb128 0x49
 1397 01b4 13       		.uleb128 0x13
 1398 01b5 3C       		.uleb128 0x3c
 1399 01b6 19       		.uleb128 0x19
 1400 01b7 00       		.byte	0
 1401 01b8 00       		.byte	0
 1402 01b9 1C       		.uleb128 0x1c
 1403 01ba 2E       		.uleb128 0x2e
 1404 01bb 01       		.byte	0x1
 1405 01bc 3F       		.uleb128 0x3f
 1406 01bd 19       		.uleb128 0x19
 1407 01be 03       		.uleb128 0x3
 1408 01bf 0E       		.uleb128 0xe
 1409 01c0 3A       		.uleb128 0x3a
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 42


 1410 01c1 0B       		.uleb128 0xb
 1411 01c2 3B       		.uleb128 0x3b
 1412 01c3 0B       		.uleb128 0xb
 1413 01c4 27       		.uleb128 0x27
 1414 01c5 19       		.uleb128 0x19
 1415 01c6 3C       		.uleb128 0x3c
 1416 01c7 19       		.uleb128 0x19
 1417 01c8 00       		.byte	0
 1418 01c9 00       		.byte	0
 1419 01ca 1D       		.uleb128 0x1d
 1420 01cb 05       		.uleb128 0x5
 1421 01cc 00       		.byte	0
 1422 01cd 49       		.uleb128 0x49
 1423 01ce 13       		.uleb128 0x13
 1424 01cf 00       		.byte	0
 1425 01d0 00       		.byte	0
 1426 01d1 00       		.byte	0
 1427              		.section	.debug_loc,"",%progbits
 1428              	.Ldebug_loc0:
 1429              	.LLST0:
 1430 0000 06000000 		.4byte	.LVL1
 1431 0004 0A000000 		.4byte	.LVL2
 1432 0008 0600     		.2byte	0x6
 1433 000a 73       		.byte	0x73
 1434 000b 00       		.sleb128 0
 1435 000c 09       		.byte	0x9
 1436 000d C0       		.byte	0xc0
 1437 000e 1A       		.byte	0x1a
 1438 000f 9F       		.byte	0x9f
 1439 0010 00000000 		.4byte	0
 1440 0014 00000000 		.4byte	0
 1441              	.LLST1:
 1442 0018 3E000000 		.4byte	.LVL7
 1443 001c 4B000000 		.4byte	.LVL8-1
 1444 0020 0100     		.2byte	0x1
 1445 0022 50       		.byte	0x50
 1446 0023 00000000 		.4byte	0
 1447 0027 00000000 		.4byte	0
 1448              		.section	.debug_aranges,"",%progbits
 1449 0000 94000000 		.4byte	0x94
 1450 0004 0200     		.2byte	0x2
 1451 0006 00000000 		.4byte	.Ldebug_info0
 1452 000a 04       		.byte	0x4
 1453 000b 00       		.byte	0
 1454 000c 0000     		.2byte	0
 1455 000e 0000     		.2byte	0
 1456 0010 00000000 		.4byte	.LFB2
 1457 0014 10000000 		.4byte	.LFE2-.LFB2
 1458 0018 00000000 		.4byte	.LFB3
 1459 001c 10000000 		.4byte	.LFE3-.LFB3
 1460 0020 00000000 		.4byte	.LFB4
 1461 0024 0C000000 		.4byte	.LFE4-.LFB4
 1462 0028 00000000 		.4byte	.LFB5
 1463 002c 14000000 		.4byte	.LFE5-.LFB5
 1464 0030 00000000 		.4byte	.LFB6
 1465 0034 18000000 		.4byte	.LFE6-.LFB6
 1466 0038 00000000 		.4byte	.LFB1
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 43


 1467 003c 60000000 		.4byte	.LFE1-.LFB1
 1468 0040 00000000 		.4byte	.LFB0
 1469 0044 1C000000 		.4byte	.LFE0-.LFB0
 1470 0048 00000000 		.4byte	.LFB7
 1471 004c 0C000000 		.4byte	.LFE7-.LFB7
 1472 0050 00000000 		.4byte	.LFB8
 1473 0054 0C000000 		.4byte	.LFE8-.LFB8
 1474 0058 00000000 		.4byte	.LFB9
 1475 005c 0C000000 		.4byte	.LFE9-.LFB9
 1476 0060 00000000 		.4byte	.LFB10
 1477 0064 0C000000 		.4byte	.LFE10-.LFB10
 1478 0068 00000000 		.4byte	.LFB11
 1479 006c 0C000000 		.4byte	.LFE11-.LFB11
 1480 0070 00000000 		.4byte	.LFB12
 1481 0074 0C000000 		.4byte	.LFE12-.LFB12
 1482 0078 00000000 		.4byte	.LFB13
 1483 007c 0C000000 		.4byte	.LFE13-.LFB13
 1484 0080 00000000 		.4byte	.LFB14
 1485 0084 0C000000 		.4byte	.LFE14-.LFB14
 1486 0088 00000000 		.4byte	.LFB15
 1487 008c 0C000000 		.4byte	.LFE15-.LFB15
 1488 0090 00000000 		.4byte	0
 1489 0094 00000000 		.4byte	0
 1490              		.section	.debug_ranges,"",%progbits
 1491              	.Ldebug_ranges0:
 1492 0000 00000000 		.4byte	.LFB2
 1493 0004 10000000 		.4byte	.LFE2
 1494 0008 00000000 		.4byte	.LFB3
 1495 000c 10000000 		.4byte	.LFE3
 1496 0010 00000000 		.4byte	.LFB4
 1497 0014 0C000000 		.4byte	.LFE4
 1498 0018 00000000 		.4byte	.LFB5
 1499 001c 14000000 		.4byte	.LFE5
 1500 0020 00000000 		.4byte	.LFB6
 1501 0024 18000000 		.4byte	.LFE6
 1502 0028 00000000 		.4byte	.LFB1
 1503 002c 60000000 		.4byte	.LFE1
 1504 0030 00000000 		.4byte	.LFB0
 1505 0034 1C000000 		.4byte	.LFE0
 1506 0038 00000000 		.4byte	.LFB7
 1507 003c 0C000000 		.4byte	.LFE7
 1508 0040 00000000 		.4byte	.LFB8
 1509 0044 0C000000 		.4byte	.LFE8
 1510 0048 00000000 		.4byte	.LFB9
 1511 004c 0C000000 		.4byte	.LFE9
 1512 0050 00000000 		.4byte	.LFB10
 1513 0054 0C000000 		.4byte	.LFE10
 1514 0058 00000000 		.4byte	.LFB11
 1515 005c 0C000000 		.4byte	.LFE11
 1516 0060 00000000 		.4byte	.LFB12
 1517 0064 0C000000 		.4byte	.LFE12
 1518 0068 00000000 		.4byte	.LFB13
 1519 006c 0C000000 		.4byte	.LFE13
 1520 0070 00000000 		.4byte	.LFB14
 1521 0074 0C000000 		.4byte	.LFE14
 1522 0078 00000000 		.4byte	.LFB15
 1523 007c 0C000000 		.4byte	.LFE15
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 44


 1524 0080 00000000 		.4byte	0
 1525 0084 00000000 		.4byte	0
 1526              		.section	.debug_line,"",%progbits
 1527              	.Ldebug_line0:
 1528 0000 A0010000 		.section	.debug_str,"MS",%progbits,1
 1528      02005100 
 1528      00000201 
 1528      FB0E0D00 
 1528      01010101 
 1529              	.LASF15:
 1530 0000 72656731 		.ascii	"reg16\000"
 1530      3600
 1531              	.LASF18:
 1532 0006 50574D5F 		.ascii	"PWM_Pan_ReadStatusRegister\000"
 1532      50616E5F 
 1532      52656164 
 1532      53746174 
 1532      75735265 
 1533              	.LASF25:
 1534 0021 50574D5F 		.ascii	"PWM_Pan_SetInterruptMode\000"
 1534      50616E5F 
 1534      53657449 
 1534      6E746572 
 1534      72757074 
 1535              	.LASF22:
 1536 003a 70657269 		.ascii	"period\000"
 1536      6F6400
 1537              	.LASF4:
 1538 0041 6C6F6E67 		.ascii	"long int\000"
 1538      20696E74 
 1538      00
 1539              	.LASF30:
 1540 004a 50574D5F 		.ascii	"PWM_Pan_Init\000"
 1540      50616E5F 
 1540      496E6974 
 1540      00
 1541              	.LASF3:
 1542 0057 73686F72 		.ascii	"short unsigned int\000"
 1542      7420756E 
 1542      7369676E 
 1542      65642069 
 1542      6E7400
 1543              	.LASF20:
 1544 006a 50574D5F 		.ascii	"PWM_Pan_WritePeriod\000"
 1544      50616E5F 
 1544      57726974 
 1544      65506572 
 1544      696F6400 
 1545              	.LASF11:
 1546 007e 666C6F61 		.ascii	"float\000"
 1546      7400
 1547              	.LASF21:
 1548 0084 636F756E 		.ascii	"counter\000"
 1548      74657200 
 1549              	.LASF7:
 1550 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1550      206C6F6E 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 45


 1550      6720756E 
 1550      7369676E 
 1550      65642069 
 1551              	.LASF33:
 1552 00a3 50574D5F 		.ascii	"PWM_Pan_Start\000"
 1552      50616E5F 
 1552      53746172 
 1552      7400
 1553              	.LASF1:
 1554 00b1 756E7369 		.ascii	"unsigned char\000"
 1554      676E6564 
 1554      20636861 
 1554      7200
 1555              	.LASF42:
 1556 00bf 443A5C44 		.ascii	"D:\\Documents\\Computer Science\\PSoc\\ECE3091 Auto"
 1556      6F63756D 
 1556      656E7473 
 1556      5C436F6D 
 1556      70757465 
 1557 00ee 5075636B 		.ascii	"PuckPickup\\Display.cydsn\000"
 1557      5069636B 
 1557      75705C44 
 1557      6973706C 
 1557      61792E63 
 1558              	.LASF45:
 1559 0107 50574D5F 		.ascii	"PWM_Pan_initVar\000"
 1559      50616E5F 
 1559      696E6974 
 1559      56617200 
 1560              	.LASF35:
 1561 0117 50574D5F 		.ascii	"PWM_Pan_WriteControlRegister\000"
 1561      50616E5F 
 1561      57726974 
 1561      65436F6E 
 1561      74726F6C 
 1562              	.LASF41:
 1563 0134 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_Pan.c\000"
 1563      6E657261 
 1563      7465645F 
 1563      536F7572 
 1563      63655C50 
 1564              	.LASF5:
 1565 0157 6C6F6E67 		.ascii	"long unsigned int\000"
 1565      20756E73 
 1565      69676E65 
 1565      6420696E 
 1565      7400
 1566              	.LASF19:
 1567 0169 50574D5F 		.ascii	"PWM_Pan_WriteCounter\000"
 1567      50616E5F 
 1567      57726974 
 1567      65436F75 
 1567      6E746572 
 1568              	.LASF9:
 1569 017e 75696E74 		.ascii	"uint8\000"
 1569      3800
 1570              	.LASF44:
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 46


 1571 0184 636F6E74 		.ascii	"control\000"
 1571      726F6C00 
 1572              	.LASF23:
 1573 018c 50574D5F 		.ascii	"PWM_Pan_WriteCompare\000"
 1573      50616E5F 
 1573      57726974 
 1573      65436F6D 
 1573      70617265 
 1574              	.LASF12:
 1575 01a1 646F7562 		.ascii	"double\000"
 1575      6C6500
 1576              	.LASF10:
 1577 01a8 75696E74 		.ascii	"uint16\000"
 1577      313600
 1578              	.LASF37:
 1579 01af 50574D5F 		.ascii	"PWM_Pan_ReadCompare\000"
 1579      50616E5F 
 1579      52656164 
 1579      436F6D70 
 1579      61726500 
 1580              	.LASF39:
 1581 01c3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1581      74657243 
 1581      72697469 
 1581      63616C53 
 1581      65637469 
 1582              	.LASF8:
 1583 01da 756E7369 		.ascii	"unsigned int\000"
 1583      676E6564 
 1583      20696E74 
 1583      00
 1584              	.LASF46:
 1585 01e7 43794578 		.ascii	"CyExitCriticalSection\000"
 1585      69744372 
 1585      69746963 
 1585      616C5365 
 1585      6374696F 
 1586              	.LASF28:
 1587 01fd 50574D5F 		.ascii	"PWM_Pan_Stop\000"
 1587      50616E5F 
 1587      53746F70 
 1587      00
 1588              	.LASF38:
 1589 020a 50574D5F 		.ascii	"PWM_Pan_ReadPeriod\000"
 1589      50616E5F 
 1589      52656164 
 1589      50657269 
 1589      6F6400
 1590              	.LASF34:
 1591 021d 72657375 		.ascii	"result\000"
 1591      6C7400
 1592              	.LASF29:
 1593 0224 50574D5F 		.ascii	"PWM_Pan_ClearFIFO\000"
 1593      50616E5F 
 1593      436C6561 
 1593      72464946 
 1593      4F00
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 47


 1594              	.LASF14:
 1595 0236 72656738 		.ascii	"reg8\000"
 1595      00
 1596              	.LASF16:
 1597 023b 73697A65 		.ascii	"sizetype\000"
 1597      74797065 
 1597      00
 1598              	.LASF17:
 1599 0244 50574D5F 		.ascii	"PWM_Pan_ReadCapture\000"
 1599      50616E5F 
 1599      52656164 
 1599      43617074 
 1599      75726500 
 1600              	.LASF6:
 1601 0258 6C6F6E67 		.ascii	"long long int\000"
 1601      206C6F6E 
 1601      6720696E 
 1601      7400
 1602              	.LASF26:
 1603 0266 696E7465 		.ascii	"interruptMode\000"
 1603      72727570 
 1603      744D6F64 
 1603      6500
 1604              	.LASF27:
 1605 0274 50574D5F 		.ascii	"PWM_Pan_Enable\000"
 1605      50616E5F 
 1605      456E6162 
 1605      6C6500
 1606              	.LASF32:
 1607 0283 50574D5F 		.ascii	"PWM_Pan_interruptState\000"
 1607      50616E5F 
 1607      696E7465 
 1607      72727570 
 1607      74537461 
 1608              	.LASF2:
 1609 029a 73686F72 		.ascii	"short int\000"
 1609      7420696E 
 1609      7400
 1610              	.LASF40:
 1611 02a4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1611      4320342E 
 1611      392E3320 
 1611      32303135 
 1611      30333033 
 1612 02d7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1612      20726576 
 1612      6973696F 
 1612      6E203232 
 1612      31323230 
 1613 030a 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1613      66756E63 
 1613      74696F6E 
 1613      2D736563 
 1613      74696F6E 
 1614              	.LASF36:
 1615 0332 50574D5F 		.ascii	"PWM_Pan_ReadCounter\000"
 1615      50616E5F 
ARM GAS  D:\TEMP\ccXa8Gba.s 			page 48


 1615      52656164 
 1615      436F756E 
 1615      74657200 
 1616              	.LASF13:
 1617 0346 63686172 		.ascii	"char\000"
 1617      00
 1618              	.LASF0:
 1619 034b 7369676E 		.ascii	"signed char\000"
 1619      65642063 
 1619      68617200 
 1620              	.LASF24:
 1621 0357 636F6D70 		.ascii	"compare\000"
 1621      61726500 
 1622              	.LASF31:
 1623 035f 6374726C 		.ascii	"ctrl\000"
 1623      00
 1624              	.LASF43:
 1625 0364 50574D5F 		.ascii	"PWM_Pan_ReadControlRegister\000"
 1625      50616E5F 
 1625      52656164 
 1625      436F6E74 
 1625      726F6C52 
 1626              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
