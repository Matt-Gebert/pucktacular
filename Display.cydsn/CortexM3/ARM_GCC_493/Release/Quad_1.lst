ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Quad_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Quad_1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	Quad_1_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	Quad_1_Init, %function
  24              	Quad_1_Init:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Quad_1.c"
   1:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Quad_1.c **** * File Name: Quad_1.c  
   3:.\Generated_Source\PSoC5/Quad_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/Quad_1.c **** *
   5:.\Generated_Source\PSoC5/Quad_1.c **** * Description:
   6:.\Generated_Source\PSoC5/Quad_1.c **** *  This file provides the source code to the API for the Quadrature Decoder
   7:.\Generated_Source\PSoC5/Quad_1.c **** *  component.
   8:.\Generated_Source\PSoC5/Quad_1.c **** *
   9:.\Generated_Source\PSoC5/Quad_1.c **** * Note:
  10:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
  11:.\Generated_Source\PSoC5/Quad_1.c **** *   
  12:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/Quad_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/Quad_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC5/Quad_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC5/Quad_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/Quad_1.c **** 
  19:.\Generated_Source\PSoC5/Quad_1.c **** #include "Quad_1.h"
  20:.\Generated_Source\PSoC5/Quad_1.c **** 
  21:.\Generated_Source\PSoC5/Quad_1.c **** #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
  22:.\Generated_Source\PSoC5/Quad_1.c ****     #include "Quad_1_PVT.h"
  23:.\Generated_Source\PSoC5/Quad_1.c **** #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
  24:.\Generated_Source\PSoC5/Quad_1.c **** 
  25:.\Generated_Source\PSoC5/Quad_1.c **** uint8 Quad_1_initVar = 0u;
  26:.\Generated_Source\PSoC5/Quad_1.c **** 
  27:.\Generated_Source\PSoC5/Quad_1.c **** 
  28:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
  29:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_Init
  30:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
  31:.\Generated_Source\PSoC5/Quad_1.c **** *
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 2


  32:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
  33:.\Generated_Source\PSoC5/Quad_1.c **** *  Inits/Restores default QuadDec configuration provided with customizer.
  34:.\Generated_Source\PSoC5/Quad_1.c **** *
  35:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
  36:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
  37:.\Generated_Source\PSoC5/Quad_1.c **** *
  38:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
  39:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
  40:.\Generated_Source\PSoC5/Quad_1.c **** *
  41:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
  42:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_Init(void) 
  43:.\Generated_Source\PSoC5/Quad_1.c **** {
  27              		.loc 1 43 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE0:
  35              		.size	Quad_1_Init, .-Quad_1_Init
  36              		.section	.text.Quad_1_Stop,"ax",%progbits
  37              		.align	1
  38              		.global	Quad_1_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	Quad_1_Stop, %function
  42              	Quad_1_Stop:
  43              	.LFB3:
  44:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
  45:.\Generated_Source\PSoC5/Quad_1.c ****         /* Disable Interrupt. */
  46:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntDisable(Quad_1_ISR_NUMBER);
  47:.\Generated_Source\PSoC5/Quad_1.c ****         /* Set the ISR to point to the Quad_1_isr Interrupt. */
  48:.\Generated_Source\PSoC5/Quad_1.c ****         (void) CyIntSetVector(Quad_1_ISR_NUMBER, & Quad_1_ISR);
  49:.\Generated_Source\PSoC5/Quad_1.c ****         /* Set the priority. */
  50:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntSetPriority(Quad_1_ISR_NUMBER, Quad_1_ISR_PRIORITY);
  51:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
  52:.\Generated_Source\PSoC5/Quad_1.c **** }
  53:.\Generated_Source\PSoC5/Quad_1.c **** 
  54:.\Generated_Source\PSoC5/Quad_1.c **** 
  55:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_Enable
  57:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
  58:.\Generated_Source\PSoC5/Quad_1.c **** *
  59:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
  60:.\Generated_Source\PSoC5/Quad_1.c **** *  This function enable interrupts from Component and also enable Component's
  61:.\Generated_Source\PSoC5/Quad_1.c **** *  ISR in case of 32-bit counter.
  62:.\Generated_Source\PSoC5/Quad_1.c **** *
  63:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
  64:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
  65:.\Generated_Source\PSoC5/Quad_1.c **** *
  66:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
  67:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
  68:.\Generated_Source\PSoC5/Quad_1.c **** *
  69:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
  70:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_Enable(void) 
  71:.\Generated_Source\PSoC5/Quad_1.c **** {
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 3


  72:.\Generated_Source\PSoC5/Quad_1.c ****     uint8 enableInterrupts;
  73:.\Generated_Source\PSoC5/Quad_1.c **** 
  74:.\Generated_Source\PSoC5/Quad_1.c ****     Quad_1_SetInterruptMask(Quad_1_INIT_INT_MASK);
  75:.\Generated_Source\PSoC5/Quad_1.c **** 
  76:.\Generated_Source\PSoC5/Quad_1.c ****     /* Clear pending interrupts. */
  77:.\Generated_Source\PSoC5/Quad_1.c ****     (void) Quad_1_GetEvents();
  78:.\Generated_Source\PSoC5/Quad_1.c ****     
  79:.\Generated_Source\PSoC5/Quad_1.c ****     enableInterrupts = CyEnterCriticalSection();
  80:.\Generated_Source\PSoC5/Quad_1.c **** 
  81:.\Generated_Source\PSoC5/Quad_1.c ****     /* Enable interrupts from Statusi register */
  82:.\Generated_Source\PSoC5/Quad_1.c ****     Quad_1_SR_AUX_CONTROL |= Quad_1_INTERRUPTS_ENABLE;
  83:.\Generated_Source\PSoC5/Quad_1.c **** 
  84:.\Generated_Source\PSoC5/Quad_1.c ****     CyExitCriticalSection(enableInterrupts);        
  85:.\Generated_Source\PSoC5/Quad_1.c **** 
  86:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
  87:.\Generated_Source\PSoC5/Quad_1.c ****         /* Enable Component interrupts */
  88:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntEnable(Quad_1_ISR_NUMBER);
  89:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
  90:.\Generated_Source\PSoC5/Quad_1.c **** }
  91:.\Generated_Source\PSoC5/Quad_1.c **** 
  92:.\Generated_Source\PSoC5/Quad_1.c **** 
  93:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
  94:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_Start
  95:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
  96:.\Generated_Source\PSoC5/Quad_1.c **** *
  97:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
  98:.\Generated_Source\PSoC5/Quad_1.c **** *  Initializes UDBs and other relevant hardware.
  99:.\Generated_Source\PSoC5/Quad_1.c **** *  Resets counter, enables or disables all relevant interrupts.
 100:.\Generated_Source\PSoC5/Quad_1.c **** *  Starts monitoring the inputs and counting.
 101:.\Generated_Source\PSoC5/Quad_1.c **** *
 102:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 103:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 104:.\Generated_Source\PSoC5/Quad_1.c **** *
 105:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 106:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 107:.\Generated_Source\PSoC5/Quad_1.c **** *
 108:.\Generated_Source\PSoC5/Quad_1.c **** * Global variables:
 109:.\Generated_Source\PSoC5/Quad_1.c **** *  Quad_1_initVar - used to check initial configuration, modified on
 110:.\Generated_Source\PSoC5/Quad_1.c **** *  first function call.
 111:.\Generated_Source\PSoC5/Quad_1.c **** *
 112:.\Generated_Source\PSoC5/Quad_1.c **** * Reentrant:
 113:.\Generated_Source\PSoC5/Quad_1.c **** *  No.
 114:.\Generated_Source\PSoC5/Quad_1.c **** *
 115:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 116:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_Start(void) 
 117:.\Generated_Source\PSoC5/Quad_1.c **** {
 118:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT)
 119:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt8_Start();
 120:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt8_WriteCounter(Quad_1_COUNTER_INIT_VALUE);
 121:.\Generated_Source\PSoC5/Quad_1.c ****     #else
 122:.\Generated_Source\PSoC5/Quad_1.c ****         /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT) || 
 123:.\Generated_Source\PSoC5/Quad_1.c ****         *  (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT) 
 124:.\Generated_Source\PSoC5/Quad_1.c ****         */
 125:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt16_Start();
 126:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt16_WriteCounter(Quad_1_COUNTER_INIT_VALUE);
 127:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT */
 128:.\Generated_Source\PSoC5/Quad_1.c ****     
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 4


 129:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)        
 130:.\Generated_Source\PSoC5/Quad_1.c ****        Quad_1_count32SoftPart = 0;
 131:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
 132:.\Generated_Source\PSoC5/Quad_1.c **** 
 133:.\Generated_Source\PSoC5/Quad_1.c ****     if (Quad_1_initVar == 0u)
 134:.\Generated_Source\PSoC5/Quad_1.c ****     {
 135:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Init();
 136:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_initVar = 1u;
 137:.\Generated_Source\PSoC5/Quad_1.c ****     }
 138:.\Generated_Source\PSoC5/Quad_1.c **** 
 139:.\Generated_Source\PSoC5/Quad_1.c ****     Quad_1_Enable();
 140:.\Generated_Source\PSoC5/Quad_1.c **** }
 141:.\Generated_Source\PSoC5/Quad_1.c **** 
 142:.\Generated_Source\PSoC5/Quad_1.c **** 
 143:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_Stop
 145:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/Quad_1.c **** *
 147:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 148:.\Generated_Source\PSoC5/Quad_1.c **** *  Turns off UDBs and other relevant hardware.
 149:.\Generated_Source\PSoC5/Quad_1.c **** *
 150:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 151:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 152:.\Generated_Source\PSoC5/Quad_1.c **** *
 153:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 154:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 155:.\Generated_Source\PSoC5/Quad_1.c **** *
 156:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_Stop(void) 
 158:.\Generated_Source\PSoC5/Quad_1.c **** {
  44              		.loc 1 158 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		.loc 1 158 0
  49 0000 08B5     		push	{r3, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 3, -8
  52              		.cfi_offset 14, -4
 159:.\Generated_Source\PSoC5/Quad_1.c ****     uint8 enableInterrupts;
 160:.\Generated_Source\PSoC5/Quad_1.c **** 
 161:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT)
 162:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt8_Stop();
 163:.\Generated_Source\PSoC5/Quad_1.c ****     #else 
 164:.\Generated_Source\PSoC5/Quad_1.c ****         /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT) ||
 165:.\Generated_Source\PSoC5/Quad_1.c ****         *  (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
 166:.\Generated_Source\PSoC5/Quad_1.c ****         */
 167:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt16_Stop();    /* counter disable */
  53              		.loc 1 167 0
  54 0002 FFF7FEFF 		bl	Quad_1_Cnt16_Stop
  55              	.LVL0:
 168:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT) */
 169:.\Generated_Source\PSoC5/Quad_1.c ****  
 170:.\Generated_Source\PSoC5/Quad_1.c ****     enableInterrupts = CyEnterCriticalSection();
  56              		.loc 1 170 0
  57 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  58              	.LVL1:
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 5


 171:.\Generated_Source\PSoC5/Quad_1.c **** 
 172:.\Generated_Source\PSoC5/Quad_1.c ****     /* Disable interrupts interrupts from Statusi register */
 173:.\Generated_Source\PSoC5/Quad_1.c ****     Quad_1_SR_AUX_CONTROL &= (uint8) (~Quad_1_INTERRUPTS_ENABLE);
  59              		.loc 1 173 0
  60 000a 044A     		ldr	r2, .L3
  61 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 000e 03F0EF03 		and	r3, r3, #239
  63 0012 1370     		strb	r3, [r2]
 174:.\Generated_Source\PSoC5/Quad_1.c **** 
 175:.\Generated_Source\PSoC5/Quad_1.c ****     CyExitCriticalSection(enableInterrupts);
 176:.\Generated_Source\PSoC5/Quad_1.c **** 
 177:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
 178:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntDisable(Quad_1_ISR_NUMBER);    /* interrupt disable */
 179:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
 180:.\Generated_Source\PSoC5/Quad_1.c **** }
  64              		.loc 1 180 0
  65 0014 BDE80840 		pop	{r3, lr}
  66              		.cfi_restore 14
  67              		.cfi_restore 3
  68              		.cfi_def_cfa_offset 0
 175:.\Generated_Source\PSoC5/Quad_1.c **** 
  69              		.loc 1 175 0
  70 0018 FFF7FEBF 		b	CyExitCriticalSection
  71              	.LVL2:
  72              	.L4:
  73              		.align	2
  74              	.L3:
  75 001c 9B650040 		.word	1073767835
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	Quad_1_Stop, .-Quad_1_Stop
  79              		.section	.text.Quad_1_GetCounter,"ax",%progbits
  80              		.align	1
  81              		.global	Quad_1_GetCounter
  82              		.thumb
  83              		.thumb_func
  84              		.type	Quad_1_GetCounter, %function
  85              	Quad_1_GetCounter:
  86              	.LFB4:
 181:.\Generated_Source\PSoC5/Quad_1.c **** 
 182:.\Generated_Source\PSoC5/Quad_1.c **** 
 183:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_GetCounter
 185:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 186:.\Generated_Source\PSoC5/Quad_1.c **** *
 187:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 188:.\Generated_Source\PSoC5/Quad_1.c **** *  Reports the current value of the counter.
 189:.\Generated_Source\PSoC5/Quad_1.c **** *
 190:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 191:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 192:.\Generated_Source\PSoC5/Quad_1.c **** *
 193:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 194:.\Generated_Source\PSoC5/Quad_1.c **** *  The counter value. Return type is signed and per the counter size setting.
 195:.\Generated_Source\PSoC5/Quad_1.c **** *  A positive value indicates clockwise movement (B before A).
 196:.\Generated_Source\PSoC5/Quad_1.c **** *
 197:.\Generated_Source\PSoC5/Quad_1.c **** * Global variables:
 198:.\Generated_Source\PSoC5/Quad_1.c **** *  Quad_1_count32SoftPart - used to get hi 16 bit for current value
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 6


 199:.\Generated_Source\PSoC5/Quad_1.c **** *  of the 32-bit counter, when Counter size equal 32-bit.
 200:.\Generated_Source\PSoC5/Quad_1.c **** *
 201:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 202:.\Generated_Source\PSoC5/Quad_1.c **** int16 Quad_1_GetCounter(void) 
 203:.\Generated_Source\PSoC5/Quad_1.c **** {
  87              		.loc 1 203 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 08B5     		push	{r3, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC5/Quad_1.c ****     int16 count;
 205:.\Generated_Source\PSoC5/Quad_1.c ****     uint16 tmpCnt;
 206:.\Generated_Source\PSoC5/Quad_1.c **** 
 207:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
 208:.\Generated_Source\PSoC5/Quad_1.c ****         int16 hwCount;
 209:.\Generated_Source\PSoC5/Quad_1.c **** 
 210:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntDisable(Quad_1_ISR_NUMBER);
 211:.\Generated_Source\PSoC5/Quad_1.c **** 
 212:.\Generated_Source\PSoC5/Quad_1.c ****         tmpCnt = Quad_1_Cnt16_ReadCounter();
 213:.\Generated_Source\PSoC5/Quad_1.c ****         hwCount = (int16) ((int32) tmpCnt - (int32) Quad_1_COUNTER_INIT_VALUE);
 214:.\Generated_Source\PSoC5/Quad_1.c ****         count = Quad_1_count32SoftPart + hwCount;
 215:.\Generated_Source\PSoC5/Quad_1.c **** 
 216:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntEnable(Quad_1_ISR_NUMBER);
 217:.\Generated_Source\PSoC5/Quad_1.c ****     #else 
 218:.\Generated_Source\PSoC5/Quad_1.c ****         /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT) || 
 219:.\Generated_Source\PSoC5/Quad_1.c ****         *  (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT)
 220:.\Generated_Source\PSoC5/Quad_1.c ****         */
 221:.\Generated_Source\PSoC5/Quad_1.c ****         #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT)
 222:.\Generated_Source\PSoC5/Quad_1.c ****             tmpCnt = Quad_1_Cnt8_ReadCounter();
 223:.\Generated_Source\PSoC5/Quad_1.c ****         #else /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT) */
 224:.\Generated_Source\PSoC5/Quad_1.c ****             tmpCnt = Quad_1_Cnt16_ReadCounter();
  95              		.loc 1 224 0
  96 0002 FFF7FEFF 		bl	Quad_1_Cnt16_ReadCounter
  97              	.LVL3:
 225:.\Generated_Source\PSoC5/Quad_1.c ****         #endif  /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT */
 226:.\Generated_Source\PSoC5/Quad_1.c **** 
 227:.\Generated_Source\PSoC5/Quad_1.c ****         count = (int16) ((int32) tmpCnt -
  98              		.loc 1 227 0
  99 0006 A0F50040 		sub	r0, r0, #32768
 100              	.LVL4:
 228:.\Generated_Source\PSoC5/Quad_1.c ****                 (int32) Quad_1_COUNTER_INIT_VALUE);
 229:.\Generated_Source\PSoC5/Quad_1.c **** 
 230:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */ 
 231:.\Generated_Source\PSoC5/Quad_1.c **** 
 232:.\Generated_Source\PSoC5/Quad_1.c ****     return (count);
 233:.\Generated_Source\PSoC5/Quad_1.c **** }
 101              		.loc 1 233 0
 102 000a 00B2     		sxth	r0, r0
 103 000c 08BD     		pop	{r3, pc}
 104              		.cfi_endproc
 105              	.LFE4:
 106              		.size	Quad_1_GetCounter, .-Quad_1_GetCounter
 107              		.section	.text.Quad_1_SetCounter,"ax",%progbits
 108              		.align	1
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 7


 109              		.global	Quad_1_SetCounter
 110              		.thumb
 111              		.thumb_func
 112              		.type	Quad_1_SetCounter, %function
 113              	Quad_1_SetCounter:
 114              	.LFB5:
 234:.\Generated_Source\PSoC5/Quad_1.c **** 
 235:.\Generated_Source\PSoC5/Quad_1.c **** 
 236:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_SetCounter
 238:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC5/Quad_1.c **** *
 240:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 241:.\Generated_Source\PSoC5/Quad_1.c **** *  Sets the current value of the counter.
 242:.\Generated_Source\PSoC5/Quad_1.c **** *
 243:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 244:.\Generated_Source\PSoC5/Quad_1.c **** *  value:  The new value. Parameter type is signed and per the counter size
 245:.\Generated_Source\PSoC5/Quad_1.c **** *  setting.
 246:.\Generated_Source\PSoC5/Quad_1.c **** *
 247:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 248:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 249:.\Generated_Source\PSoC5/Quad_1.c **** *
 250:.\Generated_Source\PSoC5/Quad_1.c **** * Global variables:
 251:.\Generated_Source\PSoC5/Quad_1.c **** *  Quad_1_count32SoftPart - modified to set hi 16 bit for current
 252:.\Generated_Source\PSoC5/Quad_1.c **** *  value of the 32-bit counter, when Counter size equal 32-bit.
 253:.\Generated_Source\PSoC5/Quad_1.c **** *
 254:.\Generated_Source\PSoC5/Quad_1.c **** * Reentrant:
 255:.\Generated_Source\PSoC5/Quad_1.c **** *  No.
 256:.\Generated_Source\PSoC5/Quad_1.c **** *
 257:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 258:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_SetCounter(int16 value) 
 259:.\Generated_Source\PSoC5/Quad_1.c **** {
 115              		.loc 1 259 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL5:
 260:.\Generated_Source\PSoC5/Quad_1.c ****     #if ((Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT) || \
 261:.\Generated_Source\PSoC5/Quad_1.c ****          (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT))
 262:.\Generated_Source\PSoC5/Quad_1.c ****         uint16 count;
 263:.\Generated_Source\PSoC5/Quad_1.c ****         
 264:.\Generated_Source\PSoC5/Quad_1.c ****         if (value >= 0)
 265:.\Generated_Source\PSoC5/Quad_1.c ****         {
 266:.\Generated_Source\PSoC5/Quad_1.c ****             count = (uint16) value + Quad_1_COUNTER_INIT_VALUE;
 121              		.loc 1 266 0
 122 0000 A0F50040 		sub	r0, r0, #32768
 123              	.LVL6:
 267:.\Generated_Source\PSoC5/Quad_1.c ****         }
 268:.\Generated_Source\PSoC5/Quad_1.c ****         else
 269:.\Generated_Source\PSoC5/Quad_1.c ****         {
 270:.\Generated_Source\PSoC5/Quad_1.c ****             count = Quad_1_COUNTER_INIT_VALUE - (uint16)(-value);
 271:.\Generated_Source\PSoC5/Quad_1.c ****         }
 272:.\Generated_Source\PSoC5/Quad_1.c ****         #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT)
 273:.\Generated_Source\PSoC5/Quad_1.c ****             Quad_1_Cnt8_WriteCounter(count);
 274:.\Generated_Source\PSoC5/Quad_1.c ****         #else /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT) */
 275:.\Generated_Source\PSoC5/Quad_1.c ****             Quad_1_Cnt16_WriteCounter(count);
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 8


 124              		.loc 1 275 0
 125 0004 80B2     		uxth	r0, r0
 126 0006 FFF7FEBF 		b	Quad_1_Cnt16_WriteCounter
 127              	.LVL7:
 128              		.cfi_endproc
 129              	.LFE5:
 130              		.size	Quad_1_SetCounter, .-Quad_1_SetCounter
 131              		.section	.text.Quad_1_GetEvents,"ax",%progbits
 132              		.align	1
 133              		.global	Quad_1_GetEvents
 134              		.thumb
 135              		.thumb_func
 136              		.type	Quad_1_GetEvents, %function
 137              	Quad_1_GetEvents:
 138              	.LFB6:
 276:.\Generated_Source\PSoC5/Quad_1.c ****         #endif  /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT */
 277:.\Generated_Source\PSoC5/Quad_1.c ****     #else /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT) */
 278:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntDisable(Quad_1_ISR_NUMBER);
 279:.\Generated_Source\PSoC5/Quad_1.c **** 
 280:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt16_WriteCounter(Quad_1_COUNTER_INIT_VALUE);
 281:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_count32SoftPart = value;
 282:.\Generated_Source\PSoC5/Quad_1.c **** 
 283:.\Generated_Source\PSoC5/Quad_1.c ****         CyIntEnable(Quad_1_ISR_NUMBER);
 284:.\Generated_Source\PSoC5/Quad_1.c ****     #endif  /* (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT) ||
 285:.\Generated_Source\PSoC5/Quad_1.c ****              * (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_16_BIT)
 286:.\Generated_Source\PSoC5/Quad_1.c ****              */
 287:.\Generated_Source\PSoC5/Quad_1.c **** }
 288:.\Generated_Source\PSoC5/Quad_1.c **** 
 289:.\Generated_Source\PSoC5/Quad_1.c **** 
 290:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 291:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_GetEvents
 292:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 293:.\Generated_Source\PSoC5/Quad_1.c **** * 
 294:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 295:.\Generated_Source\PSoC5/Quad_1.c **** *   Reports the current status of events. This function clears the bits of the 
 296:.\Generated_Source\PSoC5/Quad_1.c **** *   status register.
 297:.\Generated_Source\PSoC5/Quad_1.c **** *
 298:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 299:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 300:.\Generated_Source\PSoC5/Quad_1.c **** *
 301:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 302:.\Generated_Source\PSoC5/Quad_1.c **** *  The events, as bits in an unsigned 8-bit value:
 303:.\Generated_Source\PSoC5/Quad_1.c **** *    Bit      Description
 304:.\Generated_Source\PSoC5/Quad_1.c **** *     0        Counter overflow.
 305:.\Generated_Source\PSoC5/Quad_1.c **** *     1        Counter underflow.
 306:.\Generated_Source\PSoC5/Quad_1.c **** *     2        Counter reset due to index, if index input is used.
 307:.\Generated_Source\PSoC5/Quad_1.c **** *     3        Invalid A, B inputs state transition.
 308:.\Generated_Source\PSoC5/Quad_1.c **** *
 309:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC5/Quad_1.c **** uint8 Quad_1_GetEvents(void) 
 311:.\Generated_Source\PSoC5/Quad_1.c **** {
 139              		.loc 1 311 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 312:.\Generated_Source\PSoC5/Quad_1.c ****     return (Quad_1_STATUS_REG & Quad_1_INIT_INT_MASK);
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 9


 144              		.loc 1 312 0
 145 0000 024B     		ldr	r3, .L8
 146 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 313:.\Generated_Source\PSoC5/Quad_1.c **** }
 147              		.loc 1 313 0
 148 0004 00F00F00 		and	r0, r0, #15
 149 0008 7047     		bx	lr
 150              	.L9:
 151 000a 00BF     		.align	2
 152              	.L8:
 153 000c 6B650040 		.word	1073767787
 154              		.cfi_endproc
 155              	.LFE6:
 156              		.size	Quad_1_GetEvents, .-Quad_1_GetEvents
 157              		.section	.text.Quad_1_Enable,"ax",%progbits
 158              		.align	1
 159              		.global	Quad_1_Enable
 160              		.thumb
 161              		.thumb_func
 162              		.type	Quad_1_Enable, %function
 163              	Quad_1_Enable:
 164              	.LFB1:
  71:.\Generated_Source\PSoC5/Quad_1.c ****     uint8 enableInterrupts;
 165              		.loc 1 71 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL8:
 170 0000 08B5     		push	{r3, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 174              	.LBB6:
 175              	.LBB7:
 314:.\Generated_Source\PSoC5/Quad_1.c **** 
 315:.\Generated_Source\PSoC5/Quad_1.c **** 
 316:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_SetInterruptMask
 318:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 319:.\Generated_Source\PSoC5/Quad_1.c **** *
 320:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 321:.\Generated_Source\PSoC5/Quad_1.c **** *  Enables / disables interrupts due to the events.
 322:.\Generated_Source\PSoC5/Quad_1.c **** *  For the 32-bit counter, the overflow, underflow and reset interrupts cannot
 323:.\Generated_Source\PSoC5/Quad_1.c **** *  be disabled, these bits are ignored.
 324:.\Generated_Source\PSoC5/Quad_1.c **** *
 325:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 326:.\Generated_Source\PSoC5/Quad_1.c **** *  mask: Enable / disable bits in an 8-bit value, where 1 enables the interrupt.
 327:.\Generated_Source\PSoC5/Quad_1.c **** *
 328:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 329:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 330:.\Generated_Source\PSoC5/Quad_1.c **** *
 331:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/Quad_1.c **** void Quad_1_SetInterruptMask(uint8 mask) 
 333:.\Generated_Source\PSoC5/Quad_1.c **** {
 334:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
 335:.\Generated_Source\PSoC5/Quad_1.c ****         /* Underflow, Overflow and Reset interrupts for 32-bit Counter are always enable */
 336:.\Generated_Source\PSoC5/Quad_1.c ****         mask |= (Quad_1_COUNTER_OVERFLOW | Quad_1_COUNTER_UNDERFLOW |
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 10


 337:.\Generated_Source\PSoC5/Quad_1.c ****                  Quad_1_COUNTER_RESET);
 338:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT */
 339:.\Generated_Source\PSoC5/Quad_1.c **** 
 340:.\Generated_Source\PSoC5/Quad_1.c ****     Quad_1_STATUS_MASK = mask;
 176              		.loc 1 340 0
 177 0002 084B     		ldr	r3, .L11
 178 0004 0F22     		movs	r2, #15
 179 0006 1A70     		strb	r2, [r3]
 180              	.LBE7:
 181              	.LBE6:
  77:.\Generated_Source\PSoC5/Quad_1.c ****     
 182              		.loc 1 77 0
 183 0008 FFF7FEFF 		bl	Quad_1_GetEvents
 184              	.LVL9:
  79:.\Generated_Source\PSoC5/Quad_1.c **** 
 185              		.loc 1 79 0
 186 000c FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL10:
  82:.\Generated_Source\PSoC5/Quad_1.c **** 
 188              		.loc 1 82 0
 189 0010 054A     		ldr	r2, .L11+4
 190 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 0014 43F01003 		orr	r3, r3, #16
 192 0018 1370     		strb	r3, [r2]
  90:.\Generated_Source\PSoC5/Quad_1.c **** 
 193              		.loc 1 90 0
 194 001a BDE80840 		pop	{r3, lr}
 195              		.cfi_restore 14
 196              		.cfi_restore 3
 197              		.cfi_def_cfa_offset 0
  84:.\Generated_Source\PSoC5/Quad_1.c **** 
 198              		.loc 1 84 0
 199 001e FFF7FEBF 		b	CyExitCriticalSection
 200              	.LVL11:
 201              	.L12:
 202 0022 00BF     		.align	2
 203              	.L11:
 204 0024 8B650040 		.word	1073767819
 205 0028 9B650040 		.word	1073767835
 206              		.cfi_endproc
 207              	.LFE1:
 208              		.size	Quad_1_Enable, .-Quad_1_Enable
 209              		.section	.text.Quad_1_Start,"ax",%progbits
 210              		.align	1
 211              		.global	Quad_1_Start
 212              		.thumb
 213              		.thumb_func
 214              		.type	Quad_1_Start, %function
 215              	Quad_1_Start:
 216              	.LFB2:
 117:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT)
 217              		.loc 1 117 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              		.cfi_def_cfa_offset 8
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 11


 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
 125:.\Generated_Source\PSoC5/Quad_1.c ****         Quad_1_Cnt16_WriteCounter(Quad_1_COUNTER_INIT_VALUE);
 225              		.loc 1 125 0
 226 0002 FFF7FEFF 		bl	Quad_1_Cnt16_Start
 227              	.LVL12:
 126:.\Generated_Source\PSoC5/Quad_1.c ****     #endif /* Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_8_BIT */
 228              		.loc 1 126 0
 229 0006 4FF40040 		mov	r0, #32768
 230 000a FFF7FEFF 		bl	Quad_1_Cnt16_WriteCounter
 231              	.LVL13:
 133:.\Generated_Source\PSoC5/Quad_1.c ****     {
 232              		.loc 1 133 0
 233 000e 044B     		ldr	r3, .L16
 234 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 235 0012 0AB9     		cbnz	r2, .L14
 136:.\Generated_Source\PSoC5/Quad_1.c ****     }
 236              		.loc 1 136 0
 237 0014 0122     		movs	r2, #1
 238 0016 1A70     		strb	r2, [r3]
 239              	.L14:
 140:.\Generated_Source\PSoC5/Quad_1.c **** 
 240              		.loc 1 140 0
 241 0018 BDE80840 		pop	{r3, lr}
 242              		.cfi_restore 14
 243              		.cfi_restore 3
 244              		.cfi_def_cfa_offset 0
 139:.\Generated_Source\PSoC5/Quad_1.c **** }
 245              		.loc 1 139 0
 246 001c FFF7FEBF 		b	Quad_1_Enable
 247              	.LVL14:
 248              	.L17:
 249              		.align	2
 250              	.L16:
 251 0020 00000000 		.word	.LANCHOR0
 252              		.cfi_endproc
 253              	.LFE2:
 254              		.size	Quad_1_Start, .-Quad_1_Start
 255              		.section	.text.Quad_1_SetInterruptMask,"ax",%progbits
 256              		.align	1
 257              		.global	Quad_1_SetInterruptMask
 258              		.thumb
 259              		.thumb_func
 260              		.type	Quad_1_SetInterruptMask, %function
 261              	Quad_1_SetInterruptMask:
 262              	.LFB7:
 333:.\Generated_Source\PSoC5/Quad_1.c ****     #if (Quad_1_COUNTER_SIZE == Quad_1_COUNTER_SIZE_32_BIT)
 263              		.loc 1 333 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL15:
 269              		.loc 1 340 0
 270 0000 014B     		ldr	r3, .L19
 271 0002 1870     		strb	r0, [r3]
 272 0004 7047     		bx	lr
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 12


 273              	.L20:
 274 0006 00BF     		.align	2
 275              	.L19:
 276 0008 8B650040 		.word	1073767819
 277              		.cfi_endproc
 278              	.LFE7:
 279              		.size	Quad_1_SetInterruptMask, .-Quad_1_SetInterruptMask
 280              		.section	.text.Quad_1_GetInterruptMask,"ax",%progbits
 281              		.align	1
 282              		.global	Quad_1_GetInterruptMask
 283              		.thumb
 284              		.thumb_func
 285              		.type	Quad_1_GetInterruptMask, %function
 286              	Quad_1_GetInterruptMask:
 287              	.LFB8:
 341:.\Generated_Source\PSoC5/Quad_1.c **** }
 342:.\Generated_Source\PSoC5/Quad_1.c **** 
 343:.\Generated_Source\PSoC5/Quad_1.c **** 
 344:.\Generated_Source\PSoC5/Quad_1.c **** /*******************************************************************************
 345:.\Generated_Source\PSoC5/Quad_1.c **** * Function Name: Quad_1_GetInterruptMask
 346:.\Generated_Source\PSoC5/Quad_1.c **** ********************************************************************************
 347:.\Generated_Source\PSoC5/Quad_1.c **** *
 348:.\Generated_Source\PSoC5/Quad_1.c **** * Summary:
 349:.\Generated_Source\PSoC5/Quad_1.c **** *  Reports the current interrupt mask settings.
 350:.\Generated_Source\PSoC5/Quad_1.c **** *
 351:.\Generated_Source\PSoC5/Quad_1.c **** * Parameters:
 352:.\Generated_Source\PSoC5/Quad_1.c **** *  None.
 353:.\Generated_Source\PSoC5/Quad_1.c **** *
 354:.\Generated_Source\PSoC5/Quad_1.c **** * Return:
 355:.\Generated_Source\PSoC5/Quad_1.c **** *  Enable / disable bits in an 8-bit value, where 1 enables the interrupt.
 356:.\Generated_Source\PSoC5/Quad_1.c **** *  For the 32-bit counter, the overflow, underflow and reset enable bits are
 357:.\Generated_Source\PSoC5/Quad_1.c **** *  always set.
 358:.\Generated_Source\PSoC5/Quad_1.c **** *
 359:.\Generated_Source\PSoC5/Quad_1.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC5/Quad_1.c **** uint8 Quad_1_GetInterruptMask(void) 
 361:.\Generated_Source\PSoC5/Quad_1.c **** {
 288              		.loc 1 361 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 362:.\Generated_Source\PSoC5/Quad_1.c ****     return (Quad_1_STATUS_MASK & Quad_1_INIT_INT_MASK);
 293              		.loc 1 362 0
 294 0000 024B     		ldr	r3, .L22
 295 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 363:.\Generated_Source\PSoC5/Quad_1.c **** }
 296              		.loc 1 363 0
 297 0004 00F00F00 		and	r0, r0, #15
 298 0008 7047     		bx	lr
 299              	.L23:
 300 000a 00BF     		.align	2
 301              	.L22:
 302 000c 8B650040 		.word	1073767819
 303              		.cfi_endproc
 304              	.LFE8:
 305              		.size	Quad_1_GetInterruptMask, .-Quad_1_GetInterruptMask
 306              		.global	Quad_1_initVar
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 13


 307              		.bss
 308              		.set	.LANCHOR0,. + 0
 309              		.type	Quad_1_initVar, %object
 310              		.size	Quad_1_initVar, 1
 311              	Quad_1_initVar:
 312 0000 00       		.space	1
 313              		.text
 314              	.Letext0:
 315              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 316              		.file 3 ".\\Generated_Source\\PSoC5\\Quad_1_Cnt16.h"
 317              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 318              		.section	.debug_info,"",%progbits
 319              	.Ldebug_info0:
 320 0000 EC020000 		.4byte	0x2ec
 321 0004 0400     		.2byte	0x4
 322 0006 00000000 		.4byte	.Ldebug_abbrev0
 323 000a 04       		.byte	0x4
 324 000b 01       		.uleb128 0x1
 325 000c 77000000 		.4byte	.LASF35
 326 0010 01       		.byte	0x1
 327 0011 E9010000 		.4byte	.LASF36
 328 0015 13010000 		.4byte	.LASF37
 329 0019 00000000 		.4byte	.Ldebug_ranges0+0
 330 001d 00000000 		.4byte	0
 331 0021 00000000 		.4byte	.Ldebug_line0
 332 0025 02       		.uleb128 0x2
 333 0026 04       		.byte	0x4
 334 0027 05       		.byte	0x5
 335 0028 696E7400 		.ascii	"int\000"
 336 002c 03       		.uleb128 0x3
 337 002d 04       		.byte	0x4
 338 002e 07       		.byte	0x7
 339 002f DC010000 		.4byte	.LASF0
 340 0033 03       		.uleb128 0x3
 341 0034 01       		.byte	0x1
 342 0035 06       		.byte	0x6
 343 0036 FE020000 		.4byte	.LASF1
 344 003a 03       		.uleb128 0x3
 345 003b 01       		.byte	0x1
 346 003c 08       		.byte	0x8
 347 003d 05010000 		.4byte	.LASF2
 348 0041 03       		.uleb128 0x3
 349 0042 02       		.byte	0x2
 350 0043 05       		.byte	0x5
 351 0044 B4010000 		.4byte	.LASF3
 352 0048 03       		.uleb128 0x3
 353 0049 02       		.byte	0x2
 354 004a 07       		.byte	0x7
 355 004b 3B000000 		.4byte	.LASF4
 356 004f 03       		.uleb128 0x3
 357 0050 04       		.byte	0x4
 358 0051 05       		.byte	0x5
 359 0052 E1020000 		.4byte	.LASF5
 360 0056 03       		.uleb128 0x3
 361 0057 04       		.byte	0x4
 362 0058 07       		.byte	0x7
 363 0059 80010000 		.4byte	.LASF6
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 14


 364 005d 03       		.uleb128 0x3
 365 005e 08       		.byte	0x8
 366 005f 05       		.byte	0x5
 367 0060 72020000 		.4byte	.LASF7
 368 0064 03       		.uleb128 0x3
 369 0065 08       		.byte	0x8
 370 0066 07       		.byte	0x7
 371 0067 60000000 		.4byte	.LASF8
 372 006b 03       		.uleb128 0x3
 373 006c 04       		.byte	0x4
 374 006d 07       		.byte	0x7
 375 006e 58020000 		.4byte	.LASF9
 376 0072 03       		.uleb128 0x3
 377 0073 01       		.byte	0x1
 378 0074 08       		.byte	0x8
 379 0075 EA020000 		.4byte	.LASF10
 380 0079 04       		.uleb128 0x4
 381 007a DB020000 		.4byte	.LASF11
 382 007e 02       		.byte	0x2
 383 007f 9201     		.2byte	0x192
 384 0081 3A000000 		.4byte	0x3a
 385 0085 04       		.uleb128 0x4
 386 0086 BE010000 		.4byte	.LASF12
 387 008a 02       		.byte	0x2
 388 008b 9301     		.2byte	0x193
 389 008d 48000000 		.4byte	0x48
 390 0091 04       		.uleb128 0x4
 391 0092 39020000 		.4byte	.LASF13
 392 0096 02       		.byte	0x2
 393 0097 9601     		.2byte	0x196
 394 0099 41000000 		.4byte	0x41
 395 009d 04       		.uleb128 0x4
 396 009e 92010000 		.4byte	.LASF14
 397 00a2 02       		.byte	0x2
 398 00a3 9701     		.2byte	0x197
 399 00a5 4F000000 		.4byte	0x4f
 400 00a9 03       		.uleb128 0x3
 401 00aa 04       		.byte	0x4
 402 00ab 04       		.byte	0x4
 403 00ac 5A000000 		.4byte	.LASF15
 404 00b0 03       		.uleb128 0x3
 405 00b1 08       		.byte	0x8
 406 00b2 04       		.byte	0x4
 407 00b3 AD010000 		.4byte	.LASF16
 408 00b7 04       		.uleb128 0x4
 409 00b8 5B010000 		.4byte	.LASF17
 410 00bc 02       		.byte	0x2
 411 00bd 3C02     		.2byte	0x23c
 412 00bf C3000000 		.4byte	0xc3
 413 00c3 05       		.uleb128 0x5
 414 00c4 79000000 		.4byte	0x79
 415 00c8 06       		.uleb128 0x6
 416 00c9 0B020000 		.4byte	.LASF29
 417 00cd 01       		.byte	0x1
 418 00ce 4C01     		.2byte	0x14c
 419 00d0 01       		.byte	0x1
 420 00d1 E2000000 		.4byte	0xe2
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 15


 421 00d5 07       		.uleb128 0x7
 422 00d6 98020000 		.4byte	.LASF38
 423 00da 01       		.byte	0x1
 424 00db 4C01     		.2byte	0x14c
 425 00dd 79000000 		.4byte	0x79
 426 00e1 00       		.byte	0
 427 00e2 08       		.uleb128 0x8
 428 00e3 CF020000 		.4byte	.LASF27
 429 00e7 01       		.byte	0x1
 430 00e8 2A       		.byte	0x2a
 431 00e9 01       		.byte	0x1
 432 00ea 09       		.uleb128 0x9
 433 00eb E2000000 		.4byte	0xe2
 434 00ef 00000000 		.4byte	.LFB0
 435 00f3 02000000 		.4byte	.LFE0-.LFB0
 436 00f7 01       		.uleb128 0x1
 437 00f8 9C       		.byte	0x9c
 438 00f9 0A       		.uleb128 0xa
 439 00fa 4E000000 		.4byte	.LASF21
 440 00fe 01       		.byte	0x1
 441 00ff 9D       		.byte	0x9d
 442 0100 00000000 		.4byte	.LFB3
 443 0104 20000000 		.4byte	.LFE3-.LFB3
 444 0108 01       		.uleb128 0x1
 445 0109 9C       		.byte	0x9c
 446 010a 39010000 		.4byte	0x139
 447 010e 0B       		.uleb128 0xb
 448 010f 61020000 		.4byte	.LASF18
 449 0113 01       		.byte	0x1
 450 0114 9F       		.byte	0x9f
 451 0115 79000000 		.4byte	0x79
 452 0119 00000000 		.4byte	.LLST0
 453 011d 0C       		.uleb128 0xc
 454 011e 06000000 		.4byte	.LVL0
 455 0122 A9020000 		.4byte	0x2a9
 456 0126 0C       		.uleb128 0xc
 457 0127 0A000000 		.4byte	.LVL1
 458 012b B0020000 		.4byte	0x2b0
 459 012f 0D       		.uleb128 0xd
 460 0130 1C000000 		.4byte	.LVL2
 461 0134 BB020000 		.4byte	0x2bb
 462 0138 00       		.byte	0
 463 0139 0E       		.uleb128 0xe
 464 013a A3020000 		.4byte	.LASF39
 465 013e 01       		.byte	0x1
 466 013f CA       		.byte	0xca
 467 0140 91000000 		.4byte	0x91
 468 0144 00000000 		.4byte	.LFB4
 469 0148 0E000000 		.4byte	.LFE4-.LFB4
 470 014c 01       		.uleb128 0x1
 471 014d 9C       		.byte	0x9c
 472 014e 7A010000 		.4byte	0x17a
 473 0152 0B       		.uleb128 0xb
 474 0153 23000000 		.4byte	.LASF19
 475 0157 01       		.byte	0x1
 476 0158 CC       		.byte	0xcc
 477 0159 91000000 		.4byte	0x91
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 16


 478 015d 13000000 		.4byte	.LLST1
 479 0161 0B       		.uleb128 0xb
 480 0162 98010000 		.4byte	.LASF20
 481 0166 01       		.byte	0x1
 482 0167 CD       		.byte	0xcd
 483 0168 85000000 		.4byte	0x85
 484 016c 2A000000 		.4byte	.LLST2
 485 0170 0C       		.uleb128 0xc
 486 0171 06000000 		.4byte	.LVL3
 487 0175 CC020000 		.4byte	0x2cc
 488 0179 00       		.byte	0
 489 017a 0F       		.uleb128 0xf
 490 017b 29000000 		.4byte	.LASF22
 491 017f 01       		.byte	0x1
 492 0180 0201     		.2byte	0x102
 493 0182 00000000 		.4byte	.LFB5
 494 0186 0A000000 		.4byte	.LFE5-.LFB5
 495 018a 01       		.uleb128 0x1
 496 018b 9C       		.byte	0x9c
 497 018c BA010000 		.4byte	0x1ba
 498 0190 10       		.uleb128 0x10
 499 0191 9D020000 		.4byte	.LASF40
 500 0195 01       		.byte	0x1
 501 0196 0201     		.2byte	0x102
 502 0198 91000000 		.4byte	0x91
 503 019c 3D000000 		.4byte	.LLST3
 504 01a0 11       		.uleb128 0x11
 505 01a1 23000000 		.4byte	.LASF19
 506 01a5 01       		.byte	0x1
 507 01a6 0601     		.2byte	0x106
 508 01a8 85000000 		.4byte	0x85
 509 01ac 5E000000 		.4byte	.LLST4
 510 01b0 0D       		.uleb128 0xd
 511 01b1 0A000000 		.4byte	.LVL7
 512 01b5 D7020000 		.4byte	0x2d7
 513 01b9 00       		.byte	0
 514 01ba 12       		.uleb128 0x12
 515 01bb 00000000 		.4byte	.LASF25
 516 01bf 01       		.byte	0x1
 517 01c0 3601     		.2byte	0x136
 518 01c2 79000000 		.4byte	0x79
 519 01c6 00000000 		.4byte	.LFB6
 520 01ca 10000000 		.4byte	.LFE6-.LFB6
 521 01ce 01       		.uleb128 0x1
 522 01cf 9C       		.byte	0x9c
 523 01d0 0A       		.uleb128 0xa
 524 01d1 9F010000 		.4byte	.LASF23
 525 01d5 01       		.byte	0x1
 526 01d6 46       		.byte	0x46
 527 01d7 00000000 		.4byte	.LFB1
 528 01db 2C000000 		.4byte	.LFE1-.LFB1
 529 01df 01       		.uleb128 0x1
 530 01e0 9C       		.byte	0x9c
 531 01e1 2A020000 		.4byte	0x22a
 532 01e5 0B       		.uleb128 0xb
 533 01e6 61020000 		.4byte	.LASF18
 534 01ea 01       		.byte	0x1
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 17


 535 01eb 48       		.byte	0x48
 536 01ec 79000000 		.4byte	0x79
 537 01f0 87000000 		.4byte	.LLST5
 538 01f4 13       		.uleb128 0x13
 539 01f5 C8000000 		.4byte	0xc8
 540 01f9 02000000 		.4byte	.LBB6
 541 01fd 06000000 		.4byte	.LBE6-.LBB6
 542 0201 01       		.byte	0x1
 543 0202 4A       		.byte	0x4a
 544 0203 0E020000 		.4byte	0x20e
 545 0207 14       		.uleb128 0x14
 546 0208 D5000000 		.4byte	0xd5
 547 020c 0F       		.byte	0xf
 548 020d 00       		.byte	0
 549 020e 0C       		.uleb128 0xc
 550 020f 0C000000 		.4byte	.LVL9
 551 0213 BA010000 		.4byte	0x1ba
 552 0217 0C       		.uleb128 0xc
 553 0218 10000000 		.4byte	.LVL10
 554 021c B0020000 		.4byte	0x2b0
 555 0220 0D       		.uleb128 0xd
 556 0221 22000000 		.4byte	.LVL11
 557 0225 BB020000 		.4byte	0x2bb
 558 0229 00       		.byte	0
 559 022a 0A       		.uleb128 0xa
 560 022b 73010000 		.4byte	.LASF24
 561 022f 01       		.byte	0x1
 562 0230 74       		.byte	0x74
 563 0231 00000000 		.4byte	.LFB2
 564 0235 24000000 		.4byte	.LFE2-.LFB2
 565 0239 01       		.uleb128 0x1
 566 023a 9C       		.byte	0x9c
 567 023b 67020000 		.4byte	0x267
 568 023f 0C       		.uleb128 0xc
 569 0240 06000000 		.4byte	.LVL12
 570 0244 E8020000 		.4byte	0x2e8
 571 0248 15       		.uleb128 0x15
 572 0249 0E000000 		.4byte	.LVL13
 573 024d D7020000 		.4byte	0x2d7
 574 0251 5D020000 		.4byte	0x25d
 575 0255 16       		.uleb128 0x16
 576 0256 01       		.uleb128 0x1
 577 0257 50       		.byte	0x50
 578 0258 03       		.uleb128 0x3
 579 0259 0B       		.byte	0xb
 580 025a 0080     		.2byte	0x8000
 581 025c 00       		.byte	0
 582 025d 0D       		.uleb128 0xd
 583 025e 20000000 		.4byte	.LVL14
 584 0262 D0010000 		.4byte	0x1d0
 585 0266 00       		.byte	0
 586 0267 17       		.uleb128 0x17
 587 0268 C8000000 		.4byte	0xc8
 588 026c 00000000 		.4byte	.LFB7
 589 0270 0C000000 		.4byte	.LFE7-.LFB7
 590 0274 01       		.uleb128 0x1
 591 0275 9C       		.byte	0x9c
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 18


 592 0276 82020000 		.4byte	0x282
 593 027a 18       		.uleb128 0x18
 594 027b D5000000 		.4byte	0xd5
 595 027f 01       		.uleb128 0x1
 596 0280 50       		.byte	0x50
 597 0281 00       		.byte	0
 598 0282 12       		.uleb128 0x12
 599 0283 80020000 		.4byte	.LASF26
 600 0287 01       		.byte	0x1
 601 0288 6801     		.2byte	0x168
 602 028a 79000000 		.4byte	0x79
 603 028e 00000000 		.4byte	.LFB8
 604 0292 10000000 		.4byte	.LFE8-.LFB8
 605 0296 01       		.uleb128 0x1
 606 0297 9C       		.byte	0x9c
 607 0298 19       		.uleb128 0x19
 608 0299 EF020000 		.4byte	.LASF41
 609 029d 01       		.byte	0x1
 610 029e 19       		.byte	0x19
 611 029f 79000000 		.4byte	0x79
 612 02a3 05       		.uleb128 0x5
 613 02a4 03       		.byte	0x3
 614 02a5 00000000 		.4byte	Quad_1_initVar
 615 02a9 1A       		.uleb128 0x1a
 616 02aa 11000000 		.4byte	.LASF28
 617 02ae 03       		.byte	0x3
 618 02af 50       		.byte	0x50
 619 02b0 1B       		.uleb128 0x1b
 620 02b1 C5010000 		.4byte	.LASF31
 621 02b5 04       		.byte	0x4
 622 02b6 7D       		.byte	0x7d
 623 02b7 79000000 		.4byte	0x79
 624 02bb 1C       		.uleb128 0x1c
 625 02bc 23020000 		.4byte	.LASF30
 626 02c0 04       		.byte	0x4
 627 02c1 7E       		.byte	0x7e
 628 02c2 CC020000 		.4byte	0x2cc
 629 02c6 1D       		.uleb128 0x1d
 630 02c7 79000000 		.4byte	0x79
 631 02cb 00       		.byte	0
 632 02cc 1B       		.uleb128 0x1b
 633 02cd 3F020000 		.4byte	.LASF32
 634 02d1 03       		.byte	0x3
 635 02d2 5D       		.byte	0x5d
 636 02d3 85000000 		.4byte	0x85
 637 02d7 1C       		.uleb128 0x1c
 638 02d8 B5020000 		.4byte	.LASF33
 639 02dc 03       		.byte	0x3
 640 02dd 5A       		.byte	0x5a
 641 02de E8020000 		.4byte	0x2e8
 642 02e2 1D       		.uleb128 0x1d
 643 02e3 85000000 		.4byte	0x85
 644 02e7 00       		.byte	0
 645 02e8 1A       		.uleb128 0x1a
 646 02e9 60010000 		.4byte	.LASF34
 647 02ed 03       		.byte	0x3
 648 02ee 4F       		.byte	0x4f
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 19


 649 02ef 00       		.byte	0
 650              		.section	.debug_abbrev,"",%progbits
 651              	.Ldebug_abbrev0:
 652 0000 01       		.uleb128 0x1
 653 0001 11       		.uleb128 0x11
 654 0002 01       		.byte	0x1
 655 0003 25       		.uleb128 0x25
 656 0004 0E       		.uleb128 0xe
 657 0005 13       		.uleb128 0x13
 658 0006 0B       		.uleb128 0xb
 659 0007 03       		.uleb128 0x3
 660 0008 0E       		.uleb128 0xe
 661 0009 1B       		.uleb128 0x1b
 662 000a 0E       		.uleb128 0xe
 663 000b 55       		.uleb128 0x55
 664 000c 17       		.uleb128 0x17
 665 000d 11       		.uleb128 0x11
 666 000e 01       		.uleb128 0x1
 667 000f 10       		.uleb128 0x10
 668 0010 17       		.uleb128 0x17
 669 0011 00       		.byte	0
 670 0012 00       		.byte	0
 671 0013 02       		.uleb128 0x2
 672 0014 24       		.uleb128 0x24
 673 0015 00       		.byte	0
 674 0016 0B       		.uleb128 0xb
 675 0017 0B       		.uleb128 0xb
 676 0018 3E       		.uleb128 0x3e
 677 0019 0B       		.uleb128 0xb
 678 001a 03       		.uleb128 0x3
 679 001b 08       		.uleb128 0x8
 680 001c 00       		.byte	0
 681 001d 00       		.byte	0
 682 001e 03       		.uleb128 0x3
 683 001f 24       		.uleb128 0x24
 684 0020 00       		.byte	0
 685 0021 0B       		.uleb128 0xb
 686 0022 0B       		.uleb128 0xb
 687 0023 3E       		.uleb128 0x3e
 688 0024 0B       		.uleb128 0xb
 689 0025 03       		.uleb128 0x3
 690 0026 0E       		.uleb128 0xe
 691 0027 00       		.byte	0
 692 0028 00       		.byte	0
 693 0029 04       		.uleb128 0x4
 694 002a 16       		.uleb128 0x16
 695 002b 00       		.byte	0
 696 002c 03       		.uleb128 0x3
 697 002d 0E       		.uleb128 0xe
 698 002e 3A       		.uleb128 0x3a
 699 002f 0B       		.uleb128 0xb
 700 0030 3B       		.uleb128 0x3b
 701 0031 05       		.uleb128 0x5
 702 0032 49       		.uleb128 0x49
 703 0033 13       		.uleb128 0x13
 704 0034 00       		.byte	0
 705 0035 00       		.byte	0
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 20


 706 0036 05       		.uleb128 0x5
 707 0037 35       		.uleb128 0x35
 708 0038 00       		.byte	0
 709 0039 49       		.uleb128 0x49
 710 003a 13       		.uleb128 0x13
 711 003b 00       		.byte	0
 712 003c 00       		.byte	0
 713 003d 06       		.uleb128 0x6
 714 003e 2E       		.uleb128 0x2e
 715 003f 01       		.byte	0x1
 716 0040 3F       		.uleb128 0x3f
 717 0041 19       		.uleb128 0x19
 718 0042 03       		.uleb128 0x3
 719 0043 0E       		.uleb128 0xe
 720 0044 3A       		.uleb128 0x3a
 721 0045 0B       		.uleb128 0xb
 722 0046 3B       		.uleb128 0x3b
 723 0047 05       		.uleb128 0x5
 724 0048 27       		.uleb128 0x27
 725 0049 19       		.uleb128 0x19
 726 004a 20       		.uleb128 0x20
 727 004b 0B       		.uleb128 0xb
 728 004c 01       		.uleb128 0x1
 729 004d 13       		.uleb128 0x13
 730 004e 00       		.byte	0
 731 004f 00       		.byte	0
 732 0050 07       		.uleb128 0x7
 733 0051 05       		.uleb128 0x5
 734 0052 00       		.byte	0
 735 0053 03       		.uleb128 0x3
 736 0054 0E       		.uleb128 0xe
 737 0055 3A       		.uleb128 0x3a
 738 0056 0B       		.uleb128 0xb
 739 0057 3B       		.uleb128 0x3b
 740 0058 05       		.uleb128 0x5
 741 0059 49       		.uleb128 0x49
 742 005a 13       		.uleb128 0x13
 743 005b 00       		.byte	0
 744 005c 00       		.byte	0
 745 005d 08       		.uleb128 0x8
 746 005e 2E       		.uleb128 0x2e
 747 005f 00       		.byte	0
 748 0060 3F       		.uleb128 0x3f
 749 0061 19       		.uleb128 0x19
 750 0062 03       		.uleb128 0x3
 751 0063 0E       		.uleb128 0xe
 752 0064 3A       		.uleb128 0x3a
 753 0065 0B       		.uleb128 0xb
 754 0066 3B       		.uleb128 0x3b
 755 0067 0B       		.uleb128 0xb
 756 0068 27       		.uleb128 0x27
 757 0069 19       		.uleb128 0x19
 758 006a 20       		.uleb128 0x20
 759 006b 0B       		.uleb128 0xb
 760 006c 00       		.byte	0
 761 006d 00       		.byte	0
 762 006e 09       		.uleb128 0x9
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 21


 763 006f 2E       		.uleb128 0x2e
 764 0070 00       		.byte	0
 765 0071 31       		.uleb128 0x31
 766 0072 13       		.uleb128 0x13
 767 0073 11       		.uleb128 0x11
 768 0074 01       		.uleb128 0x1
 769 0075 12       		.uleb128 0x12
 770 0076 06       		.uleb128 0x6
 771 0077 40       		.uleb128 0x40
 772 0078 18       		.uleb128 0x18
 773 0079 9742     		.uleb128 0x2117
 774 007b 19       		.uleb128 0x19
 775 007c 00       		.byte	0
 776 007d 00       		.byte	0
 777 007e 0A       		.uleb128 0xa
 778 007f 2E       		.uleb128 0x2e
 779 0080 01       		.byte	0x1
 780 0081 3F       		.uleb128 0x3f
 781 0082 19       		.uleb128 0x19
 782 0083 03       		.uleb128 0x3
 783 0084 0E       		.uleb128 0xe
 784 0085 3A       		.uleb128 0x3a
 785 0086 0B       		.uleb128 0xb
 786 0087 3B       		.uleb128 0x3b
 787 0088 0B       		.uleb128 0xb
 788 0089 27       		.uleb128 0x27
 789 008a 19       		.uleb128 0x19
 790 008b 11       		.uleb128 0x11
 791 008c 01       		.uleb128 0x1
 792 008d 12       		.uleb128 0x12
 793 008e 06       		.uleb128 0x6
 794 008f 40       		.uleb128 0x40
 795 0090 18       		.uleb128 0x18
 796 0091 9742     		.uleb128 0x2117
 797 0093 19       		.uleb128 0x19
 798 0094 01       		.uleb128 0x1
 799 0095 13       		.uleb128 0x13
 800 0096 00       		.byte	0
 801 0097 00       		.byte	0
 802 0098 0B       		.uleb128 0xb
 803 0099 34       		.uleb128 0x34
 804 009a 00       		.byte	0
 805 009b 03       		.uleb128 0x3
 806 009c 0E       		.uleb128 0xe
 807 009d 3A       		.uleb128 0x3a
 808 009e 0B       		.uleb128 0xb
 809 009f 3B       		.uleb128 0x3b
 810 00a0 0B       		.uleb128 0xb
 811 00a1 49       		.uleb128 0x49
 812 00a2 13       		.uleb128 0x13
 813 00a3 02       		.uleb128 0x2
 814 00a4 17       		.uleb128 0x17
 815 00a5 00       		.byte	0
 816 00a6 00       		.byte	0
 817 00a7 0C       		.uleb128 0xc
 818 00a8 898201   		.uleb128 0x4109
 819 00ab 00       		.byte	0
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 22


 820 00ac 11       		.uleb128 0x11
 821 00ad 01       		.uleb128 0x1
 822 00ae 31       		.uleb128 0x31
 823 00af 13       		.uleb128 0x13
 824 00b0 00       		.byte	0
 825 00b1 00       		.byte	0
 826 00b2 0D       		.uleb128 0xd
 827 00b3 898201   		.uleb128 0x4109
 828 00b6 00       		.byte	0
 829 00b7 11       		.uleb128 0x11
 830 00b8 01       		.uleb128 0x1
 831 00b9 9542     		.uleb128 0x2115
 832 00bb 19       		.uleb128 0x19
 833 00bc 31       		.uleb128 0x31
 834 00bd 13       		.uleb128 0x13
 835 00be 00       		.byte	0
 836 00bf 00       		.byte	0
 837 00c0 0E       		.uleb128 0xe
 838 00c1 2E       		.uleb128 0x2e
 839 00c2 01       		.byte	0x1
 840 00c3 3F       		.uleb128 0x3f
 841 00c4 19       		.uleb128 0x19
 842 00c5 03       		.uleb128 0x3
 843 00c6 0E       		.uleb128 0xe
 844 00c7 3A       		.uleb128 0x3a
 845 00c8 0B       		.uleb128 0xb
 846 00c9 3B       		.uleb128 0x3b
 847 00ca 0B       		.uleb128 0xb
 848 00cb 27       		.uleb128 0x27
 849 00cc 19       		.uleb128 0x19
 850 00cd 49       		.uleb128 0x49
 851 00ce 13       		.uleb128 0x13
 852 00cf 11       		.uleb128 0x11
 853 00d0 01       		.uleb128 0x1
 854 00d1 12       		.uleb128 0x12
 855 00d2 06       		.uleb128 0x6
 856 00d3 40       		.uleb128 0x40
 857 00d4 18       		.uleb128 0x18
 858 00d5 9742     		.uleb128 0x2117
 859 00d7 19       		.uleb128 0x19
 860 00d8 01       		.uleb128 0x1
 861 00d9 13       		.uleb128 0x13
 862 00da 00       		.byte	0
 863 00db 00       		.byte	0
 864 00dc 0F       		.uleb128 0xf
 865 00dd 2E       		.uleb128 0x2e
 866 00de 01       		.byte	0x1
 867 00df 3F       		.uleb128 0x3f
 868 00e0 19       		.uleb128 0x19
 869 00e1 03       		.uleb128 0x3
 870 00e2 0E       		.uleb128 0xe
 871 00e3 3A       		.uleb128 0x3a
 872 00e4 0B       		.uleb128 0xb
 873 00e5 3B       		.uleb128 0x3b
 874 00e6 05       		.uleb128 0x5
 875 00e7 27       		.uleb128 0x27
 876 00e8 19       		.uleb128 0x19
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 23


 877 00e9 11       		.uleb128 0x11
 878 00ea 01       		.uleb128 0x1
 879 00eb 12       		.uleb128 0x12
 880 00ec 06       		.uleb128 0x6
 881 00ed 40       		.uleb128 0x40
 882 00ee 18       		.uleb128 0x18
 883 00ef 9742     		.uleb128 0x2117
 884 00f1 19       		.uleb128 0x19
 885 00f2 01       		.uleb128 0x1
 886 00f3 13       		.uleb128 0x13
 887 00f4 00       		.byte	0
 888 00f5 00       		.byte	0
 889 00f6 10       		.uleb128 0x10
 890 00f7 05       		.uleb128 0x5
 891 00f8 00       		.byte	0
 892 00f9 03       		.uleb128 0x3
 893 00fa 0E       		.uleb128 0xe
 894 00fb 3A       		.uleb128 0x3a
 895 00fc 0B       		.uleb128 0xb
 896 00fd 3B       		.uleb128 0x3b
 897 00fe 05       		.uleb128 0x5
 898 00ff 49       		.uleb128 0x49
 899 0100 13       		.uleb128 0x13
 900 0101 02       		.uleb128 0x2
 901 0102 17       		.uleb128 0x17
 902 0103 00       		.byte	0
 903 0104 00       		.byte	0
 904 0105 11       		.uleb128 0x11
 905 0106 34       		.uleb128 0x34
 906 0107 00       		.byte	0
 907 0108 03       		.uleb128 0x3
 908 0109 0E       		.uleb128 0xe
 909 010a 3A       		.uleb128 0x3a
 910 010b 0B       		.uleb128 0xb
 911 010c 3B       		.uleb128 0x3b
 912 010d 05       		.uleb128 0x5
 913 010e 49       		.uleb128 0x49
 914 010f 13       		.uleb128 0x13
 915 0110 02       		.uleb128 0x2
 916 0111 17       		.uleb128 0x17
 917 0112 00       		.byte	0
 918 0113 00       		.byte	0
 919 0114 12       		.uleb128 0x12
 920 0115 2E       		.uleb128 0x2e
 921 0116 00       		.byte	0
 922 0117 3F       		.uleb128 0x3f
 923 0118 19       		.uleb128 0x19
 924 0119 03       		.uleb128 0x3
 925 011a 0E       		.uleb128 0xe
 926 011b 3A       		.uleb128 0x3a
 927 011c 0B       		.uleb128 0xb
 928 011d 3B       		.uleb128 0x3b
 929 011e 05       		.uleb128 0x5
 930 011f 27       		.uleb128 0x27
 931 0120 19       		.uleb128 0x19
 932 0121 49       		.uleb128 0x49
 933 0122 13       		.uleb128 0x13
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 24


 934 0123 11       		.uleb128 0x11
 935 0124 01       		.uleb128 0x1
 936 0125 12       		.uleb128 0x12
 937 0126 06       		.uleb128 0x6
 938 0127 40       		.uleb128 0x40
 939 0128 18       		.uleb128 0x18
 940 0129 9742     		.uleb128 0x2117
 941 012b 19       		.uleb128 0x19
 942 012c 00       		.byte	0
 943 012d 00       		.byte	0
 944 012e 13       		.uleb128 0x13
 945 012f 1D       		.uleb128 0x1d
 946 0130 01       		.byte	0x1
 947 0131 31       		.uleb128 0x31
 948 0132 13       		.uleb128 0x13
 949 0133 11       		.uleb128 0x11
 950 0134 01       		.uleb128 0x1
 951 0135 12       		.uleb128 0x12
 952 0136 06       		.uleb128 0x6
 953 0137 58       		.uleb128 0x58
 954 0138 0B       		.uleb128 0xb
 955 0139 59       		.uleb128 0x59
 956 013a 0B       		.uleb128 0xb
 957 013b 01       		.uleb128 0x1
 958 013c 13       		.uleb128 0x13
 959 013d 00       		.byte	0
 960 013e 00       		.byte	0
 961 013f 14       		.uleb128 0x14
 962 0140 05       		.uleb128 0x5
 963 0141 00       		.byte	0
 964 0142 31       		.uleb128 0x31
 965 0143 13       		.uleb128 0x13
 966 0144 1C       		.uleb128 0x1c
 967 0145 0B       		.uleb128 0xb
 968 0146 00       		.byte	0
 969 0147 00       		.byte	0
 970 0148 15       		.uleb128 0x15
 971 0149 898201   		.uleb128 0x4109
 972 014c 01       		.byte	0x1
 973 014d 11       		.uleb128 0x11
 974 014e 01       		.uleb128 0x1
 975 014f 31       		.uleb128 0x31
 976 0150 13       		.uleb128 0x13
 977 0151 01       		.uleb128 0x1
 978 0152 13       		.uleb128 0x13
 979 0153 00       		.byte	0
 980 0154 00       		.byte	0
 981 0155 16       		.uleb128 0x16
 982 0156 8A8201   		.uleb128 0x410a
 983 0159 00       		.byte	0
 984 015a 02       		.uleb128 0x2
 985 015b 18       		.uleb128 0x18
 986 015c 9142     		.uleb128 0x2111
 987 015e 18       		.uleb128 0x18
 988 015f 00       		.byte	0
 989 0160 00       		.byte	0
 990 0161 17       		.uleb128 0x17
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 25


 991 0162 2E       		.uleb128 0x2e
 992 0163 01       		.byte	0x1
 993 0164 31       		.uleb128 0x31
 994 0165 13       		.uleb128 0x13
 995 0166 11       		.uleb128 0x11
 996 0167 01       		.uleb128 0x1
 997 0168 12       		.uleb128 0x12
 998 0169 06       		.uleb128 0x6
 999 016a 40       		.uleb128 0x40
 1000 016b 18       		.uleb128 0x18
 1001 016c 9742     		.uleb128 0x2117
 1002 016e 19       		.uleb128 0x19
 1003 016f 01       		.uleb128 0x1
 1004 0170 13       		.uleb128 0x13
 1005 0171 00       		.byte	0
 1006 0172 00       		.byte	0
 1007 0173 18       		.uleb128 0x18
 1008 0174 05       		.uleb128 0x5
 1009 0175 00       		.byte	0
 1010 0176 31       		.uleb128 0x31
 1011 0177 13       		.uleb128 0x13
 1012 0178 02       		.uleb128 0x2
 1013 0179 18       		.uleb128 0x18
 1014 017a 00       		.byte	0
 1015 017b 00       		.byte	0
 1016 017c 19       		.uleb128 0x19
 1017 017d 34       		.uleb128 0x34
 1018 017e 00       		.byte	0
 1019 017f 03       		.uleb128 0x3
 1020 0180 0E       		.uleb128 0xe
 1021 0181 3A       		.uleb128 0x3a
 1022 0182 0B       		.uleb128 0xb
 1023 0183 3B       		.uleb128 0x3b
 1024 0184 0B       		.uleb128 0xb
 1025 0185 49       		.uleb128 0x49
 1026 0186 13       		.uleb128 0x13
 1027 0187 3F       		.uleb128 0x3f
 1028 0188 19       		.uleb128 0x19
 1029 0189 02       		.uleb128 0x2
 1030 018a 18       		.uleb128 0x18
 1031 018b 00       		.byte	0
 1032 018c 00       		.byte	0
 1033 018d 1A       		.uleb128 0x1a
 1034 018e 2E       		.uleb128 0x2e
 1035 018f 00       		.byte	0
 1036 0190 3F       		.uleb128 0x3f
 1037 0191 19       		.uleb128 0x19
 1038 0192 03       		.uleb128 0x3
 1039 0193 0E       		.uleb128 0xe
 1040 0194 3A       		.uleb128 0x3a
 1041 0195 0B       		.uleb128 0xb
 1042 0196 3B       		.uleb128 0x3b
 1043 0197 0B       		.uleb128 0xb
 1044 0198 27       		.uleb128 0x27
 1045 0199 19       		.uleb128 0x19
 1046 019a 3C       		.uleb128 0x3c
 1047 019b 19       		.uleb128 0x19
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 26


 1048 019c 00       		.byte	0
 1049 019d 00       		.byte	0
 1050 019e 1B       		.uleb128 0x1b
 1051 019f 2E       		.uleb128 0x2e
 1052 01a0 00       		.byte	0
 1053 01a1 3F       		.uleb128 0x3f
 1054 01a2 19       		.uleb128 0x19
 1055 01a3 03       		.uleb128 0x3
 1056 01a4 0E       		.uleb128 0xe
 1057 01a5 3A       		.uleb128 0x3a
 1058 01a6 0B       		.uleb128 0xb
 1059 01a7 3B       		.uleb128 0x3b
 1060 01a8 0B       		.uleb128 0xb
 1061 01a9 27       		.uleb128 0x27
 1062 01aa 19       		.uleb128 0x19
 1063 01ab 49       		.uleb128 0x49
 1064 01ac 13       		.uleb128 0x13
 1065 01ad 3C       		.uleb128 0x3c
 1066 01ae 19       		.uleb128 0x19
 1067 01af 00       		.byte	0
 1068 01b0 00       		.byte	0
 1069 01b1 1C       		.uleb128 0x1c
 1070 01b2 2E       		.uleb128 0x2e
 1071 01b3 01       		.byte	0x1
 1072 01b4 3F       		.uleb128 0x3f
 1073 01b5 19       		.uleb128 0x19
 1074 01b6 03       		.uleb128 0x3
 1075 01b7 0E       		.uleb128 0xe
 1076 01b8 3A       		.uleb128 0x3a
 1077 01b9 0B       		.uleb128 0xb
 1078 01ba 3B       		.uleb128 0x3b
 1079 01bb 0B       		.uleb128 0xb
 1080 01bc 27       		.uleb128 0x27
 1081 01bd 19       		.uleb128 0x19
 1082 01be 3C       		.uleb128 0x3c
 1083 01bf 19       		.uleb128 0x19
 1084 01c0 01       		.uleb128 0x1
 1085 01c1 13       		.uleb128 0x13
 1086 01c2 00       		.byte	0
 1087 01c3 00       		.byte	0
 1088 01c4 1D       		.uleb128 0x1d
 1089 01c5 05       		.uleb128 0x5
 1090 01c6 00       		.byte	0
 1091 01c7 49       		.uleb128 0x49
 1092 01c8 13       		.uleb128 0x13
 1093 01c9 00       		.byte	0
 1094 01ca 00       		.byte	0
 1095 01cb 00       		.byte	0
 1096              		.section	.debug_loc,"",%progbits
 1097              	.Ldebug_loc0:
 1098              	.LLST0:
 1099 0000 0A000000 		.4byte	.LVL1
 1100 0004 1B000000 		.4byte	.LVL2-1
 1101 0008 0100     		.2byte	0x1
 1102 000a 50       		.byte	0x50
 1103 000b 00000000 		.4byte	0
 1104 000f 00000000 		.4byte	0
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 27


 1105              	.LLST1:
 1106 0013 06000000 		.4byte	.LVL3
 1107 0017 0A000000 		.4byte	.LVL4
 1108 001b 0500     		.2byte	0x5
 1109 001d 70       		.byte	0x70
 1110 001e 80807E   		.sleb128 -32768
 1111 0021 9F       		.byte	0x9f
 1112 0022 00000000 		.4byte	0
 1113 0026 00000000 		.4byte	0
 1114              	.LLST2:
 1115 002a 06000000 		.4byte	.LVL3
 1116 002e 0A000000 		.4byte	.LVL4
 1117 0032 0100     		.2byte	0x1
 1118 0034 50       		.byte	0x50
 1119 0035 00000000 		.4byte	0
 1120 0039 00000000 		.4byte	0
 1121              	.LLST3:
 1122 003d 00000000 		.4byte	.LVL5
 1123 0041 04000000 		.4byte	.LVL6
 1124 0045 0100     		.2byte	0x1
 1125 0047 50       		.byte	0x50
 1126 0048 04000000 		.4byte	.LVL6
 1127 004c 0A000000 		.4byte	.LFE5
 1128 0050 0400     		.2byte	0x4
 1129 0052 F3       		.byte	0xf3
 1130 0053 01       		.uleb128 0x1
 1131 0054 50       		.byte	0x50
 1132 0055 9F       		.byte	0x9f
 1133 0056 00000000 		.4byte	0
 1134 005a 00000000 		.4byte	0
 1135              	.LLST4:
 1136 005e 00000000 		.4byte	.LVL5
 1137 0062 04000000 		.4byte	.LVL6
 1138 0066 0500     		.2byte	0x5
 1139 0068 70       		.byte	0x70
 1140 0069 80807E   		.sleb128 -32768
 1141 006c 9F       		.byte	0x9f
 1142 006d 04000000 		.4byte	.LVL6
 1143 0071 0A000000 		.4byte	.LFE5
 1144 0075 0800     		.2byte	0x8
 1145 0077 F3       		.byte	0xf3
 1146 0078 01       		.uleb128 0x1
 1147 0079 50       		.byte	0x50
 1148 007a 0A       		.byte	0xa
 1149 007b 0080     		.2byte	0x8000
 1150 007d 1C       		.byte	0x1c
 1151 007e 9F       		.byte	0x9f
 1152 007f 00000000 		.4byte	0
 1153 0083 00000000 		.4byte	0
 1154              	.LLST5:
 1155 0087 10000000 		.4byte	.LVL10
 1156 008b 21000000 		.4byte	.LVL11-1
 1157 008f 0100     		.2byte	0x1
 1158 0091 50       		.byte	0x50
 1159 0092 00000000 		.4byte	0
 1160 0096 00000000 		.4byte	0
 1161              		.section	.debug_aranges,"",%progbits
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 28


 1162 0000 5C000000 		.4byte	0x5c
 1163 0004 0200     		.2byte	0x2
 1164 0006 00000000 		.4byte	.Ldebug_info0
 1165 000a 04       		.byte	0x4
 1166 000b 00       		.byte	0
 1167 000c 0000     		.2byte	0
 1168 000e 0000     		.2byte	0
 1169 0010 00000000 		.4byte	.LFB0
 1170 0014 02000000 		.4byte	.LFE0-.LFB0
 1171 0018 00000000 		.4byte	.LFB3
 1172 001c 20000000 		.4byte	.LFE3-.LFB3
 1173 0020 00000000 		.4byte	.LFB4
 1174 0024 0E000000 		.4byte	.LFE4-.LFB4
 1175 0028 00000000 		.4byte	.LFB5
 1176 002c 0A000000 		.4byte	.LFE5-.LFB5
 1177 0030 00000000 		.4byte	.LFB6
 1178 0034 10000000 		.4byte	.LFE6-.LFB6
 1179 0038 00000000 		.4byte	.LFB1
 1180 003c 2C000000 		.4byte	.LFE1-.LFB1
 1181 0040 00000000 		.4byte	.LFB2
 1182 0044 24000000 		.4byte	.LFE2-.LFB2
 1183 0048 00000000 		.4byte	.LFB7
 1184 004c 0C000000 		.4byte	.LFE7-.LFB7
 1185 0050 00000000 		.4byte	.LFB8
 1186 0054 10000000 		.4byte	.LFE8-.LFB8
 1187 0058 00000000 		.4byte	0
 1188 005c 00000000 		.4byte	0
 1189              		.section	.debug_ranges,"",%progbits
 1190              	.Ldebug_ranges0:
 1191 0000 00000000 		.4byte	.LFB0
 1192 0004 02000000 		.4byte	.LFE0
 1193 0008 00000000 		.4byte	.LFB3
 1194 000c 20000000 		.4byte	.LFE3
 1195 0010 00000000 		.4byte	.LFB4
 1196 0014 0E000000 		.4byte	.LFE4
 1197 0018 00000000 		.4byte	.LFB5
 1198 001c 0A000000 		.4byte	.LFE5
 1199 0020 00000000 		.4byte	.LFB6
 1200 0024 10000000 		.4byte	.LFE6
 1201 0028 00000000 		.4byte	.LFB1
 1202 002c 2C000000 		.4byte	.LFE1
 1203 0030 00000000 		.4byte	.LFB2
 1204 0034 24000000 		.4byte	.LFE2
 1205 0038 00000000 		.4byte	.LFB7
 1206 003c 0C000000 		.4byte	.LFE7
 1207 0040 00000000 		.4byte	.LFB8
 1208 0044 10000000 		.4byte	.LFE8
 1209 0048 00000000 		.4byte	0
 1210 004c 00000000 		.4byte	0
 1211              		.section	.debug_line,"",%progbits
 1212              	.Ldebug_line0:
 1213 0000 21010000 		.section	.debug_str,"MS",%progbits,1
 1213      02006200 
 1213      00000201 
 1213      FB0E0D00 
 1213      01010101 
 1214              	.LASF25:
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 29


 1215 0000 51756164 		.ascii	"Quad_1_GetEvents\000"
 1215      5F315F47 
 1215      65744576 
 1215      656E7473 
 1215      00
 1216              	.LASF28:
 1217 0011 51756164 		.ascii	"Quad_1_Cnt16_Stop\000"
 1217      5F315F43 
 1217      6E743136 
 1217      5F53746F 
 1217      7000
 1218              	.LASF19:
 1219 0023 636F756E 		.ascii	"count\000"
 1219      7400
 1220              	.LASF22:
 1221 0029 51756164 		.ascii	"Quad_1_SetCounter\000"
 1221      5F315F53 
 1221      6574436F 
 1221      756E7465 
 1221      7200
 1222              	.LASF4:
 1223 003b 73686F72 		.ascii	"short unsigned int\000"
 1223      7420756E 
 1223      7369676E 
 1223      65642069 
 1223      6E7400
 1224              	.LASF21:
 1225 004e 51756164 		.ascii	"Quad_1_Stop\000"
 1225      5F315F53 
 1225      746F7000 
 1226              	.LASF15:
 1227 005a 666C6F61 		.ascii	"float\000"
 1227      7400
 1228              	.LASF8:
 1229 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 1229      206C6F6E 
 1229      6720756E 
 1229      7369676E 
 1229      65642069 
 1230              	.LASF35:
 1231 0077 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1231      4320342E 
 1231      392E3320 
 1231      32303135 
 1231      30333033 
 1232 00aa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1232      20726576 
 1232      6973696F 
 1232      6E203232 
 1232      31323230 
 1233 00dd 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1233      66756E63 
 1233      74696F6E 
 1233      2D736563 
 1233      74696F6E 
 1234              	.LASF2:
 1235 0105 756E7369 		.ascii	"unsigned char\000"
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 30


 1235      676E6564 
 1235      20636861 
 1235      7200
 1236              	.LASF37:
 1237 0113 443A5C44 		.ascii	"D:\\Documents\\Computer Science\\PSoc\\ECE3091 Auto"
 1237      6F63756D 
 1237      656E7473 
 1237      5C436F6D 
 1237      70757465 
 1238 0142 5075636B 		.ascii	"PuckPickup\\Display.cydsn\000"
 1238      5069636B 
 1238      75705C44 
 1238      6973706C 
 1238      61792E63 
 1239              	.LASF17:
 1240 015b 72656738 		.ascii	"reg8\000"
 1240      00
 1241              	.LASF34:
 1242 0160 51756164 		.ascii	"Quad_1_Cnt16_Start\000"
 1242      5F315F43 
 1242      6E743136 
 1242      5F537461 
 1242      727400
 1243              	.LASF24:
 1244 0173 51756164 		.ascii	"Quad_1_Start\000"
 1244      5F315F53 
 1244      74617274 
 1244      00
 1245              	.LASF6:
 1246 0180 6C6F6E67 		.ascii	"long unsigned int\000"
 1246      20756E73 
 1246      69676E65 
 1246      6420696E 
 1246      7400
 1247              	.LASF14:
 1248 0192 696E7433 		.ascii	"int32\000"
 1248      3200
 1249              	.LASF20:
 1250 0198 746D7043 		.ascii	"tmpCnt\000"
 1250      6E7400
 1251              	.LASF23:
 1252 019f 51756164 		.ascii	"Quad_1_Enable\000"
 1252      5F315F45 
 1252      6E61626C 
 1252      6500
 1253              	.LASF16:
 1254 01ad 646F7562 		.ascii	"double\000"
 1254      6C6500
 1255              	.LASF3:
 1256 01b4 73686F72 		.ascii	"short int\000"
 1256      7420696E 
 1256      7400
 1257              	.LASF12:
 1258 01be 75696E74 		.ascii	"uint16\000"
 1258      313600
 1259              	.LASF31:
 1260 01c5 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 31


 1260      74657243 
 1260      72697469 
 1260      63616C53 
 1260      65637469 
 1261              	.LASF0:
 1262 01dc 756E7369 		.ascii	"unsigned int\000"
 1262      676E6564 
 1262      20696E74 
 1262      00
 1263              	.LASF36:
 1264 01e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Quad_1.c\000"
 1264      6E657261 
 1264      7465645F 
 1264      536F7572 
 1264      63655C50 
 1265              	.LASF29:
 1266 020b 51756164 		.ascii	"Quad_1_SetInterruptMask\000"
 1266      5F315F53 
 1266      6574496E 
 1266      74657272 
 1266      7570744D 
 1267              	.LASF30:
 1268 0223 43794578 		.ascii	"CyExitCriticalSection\000"
 1268      69744372 
 1268      69746963 
 1268      616C5365 
 1268      6374696F 
 1269              	.LASF13:
 1270 0239 696E7431 		.ascii	"int16\000"
 1270      3600
 1271              	.LASF32:
 1272 023f 51756164 		.ascii	"Quad_1_Cnt16_ReadCounter\000"
 1272      5F315F43 
 1272      6E743136 
 1272      5F526561 
 1272      64436F75 
 1273              	.LASF9:
 1274 0258 73697A65 		.ascii	"sizetype\000"
 1274      74797065 
 1274      00
 1275              	.LASF18:
 1276 0261 656E6162 		.ascii	"enableInterrupts\000"
 1276      6C65496E 
 1276      74657272 
 1276      75707473 
 1276      00
 1277              	.LASF7:
 1278 0272 6C6F6E67 		.ascii	"long long int\000"
 1278      206C6F6E 
 1278      6720696E 
 1278      7400
 1279              	.LASF26:
 1280 0280 51756164 		.ascii	"Quad_1_GetInterruptMask\000"
 1280      5F315F47 
 1280      6574496E 
 1280      74657272 
 1280      7570744D 
ARM GAS  D:\TEMP\ccKL0Ttk.s 			page 32


 1281              	.LASF38:
 1282 0298 6D61736B 		.ascii	"mask\000"
 1282      00
 1283              	.LASF40:
 1284 029d 76616C75 		.ascii	"value\000"
 1284      6500
 1285              	.LASF39:
 1286 02a3 51756164 		.ascii	"Quad_1_GetCounter\000"
 1286      5F315F47 
 1286      6574436F 
 1286      756E7465 
 1286      7200
 1287              	.LASF33:
 1288 02b5 51756164 		.ascii	"Quad_1_Cnt16_WriteCounter\000"
 1288      5F315F43 
 1288      6E743136 
 1288      5F577269 
 1288      7465436F 
 1289              	.LASF27:
 1290 02cf 51756164 		.ascii	"Quad_1_Init\000"
 1290      5F315F49 
 1290      6E697400 
 1291              	.LASF11:
 1292 02db 75696E74 		.ascii	"uint8\000"
 1292      3800
 1293              	.LASF5:
 1294 02e1 6C6F6E67 		.ascii	"long int\000"
 1294      20696E74 
 1294      00
 1295              	.LASF10:
 1296 02ea 63686172 		.ascii	"char\000"
 1296      00
 1297              	.LASF41:
 1298 02ef 51756164 		.ascii	"Quad_1_initVar\000"
 1298      5F315F69 
 1298      6E697456 
 1298      617200
 1299              	.LASF1:
 1300 02fe 7369676E 		.ascii	"signed char\000"
 1300      65642063 
 1300      68617200 
 1301              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
