ARM GAS  D:\TEMP\ccvZaW4h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Camera_I2C_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Camera_I2C_ISR,"ax",%progbits
  19              		.align	1
  20              		.global	Camera_I2C_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	Camera_I2C_ISR, %function
  24              	Camera_I2C_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Camera_I2C_INT.c"
   1:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * File Name: Camera_I2C_INT.c
   3:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
   5:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  for the I2C component.
   8:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
   9:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** ********************************************************************************
  10:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation. All rights reserved.
  11:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  16:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #include "Camera_I2C_PVT.h"
  17:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  18:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  19:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  20:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** /*******************************************************************************
  21:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  Place your includes, defines and code here.
  22:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** /* `#START Camera_I2C_ISR_intc` */
  24:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  25:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** /* `#END` */
  26:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  27:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  28:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** /*******************************************************************************
  29:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Function Name: Camera_I2C_ISR
  30:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** ********************************************************************************
  31:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 2


  32:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Summary:
  33:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  The handler for the I2C interrupt. The slave and master operations are
  34:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  handled here.
  35:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
  36:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  None.
  38:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
  39:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  None.
  41:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
  42:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *  No.
  44:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *
  45:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** CY_ISR(Camera_I2C_ISR)
  47:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  48:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #if (Camera_I2C_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****    uint8  tmp8;
  50:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #endif  /* (Camera_I2C_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  52:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     
  54:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #ifdef Camera_I2C_ISR_ENTRY_CALLBACK
  55:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     Camera_I2C_ISR_EntryCallback();
  56:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #endif /* Camera_I2C_ISR_ENTRY_CALLBACK */
  57:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     
  58:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  59:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #if(Camera_I2C_TIMEOUT_FF_ENABLED)
  60:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     if(0u != Camera_I2C_TimeoutGetStatus())
  61:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
  62:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_TimeoutReset();
  63:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_state = Camera_I2C_SM_EXIT_IDLE;
  64:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* Camera_I2C_CSR_REG should be cleared after reset */
  65:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     }
  66:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #endif /* (Camera_I2C_TIMEOUT_FF_ENABLED) */
  67:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  68:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  69:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     tmpCsr = Camera_I2C_CSR_REG;      /* Make copy as interrupts clear */
  70:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  71:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #if(Camera_I2C_MODE_MULTI_MASTER_SLAVE_ENABLED)
  72:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     if(Camera_I2C_CHECK_START_GEN(Camera_I2C_MCSR_REG))
  73:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
  74:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_CLEAR_START_GEN;
  75:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  76:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* Set transfer complete and error flags */
  77:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_ERR_XFER |
  78:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                         Camera_I2C_GET_MSTAT_CMPLT);
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 3


  79:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  80:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* Slave was addressed */
  81:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_state = Camera_I2C_SM_SLAVE;
  82:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     }
  83:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #endif /* (Camera_I2C_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  84:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  85:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  86:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #if(Camera_I2C_MODE_MULTI_MASTER_ENABLED)
  87:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     if(Camera_I2C_CHECK_LOST_ARB(tmpCsr))
  88:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
  89:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* Set errors */
  90:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_ERR_XFER     |
  91:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                         Camera_I2C_MSTAT_ERR_ARB_LOST |
  92:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                         Camera_I2C_GET_MSTAT_CMPLT);
  93:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  94:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  95:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  96:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         #if(Camera_I2C_MODE_MULTI_MASTER_SLAVE_ENABLED)
  97:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             if(Camera_I2C_CHECK_ADDRESS_STS(tmpCsr))
  98:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
  99:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Slave was addressed */
 100:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_state = Camera_I2C_SM_SLAVE;
 101:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 102:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             else
 103:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 104:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 106:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_state = Camera_I2C_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 108:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         #else
 109:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             Camera_I2C_BUS_RELEASE;
 110:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 111:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             Camera_I2C_state = Camera_I2C_SM_EXIT_IDLE;
 112:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 113:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         #endif /* (Camera_I2C_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 114:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     }
 115:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** #endif /* (Camera_I2C_MODE_MULTI_MASTER_ENABLED) */
 116:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 117:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     /* Check for master operation mode */
 118:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     if(Camera_I2C_CHECK_SM_MASTER)
  37              		.loc 1 118 0
  38 0002 7C48     		ldr	r0, .L36
  69:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  39              		.loc 1 69 0
  40 0004 7C4A     		ldr	r2, .L36+4
  41 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42              		.loc 1 118 0
  43 0008 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
  69:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
  44              		.loc 1 69 0
  45 000a DBB2     		uxtb	r3, r3
  46              	.LVL0:
  47              		.loc 1 118 0
  48 000c 11F0400F 		tst	r1, #64
  49 0010 0146     		mov	r1, r0
  50 0012 00F0E880 		beq	.L2
 119:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 4


 120:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     #if(Camera_I2C_MODE_MASTER_ENABLED)
 121:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         if(Camera_I2C_CHECK_BYTE_COMPLETE(tmpCsr))
  51              		.loc 1 121 0
  52 0016 D807     		lsls	r0, r3, #31
  53 0018 40F1D180 		bpl	.L3
 122:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         {
 123:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             switch (Camera_I2C_state)
  54              		.loc 1 123 0
  55 001c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
  56 001e 4538     		subs	r0, r0, #69
  57 0020 0528     		cmp	r0, #5
  58 0022 00F2CC80 		bhi	.L3
  59 0026 DFE810F0 		tbh	[pc, r0, lsl #1]
  60              	.L5:
  61 002a 0600     		.2byte	(.L4-.L5)/2
  62 002c 5800     		.2byte	(.L6-.L5)/2
  63 002e CA00     		.2byte	(.L3-.L5)/2
  64 0030 CA00     		.2byte	(.L3-.L5)/2
  65 0032 0600     		.2byte	(.L4-.L5)/2
  66 0034 9A00     		.2byte	(.L7-.L5)/2
  67              		.p2align 1
  68              	.L4:
 124:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 125:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             case Camera_I2C_SM_MSTR_WR_ADDR:  /* After address is sent, write data */
 126:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             case Camera_I2C_SM_MSTR_RD_ADDR:  /* After address is sent, read data */
 127:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 128:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 tmpCsr &= ((uint8) ~Camera_I2C_CSR_STOP_STATUS); /* Clear Stop bit history on addre
  69              		.loc 1 128 0
  70 0036 03F0DF00 		and	r0, r3, #223
  71              	.LVL1:
 129:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 130:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(Camera_I2C_CHECK_ADDR_ACK(tmpCsr))
  72              		.loc 1 130 0
  73 003a 03F00A03 		and	r3, r3, #10
  74 003e 082B     		cmp	r3, #8
  75 0040 24D1     		bne	.L8
 131:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 132:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Setup for transmit or receive of data */
 133:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(Camera_I2C_state == Camera_I2C_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  76              		.loc 1 133 0
  77 0042 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
  78 0044 6B4B     		ldr	r3, .L36
  79 0046 452C     		cmp	r4, #69
  80 0048 1BD1     		bne	.L9
 134:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 135:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Check if at least one byte to transfer */
 136:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         if(Camera_I2C_mstrWrBufSize > 0u)
  81              		.loc 1 136 0
  82 004a 6C4C     		ldr	r4, .L36+8
  83 004c 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
  84 004e 64B1     		cbz	r4, .L10
 137:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         {
 138:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             /* Load the 1st data byte */
 139:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_DATA_REG = Camera_I2C_mstrWrBufPtr[0u];
  85              		.loc 1 139 0
  86 0050 6B4C     		ldr	r4, .L36+12
  87 0052 6C4D     		ldr	r5, .L36+16
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 5


  88 0054 2468     		ldr	r4, [r4]
  89 0056 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
  90 0058 E4B2     		uxtb	r4, r4
  91 005a 2C70     		strb	r4, [r5]
 140:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_TRANSMIT_DATA;
  92              		.loc 1 140 0
  93 005c 0424     		movs	r4, #4
  94 005e 1470     		strb	r4, [r2]
 141:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
  95              		.loc 1 141 0
  96 0060 694A     		ldr	r2, .L36+20
  97 0062 0124     		movs	r4, #1
  98 0064 1470     		strb	r4, [r2]
 142:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 143:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             /* Set transmit state until done */
 144:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_state = Camera_I2C_SM_MSTR_WR_DATA;
  99              		.loc 1 144 0
 100 0066 4622     		movs	r2, #70
 101 0068 0EE0     		b	.L34
 102              	.L10:
 145:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         }
 146:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* End of buffer: complete writing */
 147:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         else if(Camera_I2C_CHECK_NO_STOP(Camera_I2C_mstrControl))
 103              		.loc 1 147 0
 104 006a 684C     		ldr	r4, .L36+24
 105 006c 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 106 006e A607     		lsls	r6, r4, #30
 107 0070 28D5     		bpl	.L12
 148:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         {
 149:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             /* Set write complete and master halted */
 150:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_XFER_HALT |
 108              		.loc 1 150 0
 109 0072 674C     		ldr	r4, .L36+28
 110 0074 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 111 0076 42F00A02 		orr	r2, r2, #10
 112 007a 2270     		strb	r2, [r4]
 151:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                             Camera_I2C_MSTAT_WR_CMPLT);
 152:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 153:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_state = Camera_I2C_SM_MSTR_HALT; /* Expect ReStart */
 113              		.loc 1 153 0
 114 007c 6022     		movs	r2, #96
 115 007e 1A70     		strb	r2, [r3]
 116 0080 1BE0     		b	.L33
 117              	.L9:
 154:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_DisableInt();
 155:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         }
 156:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         else
 157:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         {
 158:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it
 159:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_GENERATE_STOP;
 160:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         }
 161:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 162:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else  /* Master receive data */
 163:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 164:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_READY_TO_READ; /* Release bus to read data */
 118              		.loc 1 164 0
 119 0082 0024     		movs	r4, #0
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 6


 120 0084 1470     		strb	r4, [r2]
 165:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 166:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_state  = Camera_I2C_SM_MSTR_RD_DATA;
 121              		.loc 1 166 0
 122 0086 4A22     		movs	r2, #74
 123              	.L34:
 124 0088 1A70     		strb	r2, [r3]
 125 008a 97E0     		b	.L24
 126              	.L8:
 167:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 168:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 169:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Address is NACKed */
 170:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else if(Camera_I2C_CHECK_ADDR_NAK(tmpCsr))
 127              		.loc 1 170 0
 128 008c 0A2B     		cmp	r3, #10
 129 008e 40F09580 		bne	.L24
 171:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 172:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Set Address NAK error */
 173:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_ERR_XFER |
 130              		.loc 1 173 0
 131 0092 5F4B     		ldr	r3, .L36+28
 132 0094 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 133 0096 44F0A004 		orr	r4, r4, #160
 134 009a 1C70     		strb	r4, [r3]
 174:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_ERR_ADDR_NAK);
 175:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 176:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(Camera_I2C_CHECK_NO_STOP(Camera_I2C_mstrControl))
 135              		.loc 1 176 0
 136 009c 5B4C     		ldr	r4, .L36+24
 137 009e 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 138 00a0 A507     		lsls	r5, r4, #30
 139 00a2 0FD5     		bpl	.L12
 177:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 178:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_XFER_HALT |
 179:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                         Camera_I2C_GET_MSTAT_CMPLT);
 140              		.loc 1 179 0
 141 00a4 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 178:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                         Camera_I2C_GET_MSTAT_CMPLT);
 142              		.loc 1 178 0
 143 00a6 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 144 00a8 12F0080F 		tst	r2, #8
 145 00ac 14BF     		ite	ne
 146 00ae 0922     		movne	r2, #9
 147 00b0 0A22     		moveq	r2, #10
 148 00b2 2243     		orrs	r2, r2, r4
 149 00b4 1A70     		strb	r2, [r3]
 180:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 181:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_state = Camera_I2C_SM_MSTR_HALT; /* Expect RESTART */
 150              		.loc 1 181 0
 151 00b6 6023     		movs	r3, #96
 152 00b8 0B70     		strb	r3, [r1]
 153              	.L33:
 182:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DisableInt();
 154              		.loc 1 182 0
 155 00ba 564B     		ldr	r3, .L36+32
 156 00bc 4FF40042 		mov	r2, #32768
 157 00c0 1A60     		str	r2, [r3]
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 7


 158 00c2 7BE0     		b	.L24
 159              	.L12:
 183:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 184:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else  /* Do normal Stop */
 185:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 186:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 160              		.loc 1 186 0
 161 00c4 544C     		ldr	r4, .L36+36
 162 00c6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 163 00c8 43F01003 		orr	r3, r3, #16
 164 00cc 2370     		strb	r3, [r4]
 187:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_GENERATE_STOP;
 165              		.loc 1 187 0
 166 00ce 534B     		ldr	r3, .L36+40
 167 00d0 1024     		movs	r4, #16
 168 00d2 1C70     		strb	r4, [r3]
 169 00d4 0423     		movs	r3, #4
 170 00d6 1370     		strb	r3, [r2]
 171 00d8 70E0     		b	.L24
 172              	.LVL2:
 173              	.L6:
 188:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 189:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 190:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else
 191:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 192:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Address phase is not set for some reason: error */
 193:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     #if(Camera_I2C_TIMEOUT_ENABLED)
 194:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Exit interrupt to take chance for timeout timer to handle this case */
 195:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DisableInt();
 196:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ClearPendingInt();
 197:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     #else
 198:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Block execution flow: unexpected condition */
 199:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         CYASSERT(0u != 0u);
 200:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     #endif /* (Camera_I2C_TIMEOUT_ENABLED) */
 201:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 202:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 break;
 203:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 204:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             case Camera_I2C_SM_MSTR_WR_DATA:
 205:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 206:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(Camera_I2C_CHECK_DATA_ACK(tmpCsr))
 174              		.loc 1 206 0
 175 00da 9C07     		lsls	r4, r3, #30
 176 00dc 26D4     		bmi	.L14
 207:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 208:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Check if end of buffer */
 209:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(Camera_I2C_mstrWrBufIndex  < Camera_I2C_mstrWrBufSize)
 177              		.loc 1 209 0
 178 00de 4A48     		ldr	r0, .L36+20
 179 00e0 464C     		ldr	r4, .L36+8
 180 00e2 0578     		ldrb	r5, [r0]	@ zero_extendqisi2
 181 00e4 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 182 00e6 A542     		cmp	r5, r4
 183 00e8 0DD2     		bcs	.L15
 210:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 211:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DATA_REG =
 212:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                  Camera_I2C_mstrWrBufPtr[Camera_I2C_mstrWrBufIndex]
 184              		.loc 1 212 0
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 8


 185 00ea 454D     		ldr	r5, .L36+12
 186 00ec 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 187 00ee 2D68     		ldr	r5, [r5]
 188 00f0 E4B2     		uxtb	r4, r4
 189 00f2 2C5D     		ldrb	r4, [r5, r4]	@ zero_extendqisi2
 211:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                  Camera_I2C_mstrWrBufPtr[Camera_I2C_mstrWrBufIndex]
 190              		.loc 1 211 0
 191 00f4 434D     		ldr	r5, .L36+16
 192              		.loc 1 212 0
 193 00f6 E4B2     		uxtb	r4, r4
 211:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                  Camera_I2C_mstrWrBufPtr[Camera_I2C_mstrWrBufIndex]
 194              		.loc 1 211 0
 195 00f8 2C70     		strb	r4, [r5]
 213:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_TRANSMIT_DATA;
 196              		.loc 1 213 0
 197 00fa 0424     		movs	r4, #4
 198 00fc 1470     		strb	r4, [r2]
 214:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_mstrWrBufIndex++;
 199              		.loc 1 214 0
 200 00fe 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 201 0100 0132     		adds	r2, r2, #1
 202 0102 D2B2     		uxtb	r2, r2
 203 0104 29E0     		b	.L32
 204              	.L15:
 215:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 216:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* End of buffer: complete writing */
 217:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else if(Camera_I2C_CHECK_NO_STOP(Camera_I2C_mstrControl))
 205              		.loc 1 217 0
 206 0106 4148     		ldr	r0, .L36+24
 207 0108 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 208 010a 8007     		lsls	r0, r0, #30
 209 010c 04D5     		bpl	.L16
 218:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 219:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Set write complete and master halted */
 220:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_XFER_HALT |
 210              		.loc 1 220 0
 211 010e 4048     		ldr	r0, .L36+28
 212 0110 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 213 0112 42F00A02 		orr	r2, r2, #10
 214 0116 42E0     		b	.L31
 215              	.L16:
 221:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                         Camera_I2C_MSTAT_WR_CMPLT);
 222:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 223:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_state = Camera_I2C_SM_MSTR_HALT;    /* Expect restart */
 224:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DisableInt();
 225:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 226:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else  /* Do normal Stop */
 227:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 228:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it 
 216              		.loc 1 228 0
 217 0118 3F4C     		ldr	r4, .L36+36
 218 011a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 219 011c 40F01000 		orr	r0, r0, #16
 220 0120 2070     		strb	r0, [r4]
 229:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_GENERATE_STOP;
 221              		.loc 1 229 0
 222 0122 3E48     		ldr	r0, .L36+40
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 9


 223 0124 1024     		movs	r4, #16
 224 0126 0470     		strb	r4, [r0]
 225 0128 0420     		movs	r0, #4
 226 012a 2BE0     		b	.L30
 227              	.L14:
 230:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 231:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 232:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Last byte NAKed: end writing */
 233:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else if(Camera_I2C_CHECK_NO_STOP(Camera_I2C_mstrControl))
 228              		.loc 1 233 0
 229 012c 3748     		ldr	r0, .L36+24
 230 012e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 231 0130 10F0020F 		tst	r0, #2
 232 0134 3648     		ldr	r0, .L36+28
 233 0136 03D0     		beq	.L17
 234:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 235:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Set write complete, short transfer and master halted */
 236:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_ERR_XFER       |
 234              		.loc 1 236 0
 235 0138 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 236 013a 42F09A02 		orr	r2, r2, #154
 237 013e 2EE0     		b	.L31
 238              	.L17:
 237:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_ERR_SHORT_XFER |
 238:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_XFER_HALT      |
 239:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_WR_CMPLT);
 240:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 241:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_state = Camera_I2C_SM_MSTR_HALT;    /* Expect ReStart */
 242:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_DisableInt();
 243:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 244:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else  /* Do normal Stop */
 245:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 246:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 239              		.loc 1 246 0
 240 0140 354D     		ldr	r5, .L36+36
 241 0142 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 242 0144 44F01004 		orr	r4, r4, #16
 243 0148 2C70     		strb	r4, [r5]
 247:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_GENERATE_STOP;
 244              		.loc 1 247 0
 245 014a 344C     		ldr	r4, .L36+40
 246 014c 1025     		movs	r5, #16
 247 014e 2570     		strb	r5, [r4]
 248 0150 0424     		movs	r4, #4
 249 0152 1470     		strb	r4, [r2]
 248:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 249:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Set short transfer and error flag */
 250:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_ERR_SHORT_XFER |
 250              		.loc 1 250 0
 251 0154 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 252 0156 42F09002 		orr	r2, r2, #144
 253              	.L32:
 254 015a 0270     		strb	r2, [r0]
 255 015c 2FE0     		b	.L3
 256              	.L7:
 251:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_ERR_XFER);
 252:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 10


 253:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 254:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 break;
 255:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 256:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             case Camera_I2C_SM_MSTR_RD_DATA:
 257:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 258:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_mstrRdBufPtr[Camera_I2C_mstrRdBufIndex] = Camera_I2C_DATA_REG;
 257              		.loc 1 258 0
 258 015e 304D     		ldr	r5, .L36+44
 259 0160 304C     		ldr	r4, .L36+48
 260 0162 2E68     		ldr	r6, [r5]
 261 0164 274D     		ldr	r5, .L36+16
 262 0166 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 263 0168 2D78     		ldrb	r5, [r5]	@ zero_extendqisi2
 264 016a C0B2     		uxtb	r0, r0
 265 016c EDB2     		uxtb	r5, r5
 266 016e 3554     		strb	r5, [r6, r0]
 259:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_mstrRdBufIndex++;
 267              		.loc 1 259 0
 268 0170 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 269 0172 0130     		adds	r0, r0, #1
 270 0174 C0B2     		uxtb	r0, r0
 271 0176 2070     		strb	r0, [r4]
 260:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 261:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Check if end of buffer */
 262:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(Camera_I2C_mstrRdBufIndex < Camera_I2C_mstrRdBufSize)
 272              		.loc 1 262 0
 273 0178 2B48     		ldr	r0, .L36+52
 274 017a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 275 017c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 276 017e 8442     		cmp	r4, r0
 277 0180 02D2     		bcs	.L18
 263:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 264:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ACK_AND_RECEIVE;       /* ACK and receive byte */
 278              		.loc 1 264 0
 279 0182 1020     		movs	r0, #16
 280              	.L30:
 281 0184 1070     		strb	r0, [r2]
 282 0186 1AE0     		b	.L3
 283              	.L18:
 265:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 266:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* End of buffer: complete reading */
 267:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else if(Camera_I2C_CHECK_NO_STOP(Camera_I2C_mstrControl))
 284              		.loc 1 267 0
 285 0188 2048     		ldr	r0, .L36+24
 286 018a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 287 018c 00F00200 		and	r0, r0, #2
 288 0190 00F0FF05 		and	r5, r0, #255
 289 0194 58B1     		cbz	r0, .L19
 268:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 269:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Set read complete and master halted */
 270:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_mstrStatus |= (Camera_I2C_MSTAT_XFER_HALT |
 290              		.loc 1 270 0
 291 0196 1E48     		ldr	r0, .L36+28
 292 0198 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 293 019a 42F00902 		orr	r2, r2, #9
 294              	.L31:
 295 019e 0270     		strb	r2, [r0]
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 11


 271:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                     Camera_I2C_MSTAT_RD_CMPLT);
 272:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 273:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_state = Camera_I2C_SM_MSTR_HALT;    /* Expect ReStart */
 296              		.loc 1 273 0
 297 01a0 6022     		movs	r2, #96
 298 01a2 0A70     		strb	r2, [r1]
 274:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_DisableInt();
 299              		.loc 1 274 0
 300 01a4 1B4A     		ldr	r2, .L36+32
 301 01a6 4FF40040 		mov	r0, #32768
 302 01aa 1060     		str	r0, [r2]
 303 01ac 07E0     		b	.L3
 304              	.L19:
 275:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 276:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else
 277:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 278:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ENABLE_INT_ON_STOP;
 305              		.loc 1 278 0
 306 01ae 1A4C     		ldr	r4, .L36+36
 307 01b0 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 308 01b2 40F01000 		orr	r0, r0, #16
 309 01b6 2070     		strb	r0, [r4]
 279:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_NAK_AND_RECEIVE;       /* NACK and TRY to generate Stop */
 310              		.loc 1 279 0
 311 01b8 1570     		strb	r5, [r2]
 312 01ba 00E0     		b	.L3
 313              	.LVL3:
 314              	.L24:
 128:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 315              		.loc 1 128 0
 316 01bc 0346     		mov	r3, r0
 317              	.LVL4:
 318              	.L3:
 280:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 281:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 break;
 282:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 283:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             default: /* This is an invalid state and should not occur */
 284:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 285:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #if(Camera_I2C_TIMEOUT_ENABLED)
 286:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handles this case */
 287:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_DisableInt();
 288:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_ClearPendingInt();
 289:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #else
 290:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Block execution flow: unexpected condition */
 291:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 CYASSERT(0u != 0u);
 292:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #endif /* (Camera_I2C_TIMEOUT_ENABLED) */
 293:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 294:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 break;
 295:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 296:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         }
 297:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 298:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* Catches Stop: end of transaction */
 299:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         if(Camera_I2C_CHECK_STOP_STS(tmpCsr))
 319              		.loc 1 299 0
 320 01be 9A06     		lsls	r2, r3, #26
 321 01c0 16D5     		bpl	.L1
 300:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         {
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 12


 301:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             Camera_I2C_mstrStatus |= Camera_I2C_GET_MSTAT_CMPLT;
 322              		.loc 1 301 0
 323 01c2 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 324              	.LVL5:
 325 01c4 124A     		ldr	r2, .L36+28
 326 01c6 13F0080F 		tst	r3, #8
 327 01ca 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 328 01cc 14BF     		ite	ne
 329 01ce 0123     		movne	r3, #1
 330 01d0 0223     		moveq	r3, #2
 331 01d2 0343     		orrs	r3, r3, r0
 332 01d4 1370     		strb	r3, [r2]
 302:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 303:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             Camera_I2C_DISABLE_INT_ON_STOP;
 333              		.loc 1 303 0
 334 01d6 104A     		ldr	r2, .L36+36
 335 01d8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 336 01da 03F0EF03 		and	r3, r3, #239
 337 01de 1370     		strb	r3, [r2]
 304:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             Camera_I2C_state = Camera_I2C_SM_IDLE;
 338              		.loc 1 304 0
 339 01e0 1023     		movs	r3, #16
 340 01e2 0B70     		strb	r3, [r1]
 341 01e4 70BD     		pop	{r4, r5, r6, pc}
 342              	.LVL6:
 343              	.L2:
 305:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         }
 306:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     #endif /* (Camera_I2C_MODE_MASTER_ENABLED) */
 307:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     }
 308:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     else if(Camera_I2C_CHECK_SM_SLAVE)
 344              		.loc 1 308 0
 345 01e6 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 346              	.LVL7:
 347 01e8 DB06     		lsls	r3, r3, #27
 309:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
 310:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     #if(Camera_I2C_MODE_SLAVE_ENABLED)
 311:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 312:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         if((Camera_I2C_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 313:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****            (Camera_I2C_CHECK_BYTE_COMPLETE(tmpCsr) && Camera_I2C_CHECK_ADDRESS_STS(tmpCsr)))
 314:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         {
 315:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* Catch end of master write transaction: use interrupt on Stop */
 316:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* The Stop bit history on address phase does not have correct state */
 317:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             if(Camera_I2C_SM_SL_WR_DATA == Camera_I2C_state)
 318:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 319:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_DISABLE_INT_ON_STOP;
 320:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 321:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_slStatus &= ((uint8) ~Camera_I2C_SSTAT_WR_BUSY);
 322:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_slStatus |= ((uint8)  Camera_I2C_SSTAT_WR_CMPLT);
 323:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 324:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_state = Camera_I2C_SM_IDLE;
 325:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 326:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         }
 327:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 328:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         if(Camera_I2C_CHECK_BYTE_COMPLETE(tmpCsr))
 329:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         {
 330:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* The address only issued after Start or ReStart: so check the address
 331:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                to catch these events:
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 13


 332:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 FF : sets an address phase with a byte_complete interrupt trigger.
 333:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 UDB: sets an address phase immediately after Start or ReStart. */
 334:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             if(Camera_I2C_CHECK_ADDRESS_STS(tmpCsr))
 335:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 336:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* Check for software address detection */
 337:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #if(Camera_I2C_SW_ADRR_DECODE)
 338:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 tmp8 = Camera_I2C_GET_SLAVE_ADDR(Camera_I2C_DATA_REG);
 339:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 340:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(tmp8 == Camera_I2C_slAddress)   /* Check for address match */
 341:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 342:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(0u != (Camera_I2C_DATA_REG & Camera_I2C_READ_FLAG))
 343:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 344:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Place code to prepare read buffer here                  */
 345:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* `#START Camera_I2C_SW_PREPARE_READ_BUF_interrupt` */
 346:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 347:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* `#END` */
 348:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 349:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     #ifdef Camera_I2C_SW_PREPARE_READ_BUF_CALLBACK
 350:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_SwPrepareReadBuf_Callback();
 351:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     #endif /* Camera_I2C_SW_PREPARE_READ_BUF_CALLBACK */
 352:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         
 353:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Prepare next operation to read, get data and place in data register */
 354:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         if(Camera_I2C_slRdBufIndex < Camera_I2C_slRdBufSize)
 355:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         {
 356:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_DATA_REG = Camera_I2C_slRdBufPtr[Camera_I2C_slRdBufIndex];
 358:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_ACK_AND_TRANSMIT;
 359:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_slRdBufIndex++;
 360:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 361:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_slStatus |= Camera_I2C_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         }
 363:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         else    /* Overflow: provide 0xFF on bus */
 364:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         {
 365:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_DATA_REG = Camera_I2C_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_ACK_AND_TRANSMIT;
 367:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 368:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                             Camera_I2C_slStatus  |= (Camera_I2C_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                            Camera_I2C_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         }
 371:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 372:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_state = Camera_I2C_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 374:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 376:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_state = Camera_I2C_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 379:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slStatus |= Camera_I2C_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 382:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 383:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else
 384:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 385:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#START Camera_I2C_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 388:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#END` */
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 14


 389:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 390:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #ifdef Camera_I2C_SW_ADDR_COMPARE_ENTRY_CALLBACK
 391:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_SwAddrCompare_EntryCallback();
 392:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #endif /* Camera_I2C_SW_ADDR_COMPARE_ENTRY_CALLBACK */
 393:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     
 394:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_NAK_AND_RECEIVE;   /* NACK address */
 395:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 396:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Place code to end of condition for NACK generation here */
 397:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#START Camera_I2C_SW_ADDR_COMPARE_interruptEnd`  */
 398:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 399:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#END` */
 400:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 401:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #ifdef Camera_I2C_SW_ADDR_COMPARE_EXIT_CALLBACK
 402:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_SwAddrCompare_ExitCallback();
 403:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #endif /* Camera_I2C_SW_ADDR_COMPARE_EXIT_CALLBACK */
 404:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 405:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 406:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #else /* (Camera_I2C_HW_ADRR_DECODE) */
 407:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 408:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(0u != (Camera_I2C_DATA_REG & Camera_I2C_READ_FLAG))
 409:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 410:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Place code to prepare read buffer here                  */
 411:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#START Camera_I2C_HW_PREPARE_READ_BUF_interrupt` */
 412:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 413:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* `#END` */
 414:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     
 415:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #ifdef Camera_I2C_HW_PREPARE_READ_BUF_CALLBACK
 416:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_HwPrepareReadBuf_Callback();
 417:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 #endif /* Camera_I2C_HW_PREPARE_READ_BUF_CALLBACK */
 418:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 419:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Prepare next operation to read, get data and place in data register */
 420:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(Camera_I2C_slRdBufIndex < Camera_I2C_slRdBufSize)
 421:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 422:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         /* Load first data byte from array */
 423:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DATA_REG = Camera_I2C_slRdBufPtr[Camera_I2C_slRdBufIndex];
 424:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ACK_AND_TRANSMIT;
 425:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slRdBufIndex++;
 426:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 427:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slStatus |= Camera_I2C_SSTAT_RD_BUSY;
 428:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 429:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else    /* Overflow: provide 0xFF on bus */
 430:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 431:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DATA_REG = Camera_I2C_OVERFLOW_RETURN;
 432:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_ACK_AND_TRANSMIT;
 433:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 434:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slStatus  |= (Camera_I2C_SSTAT_RD_BUSY |
 435:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                                                        Camera_I2C_SSTAT_RD_ERR_OVFL);
 436:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 437:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 438:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_state = Camera_I2C_SM_SL_RD_DATA;
 439:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 440:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else  /* Write transaction: receive 1st byte */
 441:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 442:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ACK_AND_RECEIVE;
 443:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_state = Camera_I2C_SM_SL_WR_DATA;
 444:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 445:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slStatus |= Camera_I2C_SSTAT_WR_BUSY;
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 15


 446:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ENABLE_INT_ON_STOP;
 447:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 448:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 449:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #endif /* (Camera_I2C_SW_ADRR_DECODE) */
 450:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 451:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* Data states */
 452:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* Data master writes into slave */
 453:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             else if(Camera_I2C_state == Camera_I2C_SM_SL_WR_DATA)
 454:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 455:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(Camera_I2C_slWrBufIndex < Camera_I2C_slWrBufSize)
 456:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 457:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     tmp8 = Camera_I2C_DATA_REG;
 458:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_ACK_AND_RECEIVE;
 459:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slWrBufPtr[Camera_I2C_slWrBufIndex] = tmp8;
 460:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slWrBufIndex++;
 461:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 462:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else  /* of array: complete write, send NACK */
 463:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 464:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_NAK_AND_RECEIVE;
 465:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 466:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slStatus |= Camera_I2C_SSTAT_WR_ERR_OVFL;
 467:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 468:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 469:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             /* Data master reads from slave */
 470:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             else if(Camera_I2C_state == Camera_I2C_SM_SL_RD_DATA)
 471:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
 472:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 if(Camera_I2C_CHECK_DATA_ACK(tmpCsr))
 473:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 474:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     if(Camera_I2C_slRdBufIndex < Camera_I2C_slRdBufSize)
 475:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 476:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                          /* Get data from array */
 477:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DATA_REG = Camera_I2C_slRdBufPtr[Camera_I2C_slRdBufIndex];
 478:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_TRANSMIT_DATA;
 479:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slRdBufIndex++;
 480:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 481:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     else   /* Overflow: provide 0xFF on bus */
 482:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     {
 483:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_DATA_REG = Camera_I2C_OVERFLOW_RETURN;
 484:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_TRANSMIT_DATA;
 485:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 486:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                         Camera_I2C_slStatus |= Camera_I2C_SSTAT_RD_ERR_OVFL;
 487:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     }
 488:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 489:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 else  /* Last byte was NACKed: read complete */
 490:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 {
 491:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     /* Only NACK appears on bus */
 492:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_DATA_REG = Camera_I2C_OVERFLOW_RETURN;
 493:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_NAK_AND_TRANSMIT;
 494:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 495:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slStatus &= ((uint8) ~Camera_I2C_SSTAT_RD_BUSY);
 496:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_slStatus |= ((uint8)  Camera_I2C_SSTAT_RD_CMPLT);
 497:.\Generated_Source\PSoC5/Camera_I2C_INT.c **** 
 498:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                     Camera_I2C_state = Camera_I2C_SM_IDLE;
 499:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 }
 500:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 501:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             else
 502:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             {
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 16


 503:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #if(Camera_I2C_TIMEOUT_ENABLED)
 504:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handle this case */
 505:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_DisableInt();
 506:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 Camera_I2C_ClearPendingInt();
 507:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #else
 508:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 /* Block execution flow: unexpected condition */
 509:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****                 CYASSERT(0u != 0u);
 510:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             #endif /* (Camera_I2C_TIMEOUT_ENABLED) */
 511:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****             }
 512:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         }
 513:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     #endif /* (Camera_I2C_MODE_SLAVE_ENABLED) */
 514:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     }
 515:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     else
 516:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****     {
 517:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 518:.\Generated_Source\PSoC5/Camera_I2C_INT.c ****         Camera_I2C_state = Camera_I2C_SM_IDLE;
 348              		.loc 1 518 0
 349 01ea 5CBF     		itt	pl
 350 01ec 1023     		movpl	r3, #16
 351 01ee 0370     		strbpl	r3, [r0]
 352              	.L1:
 353 01f0 70BD     		pop	{r4, r5, r6, pc}
 354              	.L37:
 355 01f2 00BF     		.align	2
 356              	.L36:
 357 01f4 00000000 		.word	Camera_I2C_state
 358 01f8 D7490040 		.word	1073760727
 359 01fc 00000000 		.word	Camera_I2C_mstrWrBufSize
 360 0200 00000000 		.word	Camera_I2C_mstrWrBufPtr
 361 0204 D8490040 		.word	1073760728
 362 0208 00000000 		.word	Camera_I2C_mstrWrBufIndex
 363 020c 00000000 		.word	Camera_I2C_mstrControl
 364 0210 00000000 		.word	Camera_I2C_mstrStatus
 365 0214 80E100E0 		.word	-536813184
 366 0218 D6490040 		.word	1073760726
 367 021c D9490040 		.word	1073760729
 368 0220 00000000 		.word	Camera_I2C_mstrRdBufPtr
 369 0224 00000000 		.word	Camera_I2C_mstrRdBufIndex
 370 0228 00000000 		.word	Camera_I2C_mstrRdBufSize
 371              		.cfi_endproc
 372              	.LFE0:
 373              		.size	Camera_I2C_ISR, .-Camera_I2C_ISR
 374              		.text
 375              	.Letext0:
 376              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 377              		.file 3 ".\\Generated_Source\\PSoC5\\Camera_I2C_PVT.h"
 378              		.section	.debug_info,"",%progbits
 379              	.Ldebug_info0:
 380 0000 4C010000 		.4byte	0x14c
 381 0004 0400     		.2byte	0x4
 382 0006 00000000 		.4byte	.Ldebug_abbrev0
 383 000a 04       		.byte	0x4
 384 000b 01       		.uleb128 0x1
 385 000c E4010000 		.4byte	.LASF26
 386 0010 01       		.byte	0x1
 387 0011 95000000 		.4byte	.LASF27
 388 0015 CD000000 		.4byte	.LASF28
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 17


 389 0019 00000000 		.4byte	.Ldebug_ranges0+0
 390 001d 00000000 		.4byte	0
 391 0021 00000000 		.4byte	.Ldebug_line0
 392 0025 02       		.uleb128 0x2
 393 0026 01       		.byte	0x1
 394 0027 06       		.byte	0x6
 395 0028 7B020000 		.4byte	.LASF0
 396 002c 02       		.uleb128 0x2
 397 002d 01       		.byte	0x1
 398 002e 08       		.byte	0x8
 399 002f BF000000 		.4byte	.LASF1
 400 0033 02       		.uleb128 0x2
 401 0034 02       		.byte	0x2
 402 0035 05       		.byte	0x5
 403 0036 DA010000 		.4byte	.LASF2
 404 003a 02       		.uleb128 0x2
 405 003b 02       		.byte	0x2
 406 003c 07       		.byte	0x7
 407 003d 4D000000 		.4byte	.LASF3
 408 0041 02       		.uleb128 0x2
 409 0042 04       		.byte	0x4
 410 0043 05       		.byte	0x5
 411 0044 72020000 		.4byte	.LASF4
 412 0048 02       		.uleb128 0x2
 413 0049 04       		.byte	0x4
 414 004a 07       		.byte	0x7
 415 004b 1A010000 		.4byte	.LASF5
 416 004f 02       		.uleb128 0x2
 417 0050 08       		.byte	0x8
 418 0051 05       		.byte	0x5
 419 0052 C7010000 		.4byte	.LASF6
 420 0056 02       		.uleb128 0x2
 421 0057 08       		.byte	0x8
 422 0058 07       		.byte	0x7
 423 0059 96010000 		.4byte	.LASF7
 424 005d 03       		.uleb128 0x3
 425 005e 04       		.byte	0x4
 426 005f 05       		.byte	0x5
 427 0060 696E7400 		.ascii	"int\000"
 428 0064 02       		.uleb128 0x2
 429 0065 04       		.byte	0x4
 430 0066 07       		.byte	0x7
 431 0067 6F010000 		.4byte	.LASF8
 432 006b 04       		.uleb128 0x4
 433 006c 2C010000 		.4byte	.LASF9
 434 0070 02       		.byte	0x2
 435 0071 9201     		.2byte	0x192
 436 0073 2C000000 		.4byte	0x2c
 437 0077 04       		.uleb128 0x4
 438 0078 68010000 		.4byte	.LASF10
 439 007c 02       		.byte	0x2
 440 007d 9401     		.2byte	0x194
 441 007f 48000000 		.4byte	0x48
 442 0083 02       		.uleb128 0x2
 443 0084 04       		.byte	0x4
 444 0085 04       		.byte	0x4
 445 0086 78000000 		.4byte	.LASF11
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 18


 446 008a 02       		.uleb128 0x2
 447 008b 08       		.byte	0x8
 448 008c 04       		.byte	0x4
 449 008d 61010000 		.4byte	.LASF12
 450 0091 02       		.uleb128 0x2
 451 0092 01       		.byte	0x1
 452 0093 08       		.byte	0x8
 453 0094 D5010000 		.4byte	.LASF13
 454 0098 04       		.uleb128 0x4
 455 0099 15010000 		.4byte	.LASF14
 456 009d 02       		.byte	0x2
 457 009e 3C02     		.2byte	0x23c
 458 00a0 A4000000 		.4byte	0xa4
 459 00a4 05       		.uleb128 0x5
 460 00a5 6B000000 		.4byte	0x6b
 461 00a9 04       		.uleb128 0x4
 462 00aa 07000000 		.4byte	.LASF15
 463 00ae 02       		.byte	0x2
 464 00af 3E02     		.2byte	0x23e
 465 00b1 B5000000 		.4byte	0xb5
 466 00b5 05       		.uleb128 0x5
 467 00b6 77000000 		.4byte	0x77
 468 00ba 02       		.uleb128 0x2
 469 00bb 04       		.byte	0x4
 470 00bc 07       		.byte	0x7
 471 00bd BE010000 		.4byte	.LASF16
 472 00c1 06       		.uleb128 0x6
 473 00c2 3E000000 		.4byte	.LASF29
 474 00c6 01       		.byte	0x1
 475 00c7 2E       		.byte	0x2e
 476 00c8 00000000 		.4byte	.LFB0
 477 00cc 2C020000 		.4byte	.LFE0-.LFB0
 478 00d0 01       		.uleb128 0x1
 479 00d1 9C       		.byte	0x9c
 480 00d2 E6000000 		.4byte	0xe6
 481 00d6 07       		.uleb128 0x7
 482 00d7 00000000 		.4byte	.LASF30
 483 00db 01       		.byte	0x1
 484 00dc 34       		.byte	0x34
 485 00dd 6B000000 		.4byte	0x6b
 486 00e1 00000000 		.4byte	.LLST0
 487 00e5 00       		.byte	0
 488 00e6 08       		.uleb128 0x8
 489 00e7 AD010000 		.4byte	.LASF17
 490 00eb 03       		.byte	0x3
 491 00ec 23       		.byte	0x23
 492 00ed A4000000 		.4byte	0xa4
 493 00f1 08       		.uleb128 0x8
 494 00f2 4B010000 		.4byte	.LASF18
 495 00f6 03       		.byte	0x3
 496 00f7 27       		.byte	0x27
 497 00f8 A4000000 		.4byte	0xa4
 498 00fc 08       		.uleb128 0x8
 499 00fd 7E000000 		.4byte	.LASF19
 500 0101 03       		.byte	0x3
 501 0102 28       		.byte	0x28
 502 0103 A4000000 		.4byte	0xa4
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 19


 503 0107 08       		.uleb128 0x8
 504 0108 60000000 		.4byte	.LASF20
 505 010c 03       		.byte	0x3
 506 010d 2B       		.byte	0x2b
 507 010e 12010000 		.4byte	0x112
 508 0112 09       		.uleb128 0x9
 509 0113 04       		.byte	0x4
 510 0114 A4000000 		.4byte	0xa4
 511 0118 08       		.uleb128 0x8
 512 0119 25000000 		.4byte	.LASF21
 513 011d 03       		.byte	0x3
 514 011e 2C       		.byte	0x2c
 515 011f A4000000 		.4byte	0xa4
 516 0123 08       		.uleb128 0x8
 517 0124 87020000 		.4byte	.LASF22
 518 0128 03       		.byte	0x3
 519 0129 2D       		.byte	0x2d
 520 012a A4000000 		.4byte	0xa4
 521 012e 08       		.uleb128 0x8
 522 012f 0D000000 		.4byte	.LASF23
 523 0133 03       		.byte	0x3
 524 0134 30       		.byte	0x30
 525 0135 12010000 		.4byte	0x112
 526 0139 08       		.uleb128 0x8
 527 013a 32010000 		.4byte	.LASF24
 528 013e 03       		.byte	0x3
 529 013f 31       		.byte	0x31
 530 0140 A4000000 		.4byte	0xa4
 531 0144 08       		.uleb128 0x8
 532 0145 7C010000 		.4byte	.LASF25
 533 0149 03       		.byte	0x3
 534 014a 32       		.byte	0x32
 535 014b A4000000 		.4byte	0xa4
 536 014f 00       		.byte	0
 537              		.section	.debug_abbrev,"",%progbits
 538              	.Ldebug_abbrev0:
 539 0000 01       		.uleb128 0x1
 540 0001 11       		.uleb128 0x11
 541 0002 01       		.byte	0x1
 542 0003 25       		.uleb128 0x25
 543 0004 0E       		.uleb128 0xe
 544 0005 13       		.uleb128 0x13
 545 0006 0B       		.uleb128 0xb
 546 0007 03       		.uleb128 0x3
 547 0008 0E       		.uleb128 0xe
 548 0009 1B       		.uleb128 0x1b
 549 000a 0E       		.uleb128 0xe
 550 000b 55       		.uleb128 0x55
 551 000c 17       		.uleb128 0x17
 552 000d 11       		.uleb128 0x11
 553 000e 01       		.uleb128 0x1
 554 000f 10       		.uleb128 0x10
 555 0010 17       		.uleb128 0x17
 556 0011 00       		.byte	0
 557 0012 00       		.byte	0
 558 0013 02       		.uleb128 0x2
 559 0014 24       		.uleb128 0x24
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 20


 560 0015 00       		.byte	0
 561 0016 0B       		.uleb128 0xb
 562 0017 0B       		.uleb128 0xb
 563 0018 3E       		.uleb128 0x3e
 564 0019 0B       		.uleb128 0xb
 565 001a 03       		.uleb128 0x3
 566 001b 0E       		.uleb128 0xe
 567 001c 00       		.byte	0
 568 001d 00       		.byte	0
 569 001e 03       		.uleb128 0x3
 570 001f 24       		.uleb128 0x24
 571 0020 00       		.byte	0
 572 0021 0B       		.uleb128 0xb
 573 0022 0B       		.uleb128 0xb
 574 0023 3E       		.uleb128 0x3e
 575 0024 0B       		.uleb128 0xb
 576 0025 03       		.uleb128 0x3
 577 0026 08       		.uleb128 0x8
 578 0027 00       		.byte	0
 579 0028 00       		.byte	0
 580 0029 04       		.uleb128 0x4
 581 002a 16       		.uleb128 0x16
 582 002b 00       		.byte	0
 583 002c 03       		.uleb128 0x3
 584 002d 0E       		.uleb128 0xe
 585 002e 3A       		.uleb128 0x3a
 586 002f 0B       		.uleb128 0xb
 587 0030 3B       		.uleb128 0x3b
 588 0031 05       		.uleb128 0x5
 589 0032 49       		.uleb128 0x49
 590 0033 13       		.uleb128 0x13
 591 0034 00       		.byte	0
 592 0035 00       		.byte	0
 593 0036 05       		.uleb128 0x5
 594 0037 35       		.uleb128 0x35
 595 0038 00       		.byte	0
 596 0039 49       		.uleb128 0x49
 597 003a 13       		.uleb128 0x13
 598 003b 00       		.byte	0
 599 003c 00       		.byte	0
 600 003d 06       		.uleb128 0x6
 601 003e 2E       		.uleb128 0x2e
 602 003f 01       		.byte	0x1
 603 0040 3F       		.uleb128 0x3f
 604 0041 19       		.uleb128 0x19
 605 0042 03       		.uleb128 0x3
 606 0043 0E       		.uleb128 0xe
 607 0044 3A       		.uleb128 0x3a
 608 0045 0B       		.uleb128 0xb
 609 0046 3B       		.uleb128 0x3b
 610 0047 0B       		.uleb128 0xb
 611 0048 27       		.uleb128 0x27
 612 0049 19       		.uleb128 0x19
 613 004a 11       		.uleb128 0x11
 614 004b 01       		.uleb128 0x1
 615 004c 12       		.uleb128 0x12
 616 004d 06       		.uleb128 0x6
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 21


 617 004e 40       		.uleb128 0x40
 618 004f 18       		.uleb128 0x18
 619 0050 9742     		.uleb128 0x2117
 620 0052 19       		.uleb128 0x19
 621 0053 01       		.uleb128 0x1
 622 0054 13       		.uleb128 0x13
 623 0055 00       		.byte	0
 624 0056 00       		.byte	0
 625 0057 07       		.uleb128 0x7
 626 0058 34       		.uleb128 0x34
 627 0059 00       		.byte	0
 628 005a 03       		.uleb128 0x3
 629 005b 0E       		.uleb128 0xe
 630 005c 3A       		.uleb128 0x3a
 631 005d 0B       		.uleb128 0xb
 632 005e 3B       		.uleb128 0x3b
 633 005f 0B       		.uleb128 0xb
 634 0060 49       		.uleb128 0x49
 635 0061 13       		.uleb128 0x13
 636 0062 02       		.uleb128 0x2
 637 0063 17       		.uleb128 0x17
 638 0064 00       		.byte	0
 639 0065 00       		.byte	0
 640 0066 08       		.uleb128 0x8
 641 0067 34       		.uleb128 0x34
 642 0068 00       		.byte	0
 643 0069 03       		.uleb128 0x3
 644 006a 0E       		.uleb128 0xe
 645 006b 3A       		.uleb128 0x3a
 646 006c 0B       		.uleb128 0xb
 647 006d 3B       		.uleb128 0x3b
 648 006e 0B       		.uleb128 0xb
 649 006f 49       		.uleb128 0x49
 650 0070 13       		.uleb128 0x13
 651 0071 3F       		.uleb128 0x3f
 652 0072 19       		.uleb128 0x19
 653 0073 3C       		.uleb128 0x3c
 654 0074 19       		.uleb128 0x19
 655 0075 00       		.byte	0
 656 0076 00       		.byte	0
 657 0077 09       		.uleb128 0x9
 658 0078 0F       		.uleb128 0xf
 659 0079 00       		.byte	0
 660 007a 0B       		.uleb128 0xb
 661 007b 0B       		.uleb128 0xb
 662 007c 49       		.uleb128 0x49
 663 007d 13       		.uleb128 0x13
 664 007e 00       		.byte	0
 665 007f 00       		.byte	0
 666 0080 00       		.byte	0
 667              		.section	.debug_loc,"",%progbits
 668              	.Ldebug_loc0:
 669              	.LLST0:
 670 0000 0C000000 		.4byte	.LVL0
 671 0004 3A000000 		.4byte	.LVL1
 672 0008 0100     		.2byte	0x1
 673 000a 53       		.byte	0x53
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 22


 674 000b 3A000000 		.4byte	.LVL1
 675 000f DA000000 		.4byte	.LVL2
 676 0013 0100     		.2byte	0x1
 677 0015 50       		.byte	0x50
 678 0016 DA000000 		.4byte	.LVL2
 679 001a BC010000 		.4byte	.LVL3
 680 001e 0100     		.2byte	0x1
 681 0020 53       		.byte	0x53
 682 0021 BC010000 		.4byte	.LVL3
 683 0025 BE010000 		.4byte	.LVL4
 684 0029 0100     		.2byte	0x1
 685 002b 50       		.byte	0x50
 686 002c BE010000 		.4byte	.LVL4
 687 0030 C4010000 		.4byte	.LVL5
 688 0034 0100     		.2byte	0x1
 689 0036 53       		.byte	0x53
 690 0037 E6010000 		.4byte	.LVL6
 691 003b E8010000 		.4byte	.LVL7
 692 003f 0100     		.2byte	0x1
 693 0041 53       		.byte	0x53
 694 0042 00000000 		.4byte	0
 695 0046 00000000 		.4byte	0
 696              		.section	.debug_aranges,"",%progbits
 697 0000 1C000000 		.4byte	0x1c
 698 0004 0200     		.2byte	0x2
 699 0006 00000000 		.4byte	.Ldebug_info0
 700 000a 04       		.byte	0x4
 701 000b 00       		.byte	0
 702 000c 0000     		.2byte	0
 703 000e 0000     		.2byte	0
 704 0010 00000000 		.4byte	.LFB0
 705 0014 2C020000 		.4byte	.LFE0-.LFB0
 706 0018 00000000 		.4byte	0
 707 001c 00000000 		.4byte	0
 708              		.section	.debug_ranges,"",%progbits
 709              	.Ldebug_ranges0:
 710 0000 00000000 		.4byte	.LFB0
 711 0004 2C020000 		.4byte	.LFE0
 712 0008 00000000 		.4byte	0
 713 000c 00000000 		.4byte	0
 714              		.section	.debug_line,"",%progbits
 715              	.Ldebug_line0:
 716 0000 CF000000 		.section	.debug_str,"MS",%progbits,1
 716      02006100 
 716      00000201 
 716      FB0E0D00 
 716      01010101 
 717              	.LASF30:
 718 0000 746D7043 		.ascii	"tmpCsr\000"
 718      737200
 719              	.LASF15:
 720 0007 72656733 		.ascii	"reg32\000"
 720      3200
 721              	.LASF23:
 722 000d 43616D65 		.ascii	"Camera_I2C_mstrWrBufPtr\000"
 722      72615F49 
 722      32435F6D 
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 23


 722      73747257 
 722      72427566 
 723              	.LASF21:
 724 0025 43616D65 		.ascii	"Camera_I2C_mstrRdBufSize\000"
 724      72615F49 
 724      32435F6D 
 724      73747252 
 724      64427566 
 725              	.LASF29:
 726 003e 43616D65 		.ascii	"Camera_I2C_ISR\000"
 726      72615F49 
 726      32435F49 
 726      535200
 727              	.LASF3:
 728 004d 73686F72 		.ascii	"short unsigned int\000"
 728      7420756E 
 728      7369676E 
 728      65642069 
 728      6E7400
 729              	.LASF20:
 730 0060 43616D65 		.ascii	"Camera_I2C_mstrRdBufPtr\000"
 730      72615F49 
 730      32435F6D 
 730      73747252 
 730      64427566 
 731              	.LASF11:
 732 0078 666C6F61 		.ascii	"float\000"
 732      7400
 733              	.LASF19:
 734 007e 43616D65 		.ascii	"Camera_I2C_mstrControl\000"
 734      72615F49 
 734      32435F6D 
 734      73747243 
 734      6F6E7472 
 735              	.LASF27:
 736 0095 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Camera_I2C_INT.c\000"
 736      6E657261 
 736      7465645F 
 736      536F7572 
 736      63655C50 
 737              	.LASF1:
 738 00bf 756E7369 		.ascii	"unsigned char\000"
 738      676E6564 
 738      20636861 
 738      7200
 739              	.LASF28:
 740 00cd 443A5C44 		.ascii	"D:\\Documents\\Computer Science\\PSoc\\ECE3091 Auto"
 740      6F63756D 
 740      656E7473 
 740      5C436F6D 
 740      70757465 
 741 00fc 5075636B 		.ascii	"PuckPickup\\Display.cydsn\000"
 741      5069636B 
 741      75705C44 
 741      6973706C 
 741      61792E63 
 742              	.LASF14:
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 24


 743 0115 72656738 		.ascii	"reg8\000"
 743      00
 744              	.LASF5:
 745 011a 6C6F6E67 		.ascii	"long unsigned int\000"
 745      20756E73 
 745      69676E65 
 745      6420696E 
 745      7400
 746              	.LASF9:
 747 012c 75696E74 		.ascii	"uint8\000"
 747      3800
 748              	.LASF24:
 749 0132 43616D65 		.ascii	"Camera_I2C_mstrWrBufSize\000"
 749      72615F49 
 749      32435F6D 
 749      73747257 
 749      72427566 
 750              	.LASF18:
 751 014b 43616D65 		.ascii	"Camera_I2C_mstrStatus\000"
 751      72615F49 
 751      32435F6D 
 751      73747253 
 751      74617475 
 752              	.LASF12:
 753 0161 646F7562 		.ascii	"double\000"
 753      6C6500
 754              	.LASF10:
 755 0168 75696E74 		.ascii	"uint32\000"
 755      333200
 756              	.LASF8:
 757 016f 756E7369 		.ascii	"unsigned int\000"
 757      676E6564 
 757      20696E74 
 757      00
 758              	.LASF25:
 759 017c 43616D65 		.ascii	"Camera_I2C_mstrWrBufIndex\000"
 759      72615F49 
 759      32435F6D 
 759      73747257 
 759      72427566 
 760              	.LASF7:
 761 0196 6C6F6E67 		.ascii	"long long unsigned int\000"
 761      206C6F6E 
 761      6720756E 
 761      7369676E 
 761      65642069 
 762              	.LASF17:
 763 01ad 43616D65 		.ascii	"Camera_I2C_state\000"
 763      72615F49 
 763      32435F73 
 763      74617465 
 763      00
 764              	.LASF16:
 765 01be 73697A65 		.ascii	"sizetype\000"
 765      74797065 
 765      00
 766              	.LASF6:
ARM GAS  D:\TEMP\ccvZaW4h.s 			page 25


 767 01c7 6C6F6E67 		.ascii	"long long int\000"
 767      206C6F6E 
 767      6720696E 
 767      7400
 768              	.LASF13:
 769 01d5 63686172 		.ascii	"char\000"
 769      00
 770              	.LASF2:
 771 01da 73686F72 		.ascii	"short int\000"
 771      7420696E 
 771      7400
 772              	.LASF26:
 773 01e4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 773      4320342E 
 773      392E3320 
 773      32303135 
 773      30333033 
 774 0217 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 774      20726576 
 774      6973696F 
 774      6E203232 
 774      31323230 
 775 024a 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 775      66756E63 
 775      74696F6E 
 775      2D736563 
 775      74696F6E 
 776              	.LASF4:
 777 0272 6C6F6E67 		.ascii	"long int\000"
 777      20696E74 
 777      00
 778              	.LASF0:
 779 027b 7369676E 		.ascii	"signed char\000"
 779      65642063 
 779      68617200 
 780              	.LASF22:
 781 0287 43616D65 		.ascii	"Camera_I2C_mstrRdBufIndex\000"
 781      72615F49 
 781      32435F6D 
 781      73747252 
 781      64427566 
 782              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
