ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_Claw.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_Claw_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_Claw_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_Claw_Enable, %function
  24              	PWM_Claw_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_Claw.c"
   1:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_Claw.c **** * File Name: PWM_Claw.c
   3:.\Generated_Source\PSoC5/PWM_Claw.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_Claw.c **** *
   5:.\Generated_Source\PSoC5/PWM_Claw.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_Claw.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_Claw.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_Claw.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_Claw.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_Claw.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_Claw.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_Claw.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_Claw.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  15:.\Generated_Source\PSoC5/PWM_Claw.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  17:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_Claw.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_Claw.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_Claw.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_Claw.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  24:.\Generated_Source\PSoC5/PWM_Claw.c **** #include "PWM_Claw.h"
  25:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  26:.\Generated_Source\PSoC5/PWM_Claw.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_Claw.c **** #ifdef PWM_Claw_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_Claw.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_Claw.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* PWM_Claw_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_Claw.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_Claw.c **** uint8 PWM_Claw_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  34:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  35:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_Start
  37:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  39:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_Claw.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_Claw.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_Claw.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  44:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  47:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  50:.\Generated_Source\PSoC5/PWM_Claw.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_Claw.c **** *  PWM_Claw_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_Claw.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  54:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_Claw.c **** void PWM_Claw_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_Claw.c **** {
  57:.\Generated_Source\PSoC5/PWM_Claw.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_Claw.c ****     if(PWM_Claw_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
  60:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_Init();
  61:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
  63:.\Generated_Source\PSoC5/PWM_Claw.c ****     PWM_Claw_Enable();
  64:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  65:.\Generated_Source\PSoC5/PWM_Claw.c **** }
  66:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  67:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  68:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_Init
  70:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  72:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_Claw.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_Claw.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_Claw.c **** *  PWM_Claw_Start().
  76:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  77:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  80:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_Claw.c **** *
  83:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_Claw.c **** void PWM_Claw_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_Claw.c **** {
  86:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction || PWM_Claw_UseControl)
  87:.\Generated_Source\PSoC5/PWM_Claw.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction || PWM_Claw_UseControl) */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  90:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if(!PWM_Claw_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_Claw.c ****             uint8 PWM_Claw_interruptState;
  94:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (!PWM_Claw_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_Claw.c **** 
  97:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL |= PWM_Claw_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_CONTROL |= PWM_Claw_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 104:.\Generated_Source\PSoC5/PWM_Claw.c ****         ctrl = PWM_Claw_CONTROL3 & ((uint8 )(~PWM_Claw_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL3 = ctrl | PWM_Claw_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 107:.\Generated_Source\PSoC5/PWM_Claw.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_RT1 &= ((uint8)(~PWM_Claw_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_RT1 |= PWM_Claw_SYNC;
 110:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 111:.\Generated_Source\PSoC5/PWM_Claw.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_RT1 &= ((uint8)(~PWM_Claw_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_RT1 |= PWM_Claw_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 115:.\Generated_Source\PSoC5/PWM_Claw.c ****     #elif (PWM_Claw_UseControl)
 116:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_Claw.c ****         ctrl = PWM_Claw_CONTROL & ((uint8)(~PWM_Claw_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_Claw.c ****                 ((uint8)(~PWM_Claw_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL = ctrl | PWM_Claw_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_Claw.c ****                                    PWM_Claw_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 123:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (!PWM_Claw_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_AUX_CONTROLDP0 |= (PWM_Claw_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else /* (PWM_Claw_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_AUX_CONTROLDP0 |= (PWM_Claw_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_AUX_CONTROLDP1 |= (PWM_Claw_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 133:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_WriteCounter(PWM_Claw_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (!PWM_Claw_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 136:.\Generated_Source\PSoC5/PWM_Claw.c ****     PWM_Claw_WritePeriod(PWM_Claw_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 138:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_WriteCompare(PWM_Claw_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_WriteCompare1(PWM_Claw_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_WriteCompare2(PWM_Claw_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 145:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_KillModeMinTime)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_WriteKillTime(PWM_Claw_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 149:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_WriteDeadTime(PWM_Claw_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 153:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UseStatus || PWM_Claw_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_SetInterruptMode(PWM_Claw_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UseStatus || PWM_Claw_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 157:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_GLOBAL_ENABLE |= PWM_Claw_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL2 |= PWM_Claw_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_Claw.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 165:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_STATUS_AUX_CTRL |= PWM_Claw_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 171:.\Generated_Source\PSoC5/PWM_Claw.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_Claw.c ****             CyExitCriticalSection(PWM_Claw_interruptState);
 173:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 174:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Clear the FIFO to enable the PWM_Claw_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_Claw.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_Claw.c **** }
 180:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 181:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 182:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_Enable
 184:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 186:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_Claw.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 189:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 192:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 195:.\Generated_Source\PSoC5/PWM_Claw.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_Claw.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 198:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_Claw.c **** void PWM_Claw_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_Claw.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_Claw.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_GLOBAL_ENABLE |= PWM_Claw_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_GLOBAL_STBY_ENABLE |= PWM_Claw_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 207:.\Generated_Source\PSoC5/PWM_Claw.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UseControl || PWM_Claw_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL |= PWM_Claw_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 76640040 		.word	1073767542
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_Claw_Enable, .-PWM_Claw_Enable
  45              		.section	.text.PWM_Claw_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_Claw_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_Claw_Stop, %function
  51              	PWM_Claw_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UseControl || PWM_Claw_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_Claw.c **** }
 212:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 213:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 214:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_Stop
 216:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 218:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_Claw.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_Claw.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 222:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 225:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 228:.\Generated_Source\PSoC5/PWM_Claw.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_Claw.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_Claw.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 232:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_Claw.c **** void PWM_Claw_Stop(void) 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_Claw.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UseControl || PWM_Claw_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_CONTROL &= ((uint8)(~PWM_Claw_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 76640040 		.word	1073767542
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_Claw_Stop, .-PWM_Claw_Stop
  71              		.section	.text.PWM_Claw_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_Claw_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_Claw_WriteCounter, %function
  77              	PWM_Claw_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UseControl || PWM_Claw_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 239:.\Generated_Source\PSoC5/PWM_Claw.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_GLOBAL_ENABLE &= ((uint8)(~PWM_Claw_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Claw_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_Claw.c **** }
 245:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 246:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 249:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 250:.\Generated_Source\PSoC5/PWM_Claw.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Function Name: PWM_Claw_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_Claw.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 254:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 258:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_Claw.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 262:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_Claw.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_Claw.c ****         void PWM_Claw_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_Claw.c ****         {
 268:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if(PWM_Claw_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 270:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #if(0 != PWM_Claw_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Claw_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #endif /* (0 != PWM_Claw_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 276:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL3 &= ((uint8)(~PWM_Claw_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 279:.\Generated_Source\PSoC5/PWM_Claw.c ****             #elif (PWM_Claw_UseControl)
 280:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 281:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #if(0 != PWM_Claw_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Claw_CTRL_CMPMODE
 283:.\Generated_Source\PSoC5/PWM_Claw.c ****                                                 PWM_Claw_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemode1masked = comparemode & PWM_Claw_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #endif /* (0 != PWM_Claw_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 288:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #if(0 != PWM_Claw_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Claw_CTRL_CMPMODE
 290:.\Generated_Source\PSoC5/PWM_Claw.c ****                                                PWM_Claw_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_Claw.c ****                     uint8 comparemode2masked = comparemode & PWM_Claw_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_Claw.c ****                 #endif /* (0 != PWM_Claw_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 295:.\Generated_Source\PSoC5/PWM_Claw.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL &= ((uint8)(~(PWM_Claw_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_Claw.c ****                                             PWM_Claw_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 300:.\Generated_Source\PSoC5/PWM_Claw.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_Claw.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (PWM_Claw_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_Claw.c ****         }
 304:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* PWM_Claw_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 306:.\Generated_Source\PSoC5/PWM_Claw.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 308:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 310:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 311:.\Generated_Source\PSoC5/PWM_Claw.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Function Name: PWM_Claw_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_Claw.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 315:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 318:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_Claw.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 325:.\Generated_Source\PSoC5/PWM_Claw.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_Claw.c ****         void PWM_Claw_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_Claw.c ****         {
 328:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if(0 != PWM_Claw_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_Claw.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Claw_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC5/PWM_Claw.c ****                                            PWM_Claw_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_Claw.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_Claw.c ****                 uint8 comparemodemasked = comparemode & PWM_Claw_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (0 != PWM_Claw_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 335:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if (PWM_Claw_UseControl)
 336:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL &= ((uint8)(~PWM_Claw_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (PWM_Claw_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_Claw.c ****         }
 340:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* PWM_Claw_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 342:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 344:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 345:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 349:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 352:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_Claw.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 356:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 359:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 362:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 363:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(0 != PWM_Claw_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_Claw.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Claw_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC5/PWM_Claw.c ****                                                  PWM_Claw_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_Claw.c ****             uint8 comparemodemasked = comparemode & PWM_Claw_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (0 != PWM_Claw_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 370:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_UseControl)
 371:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_CONTROL &= ((uint8)(~PWM_Claw_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 375:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /*PWM_Claw_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 377:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_Claw.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 380:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (!PWM_Claw_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 382:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 383:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 387:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 393:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 396:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 399:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 402:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_Claw.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_Claw.c ****         CY_SET_REG16(PWM_Claw_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 0C680040 		.word	1073768460
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_Claw_WriteCounter, .-PWM_Claw_WriteCounter
  96              		.section	.text.PWM_Claw_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_Claw_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_Claw_ReadCounter, %function
 102              	PWM_Claw_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 408:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 409:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 410:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 414:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 418:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 421:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 424:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint16 PWM_Claw_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_Claw.c ****           (void)CY_GET_REG8(PWM_Claw_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 432:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG16(PWM_Claw_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 16640040 		.word	1073767446
 122 0010 AC680040 		.word	1073768620
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_Claw_ReadCounter, .-PWM_Claw_ReadCounter
 126              		.section	.text.PWM_Claw_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_Claw_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_Claw_WritePeriod, %function
 132              	PWM_Claw_WritePeriod:
 133              	.LFB7:
 435:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 436:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_Claw.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 11


 438:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 439:.\Generated_Source\PSoC5/PWM_Claw.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Function Name: PWM_Claw_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_Claw.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 443:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 446:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 449:.\Generated_Source\PSoC5/PWM_Claw.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_Claw.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_Claw.c ****         *
 452:.\Generated_Source\PSoC5/PWM_Claw.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_Claw.c ****         void PWM_Claw_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_Claw.c ****         {
 455:.\Generated_Source\PSoC5/PWM_Claw.c ****             while(0u != (PWM_Claw_ReadStatusRegister() & PWM_Claw_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_Claw.c ****             {
 457:.\Generated_Source\PSoC5/PWM_Claw.c ****                 (void)PWM_Claw_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_Claw.c ****             }
 459:.\Generated_Source\PSoC5/PWM_Claw.c ****         }
 460:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 461:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* PWM_Claw_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 463:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* !PWM_Claw_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 465:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 466:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 470:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_Claw.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_Claw.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 474:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_Claw.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_Claw.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 478:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 481:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_Claw.c **** void PWM_Claw_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_Claw.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if(PWM_Claw_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_Claw.c ****         CY_SET_REG16(PWM_Claw_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_Claw.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_Claw.c ****         CY_SET_REG16(PWM_Claw_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 8C680040 		.word	1073768588
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_Claw_WritePeriod, .-PWM_Claw_WritePeriod
 151              		.section	.text.PWM_Claw_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_Claw_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_Claw_WriteCompare, %function
 157              	PWM_Claw_WriteCompare:
 158              	.LFB8:
 488:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_Claw.c **** }
 490:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 491:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 493:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 494:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 498:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 505:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 508:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 511:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 515:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_Claw.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 13


 521:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 4C680040 		.word	1073768524
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_Claw_WriteCompare, .-PWM_Claw_WriteCompare
 176              		.section	.text.PWM_Claw_SetInterruptMode,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_Claw_SetInterruptMode
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_Claw_SetInterruptMode, %function
 182              	PWM_Claw_SetInterruptMode:
 183              	.LFB9:
 523:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 525:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if (PWM_Claw_PWMMode == PWM_Claw__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if(PWM_Claw_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_Claw.c ****                 CY_SET_REG16(PWM_Claw_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_Claw.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_Claw.c ****                 CY_SET_REG16(PWM_Claw_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (PWM_Claw_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_PWMMode == PWM_Claw__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 533:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 534:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 535:.\Generated_Source\PSoC5/PWM_Claw.c **** #else
 536:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 537:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 538:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 542:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 548:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 551:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 554:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_Claw.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 558:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UsingFixedFunction)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 14


 559:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 564:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 565:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 566:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 570:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 577:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 580:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 583:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_Claw.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 587:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG16(PWM_Claw_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 593:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 595:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 597:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 598:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 602:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 605:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 608:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 611:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 614:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(!PWM_Claw_DeadBand2_4)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 15


 616:.\Generated_Source\PSoC5/PWM_Claw.c ****             CY_SET_REG8(PWM_Claw_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_DEADBAND_COUNT &= ((uint8)(~PWM_Claw_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 622:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if(PWM_Claw_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Claw_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC5/PWM_Claw.c ****                                                     PWM_Claw_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_Claw.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_Claw.c ****                 PWM_Claw_DEADBAND_COUNT |= deadtime & PWM_Claw_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (PWM_Claw_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 630:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (!PWM_Claw_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 632:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 633:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 634:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 638:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 641:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 644:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 647:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint8 PWM_Claw_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 650:.\Generated_Source\PSoC5/PWM_Claw.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(!PWM_Claw_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_Claw.c ****             return (CY_GET_REG8(PWM_Claw_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 655:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_Claw.c ****             #if(PWM_Claw_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_Claw.c ****                 return ((uint8)(((uint8)(PWM_Claw_DEADBAND_COUNT & PWM_Claw_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC5/PWM_Claw.c ****                                                                            PWM_Claw_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC5/PWM_Claw.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_Claw.c ****                 return (PWM_Claw_DEADBAND_COUNT & PWM_Claw_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_Claw.c ****             #endif /* (PWM_Claw_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (!PWM_Claw_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 664:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 666:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_UseStatus || PWM_Claw_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 668:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 669:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 16


 673:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 677:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 680:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 683:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 184              		.loc 1 685 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 686:.\Generated_Source\PSoC5/PWM_Claw.c ****         CY_SET_REG8(PWM_Claw_STATUS_MASK_PTR, interruptMode);
 190              		.loc 1 686 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 86640040 		.word	1073767558
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	PWM_Claw_SetInterruptMode, .-PWM_Claw_SetInterruptMode
 201              		.section	.text.PWM_Claw_ReadStatusRegister,"ax",%progbits
 202              		.align	2
 203              		.global	PWM_Claw_ReadStatusRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM_Claw_ReadStatusRegister, %function
 207              	PWM_Claw_ReadStatusRegister:
 208              	.LFB10:
 687:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 688:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 689:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 690:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 694:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 697:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 700:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [4]   : FIFO not empty
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 17


 705:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 710:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint8 PWM_Claw_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 209              		.loc 1 712 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG8(PWM_Claw_STATUS_PTR));
 214              		.loc 1 713 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 217              		.loc 1 714 0
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 66640040 		.word	1073767526
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	PWM_Claw_ReadStatusRegister, .-PWM_Claw_ReadStatusRegister
 226              		.section	.text.PWM_Claw_ReadControlRegister,"ax",%progbits
 227              		.align	2
 228              		.global	PWM_Claw_ReadControlRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_Claw_ReadControlRegister, %function
 232              	PWM_Claw_ReadControlRegister:
 233              	.LFB11:
 715:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 716:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* (PWM_Claw_UseStatus || PWM_Claw_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 718:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 719:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_UseControl)
 720:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 721:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 722:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 726:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 730:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 733:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 736:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 18


 737:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint8 PWM_Claw_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 234              		.loc 1 738 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/PWM_Claw.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 741:.\Generated_Source\PSoC5/PWM_Claw.c ****         result = CY_GET_REG8(PWM_Claw_CONTROL_PTR);
 239              		.loc 1 741 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242              	.LVL4:
 742:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 243              		.loc 1 743 0
 244 0004 7047     		bx	lr
 245              	.L27:
 246 0006 00BF     		.align	2
 247              	.L26:
 248 0008 76640040 		.word	1073767542
 249              		.cfi_endproc
 250              	.LFE11:
 251              		.size	PWM_Claw_ReadControlRegister, .-PWM_Claw_ReadControlRegister
 252              		.section	.text.PWM_Claw_WriteControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	PWM_Claw_WriteControlRegister
 255              		.thumb
 256              		.thumb_func
 257              		.type	PWM_Claw_WriteControlRegister, %function
 258              	PWM_Claw_WriteControlRegister:
 259              	.LFB12:
 744:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 745:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 746:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 750:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 754:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 761:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 764:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_Claw.c ****     void PWM_Claw_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 260              		.loc 1 766 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 19


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL5:
 767:.\Generated_Source\PSoC5/PWM_Claw.c ****         CY_SET_REG8(PWM_Claw_CONTROL_PTR, control);
 266              		.loc 1 767 0
 267 0000 014B     		ldr	r3, .L29
 268 0002 1870     		strb	r0, [r3]
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 76640040 		.word	1073767542
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	PWM_Claw_WriteControlRegister, .-PWM_Claw_WriteControlRegister
 277              		.section	.text.PWM_Claw_ReadCapture,"ax",%progbits
 278              		.align	2
 279              		.global	PWM_Claw_ReadCapture
 280              		.thumb
 281              		.thumb_func
 282              		.type	PWM_Claw_ReadCapture, %function
 283              	PWM_Claw_ReadCapture:
 284              	.LFB13:
 768:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 769:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 770:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* (PWM_Claw_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 772:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 773:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (!PWM_Claw_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 775:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 776:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 780:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 783:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 786:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 789:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint16 PWM_Claw_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 285              		.loc 1 791 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG16(PWM_Claw_CAPTURE_LSB_PTR));
 290              		.loc 1 792 0
 291 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 20


 292 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 293              		.loc 1 793 0
 294 0004 80B2     		uxth	r0, r0
 295 0006 7047     		bx	lr
 296              	.L33:
 297              		.align	2
 298              	.L32:
 299 0008 AC680040 		.word	1073768620
 300              		.cfi_endproc
 301              	.LFE13:
 302              		.size	PWM_Claw_ReadCapture, .-PWM_Claw_ReadCapture
 303              		.section	.text.PWM_Claw_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_Claw_ClearFIFO
 306              		.thumb
 307              		.thumb_func
 308              		.type	PWM_Claw_ClearFIFO, %function
 309              	PWM_Claw_ClearFIFO:
 310              	.LFB6:
 454:.\Generated_Source\PSoC5/PWM_Claw.c ****             while(0u != (PWM_Claw_ReadStatusRegister() & PWM_Claw_STATUS_FIFONEMPTY))
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 08B5     		push	{r3, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/PWM_Claw.c ****             {
 319              		.loc 1 455 0
 320 0002 01E0     		b	.L35
 321              	.L36:
 457:.\Generated_Source\PSoC5/PWM_Claw.c ****             }
 322              		.loc 1 457 0
 323 0004 FFF7FEFF 		bl	PWM_Claw_ReadCapture
 324              	.LVL6:
 325              	.L35:
 455:.\Generated_Source\PSoC5/PWM_Claw.c ****             {
 326              		.loc 1 455 0
 327 0008 FFF7FEFF 		bl	PWM_Claw_ReadStatusRegister
 328              	.LVL7:
 329 000c 10F0100F 		tst	r0, #16
 330 0010 F8D1     		bne	.L36
 459:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 331              		.loc 1 459 0
 332 0012 08BD     		pop	{r3, pc}
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	PWM_Claw_ClearFIFO, .-PWM_Claw_ClearFIFO
 336              		.section	.text.PWM_Claw_Init,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_Claw_Init
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_Claw_Init, %function
 342              	PWM_Claw_Init:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 21


 343              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if (PWM_Claw_UsingFixedFunction || PWM_Claw_UseControl)
 344              		.loc 1 85 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_Claw.c ****                 ((uint8)(~PWM_Claw_CTRL_CMPMODE1_MASK));
 352              		.loc 1 117 0
 353 0002 154A     		ldr	r2, .L40
 354 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 355 0006 03F0C003 		and	r3, r3, #192
 356              	.LVL8:
 119:.\Generated_Source\PSoC5/PWM_Claw.c ****                                    PWM_Claw_DEFAULT_COMPARE1_MODE;
 357              		.loc 1 119 0
 358 000a 43F00903 		orr	r3, r3, #9
 359              	.LVL9:
 360 000e 1370     		strb	r3, [r2]
 129:.\Generated_Source\PSoC5/PWM_Claw.c ****             PWM_Claw_AUX_CONTROLDP1 |= (PWM_Claw_AUX_CTRL_FIFO0_CLR);
 361              		.loc 1 129 0
 362 0010 124C     		ldr	r4, .L40+4
 363 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 364 0014 43F00103 		orr	r3, r3, #1
 365 0018 2370     		strb	r3, [r4]
 130:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_Resolution == 8) */
 366              		.loc 1 130 0
 367 001a 2132     		adds	r2, r2, #33
 368 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 369 001e 43F00103 		orr	r3, r3, #1
 370 0022 1370     		strb	r3, [r2]
 133:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (!PWM_Claw_UsingFixedFunction) */
 371              		.loc 1 133 0
 372 0024 40F2CF70 		movw	r0, #1999
 373 0028 FFF7FEFF 		bl	PWM_Claw_WriteCounter
 374              	.LVL10:
 136:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 375              		.loc 1 136 0
 376 002c 40F2CF70 		movw	r0, #1999
 377 0030 FFF7FEFF 		bl	PWM_Claw_WritePeriod
 378              	.LVL11:
 139:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 379              		.loc 1 139 0
 380 0034 1420     		movs	r0, #20
 381 0036 FFF7FEFF 		bl	PWM_Claw_WriteCompare
 382              	.LVL12:
 154:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UseStatus || PWM_Claw_UsingFixedFunction) */
 383              		.loc 1 154 0
 384 003a 0020     		movs	r0, #0
 385 003c FFF7FEFF 		bl	PWM_Claw_SetInterruptMode
 386              	.LVL13:
 167:.\Generated_Source\PSoC5/PWM_Claw.c ****             /* Use the interrupt output of the status register for IRQ output */
 387              		.loc 1 167 0
 388 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL14:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 22


 169:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 390              		.loc 1 169 0
 391 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 392 0046 43F01003 		orr	r3, r3, #16
 393 004a 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 394              		.loc 1 172 0
 395 004c FFF7FEFF 		bl	CyExitCriticalSection
 396              	.LVL15:
 176:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UseStatus) */
 397              		.loc 1 176 0
 398 0050 FFF7FEFF 		bl	PWM_Claw_ClearFIFO
 399              	.LVL16:
 400 0054 10BD     		pop	{r4, pc}
 401              	.L41:
 402 0056 00BF     		.align	2
 403              	.L40:
 404 0058 76640040 		.word	1073767542
 405 005c 96640040 		.word	1073767574
 406              		.cfi_endproc
 407              	.LFE1:
 408              		.size	PWM_Claw_Init, .-PWM_Claw_Init
 409              		.section	.text.PWM_Claw_Start,"ax",%progbits
 410              		.align	2
 411              		.global	PWM_Claw_Start
 412              		.thumb
 413              		.thumb_func
 414              		.type	PWM_Claw_Start, %function
 415              	PWM_Claw_Start:
 416              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_Claw.c ****     /* If not Initialized then initialize all required hardware and software */
 417              		.loc 1 56 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 425              		.loc 1 58 0
 426 0002 054B     		ldr	r3, .L45
 427 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 0006 23B9     		cbnz	r3, .L43
  60:.\Generated_Source\PSoC5/PWM_Claw.c ****         PWM_Claw_initVar = 1u;
 429              		.loc 1 60 0
 430 0008 FFF7FEFF 		bl	PWM_Claw_Init
 431              	.LVL17:
  61:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 432              		.loc 1 61 0
 433 000c 0122     		movs	r2, #1
 434 000e 024B     		ldr	r3, .L45
 435 0010 1A70     		strb	r2, [r3]
 436              	.L43:
  63:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 437              		.loc 1 63 0
 438 0012 FFF7FEFF 		bl	PWM_Claw_Enable
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 23


 439              	.LVL18:
 440 0016 08BD     		pop	{r3, pc}
 441              	.L46:
 442              		.align	2
 443              	.L45:
 444 0018 00000000 		.word	.LANCHOR0
 445              		.cfi_endproc
 446              	.LFE0:
 447              		.size	PWM_Claw_Start, .-PWM_Claw_Start
 448              		.section	.text.PWM_Claw_ReadCompare,"ax",%progbits
 449              		.align	2
 450              		.global	PWM_Claw_ReadCompare
 451              		.thumb
 452              		.thumb_func
 453              		.type	PWM_Claw_ReadCompare, %function
 454              	PWM_Claw_ReadCompare:
 455              	.LFB14:
 794:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 795:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* (!PWM_Claw_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 797:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 798:.\Generated_Source\PSoC5/PWM_Claw.c **** #if (PWM_Claw_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 800:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 801:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 805:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 809:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 812:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 815:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint16 PWM_Claw_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 456              		.loc 1 817 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/PWM_Claw.c ****         #if(PWM_Claw_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_Claw.c ****             return ((uint16)CY_GET_REG16(PWM_Claw_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_Claw.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_Claw.c ****             return (CY_GET_REG16(PWM_Claw_COMPARE1_LSB_PTR));
 461              		.loc 1 821 0
 462 0000 014B     		ldr	r3, .L48
 463 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/PWM_Claw.c ****         #endif /* (PWM_Claw_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 464              		.loc 1 823 0
 465 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 24


 466 0006 7047     		bx	lr
 467              	.L49:
 468              		.align	2
 469              	.L48:
 470 0008 4C680040 		.word	1073768524
 471              		.cfi_endproc
 472              	.LFE14:
 473              		.size	PWM_Claw_ReadCompare, .-PWM_Claw_ReadCompare
 474              		.section	.text.PWM_Claw_ReadPeriod,"ax",%progbits
 475              		.align	2
 476              		.global	PWM_Claw_ReadPeriod
 477              		.thumb
 478              		.thumb_func
 479              		.type	PWM_Claw_ReadPeriod, %function
 480              	PWM_Claw_ReadPeriod:
 481              	.LFB15:
 824:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 825:.\Generated_Source\PSoC5/PWM_Claw.c **** #else
 826:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 827:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 828:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 832:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 835:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 838:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 841:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint16 PWM_Claw_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 844:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG16(PWM_Claw_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 846:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 847:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 848:.\Generated_Source\PSoC5/PWM_Claw.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Function Name: PWM_Claw_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_Claw.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 852:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 855:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 858:.\Generated_Source\PSoC5/PWM_Claw.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_Claw.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_Claw.c ****     *
 861:.\Generated_Source\PSoC5/PWM_Claw.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_Claw.c ****     uint16 PWM_Claw_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_Claw.c ****     {
 864:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG16(PWM_Claw_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 25


 865:.\Generated_Source\PSoC5/PWM_Claw.c ****     }
 866:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 867:.\Generated_Source\PSoC5/PWM_Claw.c **** #endif /* (PWM_Claw_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 869:.\Generated_Source\PSoC5/PWM_Claw.c **** 
 870:.\Generated_Source\PSoC5/PWM_Claw.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_Claw.c **** * Function Name: PWM_Claw_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_Claw.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 874:.\Generated_Source\PSoC5/PWM_Claw.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_Claw.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 877:.\Generated_Source\PSoC5/PWM_Claw.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_Claw.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 880:.\Generated_Source\PSoC5/PWM_Claw.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_Claw.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_Claw.c **** *
 883:.\Generated_Source\PSoC5/PWM_Claw.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_Claw.c **** uint16 PWM_Claw_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_Claw.c **** {
 482              		.loc 1 885 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_Claw.c ****     #if(PWM_Claw_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_Claw.c ****         return ((uint16)CY_GET_REG16(PWM_Claw_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_Claw.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_Claw.c ****         return (CY_GET_REG16(PWM_Claw_PERIOD_LSB_PTR));
 487              		.loc 1 889 0
 488 0000 014B     		ldr	r3, .L51
 489 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/PWM_Claw.c ****     #endif /* (PWM_Claw_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_Claw.c **** }
 490              		.loc 1 891 0
 491 0004 80B2     		uxth	r0, r0
 492 0006 7047     		bx	lr
 493              	.L52:
 494              		.align	2
 495              	.L51:
 496 0008 8C680040 		.word	1073768588
 497              		.cfi_endproc
 498              	.LFE15:
 499              		.size	PWM_Claw_ReadPeriod, .-PWM_Claw_ReadPeriod
 500              		.global	PWM_Claw_initVar
 501              		.bss
 502              		.set	.LANCHOR0,. + 0
 503              		.type	PWM_Claw_initVar, %object
 504              		.size	PWM_Claw_initVar, 1
 505              	PWM_Claw_initVar:
 506 0000 00       		.space	1
 507              		.text
 508              	.Letext0:
 509              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 510              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 511              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 26


 512              	.Ldebug_info0:
 513 0000 49030000 		.4byte	0x349
 514 0004 0400     		.2byte	0x4
 515 0006 00000000 		.4byte	.Ldebug_abbrev0
 516 000a 04       		.byte	0x4
 517 000b 01       		.uleb128 0x1
 518 000c 6E010000 		.4byte	.LASF40
 519 0010 01       		.byte	0x1
 520 0011 16010000 		.4byte	.LASF41
 521 0015 04030000 		.4byte	.LASF42
 522 0019 00000000 		.4byte	.Ldebug_ranges0+0
 523 001d 00000000 		.4byte	0
 524 0021 00000000 		.4byte	.Ldebug_line0
 525 0025 02       		.uleb128 0x2
 526 0026 01       		.byte	0x1
 527 0027 06       		.byte	0x6
 528 0028 F8020000 		.4byte	.LASF0
 529 002c 02       		.uleb128 0x2
 530 002d 01       		.byte	0x1
 531 002e 08       		.byte	0x8
 532 002f C9000000 		.4byte	.LASF1
 533 0033 02       		.uleb128 0x2
 534 0034 02       		.byte	0x2
 535 0035 05       		.byte	0x5
 536 0036 3A010000 		.4byte	.LASF2
 537 003a 02       		.uleb128 0x2
 538 003b 02       		.byte	0x2
 539 003c 07       		.byte	0x7
 540 003d 6D000000 		.4byte	.LASF3
 541 0041 02       		.uleb128 0x2
 542 0042 04       		.byte	0x4
 543 0043 05       		.byte	0x5
 544 0044 C4020000 		.4byte	.LASF4
 545 0048 02       		.uleb128 0x2
 546 0049 04       		.byte	0x4
 547 004a 07       		.byte	0x7
 548 004b DC000000 		.4byte	.LASF5
 549 004f 02       		.uleb128 0x2
 550 0050 08       		.byte	0x8
 551 0051 05       		.byte	0x5
 552 0052 7C020000 		.4byte	.LASF6
 553 0056 02       		.uleb128 0x2
 554 0057 08       		.byte	0x8
 555 0058 07       		.byte	0x7
 556 0059 B2000000 		.4byte	.LASF7
 557 005d 03       		.uleb128 0x3
 558 005e 04       		.byte	0x4
 559 005f 05       		.byte	0x5
 560 0060 696E7400 		.ascii	"int\000"
 561 0064 02       		.uleb128 0x2
 562 0065 04       		.byte	0x4
 563 0066 07       		.byte	0x7
 564 0067 13020000 		.4byte	.LASF8
 565 006b 04       		.uleb128 0x4
 566 006c EE000000 		.4byte	.LASF9
 567 0070 02       		.byte	0x2
 568 0071 9201     		.2byte	0x192
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 27


 569 0073 2C000000 		.4byte	0x2c
 570 0077 04       		.uleb128 0x4
 571 0078 44010000 		.4byte	.LASF10
 572 007c 02       		.byte	0x2
 573 007d 9301     		.2byte	0x193
 574 007f 3A000000 		.4byte	0x3a
 575 0083 02       		.uleb128 0x2
 576 0084 04       		.byte	0x4
 577 0085 04       		.byte	0x4
 578 0086 A4000000 		.4byte	.LASF11
 579 008a 02       		.uleb128 0x2
 580 008b 08       		.byte	0x8
 581 008c 04       		.byte	0x4
 582 008d 0F010000 		.4byte	.LASF12
 583 0091 02       		.uleb128 0x2
 584 0092 01       		.byte	0x1
 585 0093 08       		.byte	0x8
 586 0094 06000000 		.4byte	.LASF13
 587 0098 04       		.uleb128 0x4
 588 0099 D7000000 		.4byte	.LASF14
 589 009d 02       		.byte	0x2
 590 009e 3C02     		.2byte	0x23c
 591 00a0 A4000000 		.4byte	0xa4
 592 00a4 05       		.uleb128 0x5
 593 00a5 6B000000 		.4byte	0x6b
 594 00a9 04       		.uleb128 0x4
 595 00aa 00000000 		.4byte	.LASF15
 596 00ae 02       		.byte	0x2
 597 00af 3D02     		.2byte	0x23d
 598 00b1 B5000000 		.4byte	0xb5
 599 00b5 05       		.uleb128 0x5
 600 00b6 77000000 		.4byte	0x77
 601 00ba 02       		.uleb128 0x2
 602 00bb 04       		.byte	0x4
 603 00bc 07       		.byte	0x7
 604 00bd 73020000 		.4byte	.LASF16
 605 00c1 06       		.uleb128 0x6
 606 00c2 56030000 		.4byte	.LASF17
 607 00c6 01       		.byte	0x1
 608 00c7 C7       		.byte	0xc7
 609 00c8 00000000 		.4byte	.LFB2
 610 00cc 10000000 		.4byte	.LFE2-.LFB2
 611 00d0 01       		.uleb128 0x1
 612 00d1 9C       		.byte	0x9c
 613 00d2 06       		.uleb128 0x6
 614 00d3 4B010000 		.4byte	.LASF18
 615 00d7 01       		.byte	0x1
 616 00d8 E9       		.byte	0xe9
 617 00d9 00000000 		.4byte	.LFB3
 618 00dd 10000000 		.4byte	.LFE3-.LFB3
 619 00e1 01       		.uleb128 0x1
 620 00e2 9C       		.byte	0x9c
 621 00e3 07       		.uleb128 0x7
 622 00e4 8E000000 		.4byte	.LASF19
 623 00e8 01       		.byte	0x1
 624 00e9 9301     		.2byte	0x193
 625 00eb 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 28


 626 00ef 0C000000 		.4byte	.LFE4-.LFB4
 627 00f3 01       		.uleb128 0x1
 628 00f4 9C       		.byte	0x9c
 629 00f5 08010000 		.4byte	0x108
 630 00f9 08       		.uleb128 0x8
 631 00fa AA000000 		.4byte	.LASF21
 632 00fe 01       		.byte	0x1
 633 00ff 9301     		.2byte	0x193
 634 0101 77000000 		.4byte	0x77
 635 0105 01       		.uleb128 0x1
 636 0106 50       		.byte	0x50
 637 0107 00       		.byte	0
 638 0108 09       		.uleb128 0x9
 639 0109 E3020000 		.4byte	.LASF27
 640 010d 01       		.byte	0x1
 641 010e A901     		.2byte	0x1a9
 642 0110 77000000 		.4byte	0x77
 643 0114 00000000 		.4byte	.LFB5
 644 0118 14000000 		.4byte	.LFE5-.LFB5
 645 011c 01       		.uleb128 0x1
 646 011d 9C       		.byte	0x9c
 647 011e 07       		.uleb128 0x7
 648 011f 49000000 		.4byte	.LASF20
 649 0123 01       		.byte	0x1
 650 0124 E201     		.2byte	0x1e2
 651 0126 00000000 		.4byte	.LFB7
 652 012a 0C000000 		.4byte	.LFE7-.LFB7
 653 012e 01       		.uleb128 0x1
 654 012f 9C       		.byte	0x9c
 655 0130 43010000 		.4byte	0x143
 656 0134 08       		.uleb128 0x8
 657 0135 66000000 		.4byte	.LASF22
 658 0139 01       		.byte	0x1
 659 013a E201     		.2byte	0x1e2
 660 013c 77000000 		.4byte	0x77
 661 0140 01       		.uleb128 0x1
 662 0141 50       		.byte	0x50
 663 0142 00       		.byte	0
 664 0143 07       		.uleb128 0x7
 665 0144 CD020000 		.4byte	.LASF23
 666 0148 01       		.byte	0x1
 667 0149 0402     		.2byte	0x204
 668 014b 00000000 		.4byte	.LFB8
 669 014f 0C000000 		.4byte	.LFE8-.LFB8
 670 0153 01       		.uleb128 0x1
 671 0154 9C       		.byte	0x9c
 672 0155 68010000 		.4byte	0x168
 673 0159 08       		.uleb128 0x8
 674 015a 5E000000 		.4byte	.LASF24
 675 015e 01       		.byte	0x1
 676 015f 0402     		.2byte	0x204
 677 0161 77000000 		.4byte	0x77
 678 0165 01       		.uleb128 0x1
 679 0166 50       		.byte	0x50
 680 0167 00       		.byte	0
 681 0168 07       		.uleb128 0x7
 682 0169 3C030000 		.4byte	.LASF25
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 29


 683 016d 01       		.byte	0x1
 684 016e AC02     		.2byte	0x2ac
 685 0170 00000000 		.4byte	.LFB9
 686 0174 0C000000 		.4byte	.LFE9-.LFB9
 687 0178 01       		.uleb128 0x1
 688 0179 9C       		.byte	0x9c
 689 017a 8D010000 		.4byte	0x18d
 690 017e 08       		.uleb128 0x8
 691 017f 8A020000 		.4byte	.LASF26
 692 0183 01       		.byte	0x1
 693 0184 AC02     		.2byte	0x2ac
 694 0186 6B000000 		.4byte	0x6b
 695 018a 01       		.uleb128 0x1
 696 018b 50       		.byte	0x50
 697 018c 00       		.byte	0
 698 018d 09       		.uleb128 0x9
 699 018e 20020000 		.4byte	.LASF28
 700 0192 01       		.byte	0x1
 701 0193 C702     		.2byte	0x2c7
 702 0195 6B000000 		.4byte	0x6b
 703 0199 00000000 		.4byte	.LFB10
 704 019d 0C000000 		.4byte	.LFE10-.LFB10
 705 01a1 01       		.uleb128 0x1
 706 01a2 9C       		.byte	0x9c
 707 01a3 0A       		.uleb128 0xa
 708 01a4 66030000 		.4byte	.LASF43
 709 01a8 01       		.byte	0x1
 710 01a9 E102     		.2byte	0x2e1
 711 01ab 6B000000 		.4byte	0x6b
 712 01af 00000000 		.4byte	.LFB11
 713 01b3 0C000000 		.4byte	.LFE11-.LFB11
 714 01b7 01       		.uleb128 0x1
 715 01b8 9C       		.byte	0x9c
 716 01b9 CC010000 		.4byte	0x1cc
 717 01bd 0B       		.uleb128 0xb
 718 01be 67020000 		.4byte	.LASF34
 719 01c2 01       		.byte	0x1
 720 01c3 E302     		.2byte	0x2e3
 721 01c5 6B000000 		.4byte	0x6b
 722 01c9 01       		.uleb128 0x1
 723 01ca 50       		.byte	0x50
 724 01cb 00       		.byte	0
 725 01cc 07       		.uleb128 0x7
 726 01cd 0B000000 		.4byte	.LASF29
 727 01d1 01       		.byte	0x1
 728 01d2 FD02     		.2byte	0x2fd
 729 01d4 00000000 		.4byte	.LFB12
 730 01d8 0C000000 		.4byte	.LFE12-.LFB12
 731 01dc 01       		.uleb128 0x1
 732 01dd 9C       		.byte	0x9c
 733 01de F1010000 		.4byte	0x1f1
 734 01e2 08       		.uleb128 0x8
 735 01e3 F4000000 		.4byte	.LASF30
 736 01e7 01       		.byte	0x1
 737 01e8 FD02     		.2byte	0x2fd
 738 01ea 6B000000 		.4byte	0x6b
 739 01ee 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 30


 740 01ef 50       		.byte	0x50
 741 01f0 00       		.byte	0
 742 01f1 09       		.uleb128 0x9
 743 01f2 3C020000 		.4byte	.LASF31
 744 01f6 01       		.byte	0x1
 745 01f7 1603     		.2byte	0x316
 746 01f9 77000000 		.4byte	0x77
 747 01fd 00000000 		.4byte	.LFB13
 748 0201 0C000000 		.4byte	.LFE13-.LFB13
 749 0205 01       		.uleb128 0x1
 750 0206 9C       		.byte	0x9c
 751 0207 07       		.uleb128 0x7
 752 0208 FC000000 		.4byte	.LASF32
 753 020c 01       		.byte	0x1
 754 020d C501     		.2byte	0x1c5
 755 020f 00000000 		.4byte	.LFB6
 756 0213 14000000 		.4byte	.LFE6-.LFB6
 757 0217 01       		.uleb128 0x1
 758 0218 9C       		.byte	0x9c
 759 0219 30020000 		.4byte	0x230
 760 021d 0C       		.uleb128 0xc
 761 021e 08000000 		.4byte	.LVL6
 762 0222 F1010000 		.4byte	0x1f1
 763 0226 0C       		.uleb128 0xc
 764 0227 0C000000 		.4byte	.LVL7
 765 022b 8D010000 		.4byte	0x18d
 766 022f 00       		.byte	0
 767 0230 0D       		.uleb128 0xd
 768 0231 80000000 		.4byte	.LASF33
 769 0235 01       		.byte	0x1
 770 0236 54       		.byte	0x54
 771 0237 00000000 		.4byte	.LFB1
 772 023b 60000000 		.4byte	.LFE1-.LFB1
 773 023f 01       		.uleb128 0x1
 774 0240 9C       		.byte	0x9c
 775 0241 CF020000 		.4byte	0x2cf
 776 0245 0E       		.uleb128 0xe
 777 0246 6E020000 		.4byte	.LASF35
 778 024a 01       		.byte	0x1
 779 024b 57       		.byte	0x57
 780 024c 6B000000 		.4byte	0x6b
 781 0250 00000000 		.4byte	.LLST0
 782 0254 0E       		.uleb128 0xe
 783 0255 AC020000 		.4byte	.LASF36
 784 0259 01       		.byte	0x1
 785 025a 5D       		.byte	0x5d
 786 025b 6B000000 		.4byte	0x6b
 787 025f 13000000 		.4byte	.LLST1
 788 0263 0F       		.uleb128 0xf
 789 0264 2C000000 		.4byte	.LVL10
 790 0268 E3000000 		.4byte	0xe3
 791 026c 78020000 		.4byte	0x278
 792 0270 10       		.uleb128 0x10
 793 0271 01       		.uleb128 0x1
 794 0272 50       		.byte	0x50
 795 0273 03       		.uleb128 0x3
 796 0274 0A       		.byte	0xa
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 31


 797 0275 CF07     		.2byte	0x7cf
 798 0277 00       		.byte	0
 799 0278 0F       		.uleb128 0xf
 800 0279 34000000 		.4byte	.LVL11
 801 027d 1E010000 		.4byte	0x11e
 802 0281 8D020000 		.4byte	0x28d
 803 0285 10       		.uleb128 0x10
 804 0286 01       		.uleb128 0x1
 805 0287 50       		.byte	0x50
 806 0288 03       		.uleb128 0x3
 807 0289 0A       		.byte	0xa
 808 028a CF07     		.2byte	0x7cf
 809 028c 00       		.byte	0
 810 028d 0F       		.uleb128 0xf
 811 028e 3A000000 		.4byte	.LVL12
 812 0292 43010000 		.4byte	0x143
 813 0296 A0020000 		.4byte	0x2a0
 814 029a 10       		.uleb128 0x10
 815 029b 01       		.uleb128 0x1
 816 029c 50       		.byte	0x50
 817 029d 01       		.uleb128 0x1
 818 029e 44       		.byte	0x44
 819 029f 00       		.byte	0
 820 02a0 0F       		.uleb128 0xf
 821 02a1 40000000 		.4byte	.LVL13
 822 02a5 68010000 		.4byte	0x168
 823 02a9 B3020000 		.4byte	0x2b3
 824 02ad 10       		.uleb128 0x10
 825 02ae 01       		.uleb128 0x1
 826 02af 50       		.byte	0x50
 827 02b0 01       		.uleb128 0x1
 828 02b1 30       		.byte	0x30
 829 02b2 00       		.byte	0
 830 02b3 0C       		.uleb128 0xc
 831 02b4 44000000 		.4byte	.LVL14
 832 02b8 34030000 		.4byte	0x334
 833 02bc 0C       		.uleb128 0xc
 834 02bd 50000000 		.4byte	.LVL15
 835 02c1 3F030000 		.4byte	0x33f
 836 02c5 0C       		.uleb128 0xc
 837 02c6 54000000 		.4byte	.LVL16
 838 02ca 07020000 		.4byte	0x207
 839 02ce 00       		.byte	0
 840 02cf 0D       		.uleb128 0xd
 841 02d0 29000000 		.4byte	.LASF37
 842 02d4 01       		.byte	0x1
 843 02d5 37       		.byte	0x37
 844 02d6 00000000 		.4byte	.LFB0
 845 02da 1C000000 		.4byte	.LFE0-.LFB0
 846 02de 01       		.uleb128 0x1
 847 02df 9C       		.byte	0x9c
 848 02e0 F7020000 		.4byte	0x2f7
 849 02e4 0C       		.uleb128 0xc
 850 02e5 0C000000 		.4byte	.LVL17
 851 02e9 30020000 		.4byte	0x230
 852 02ed 0C       		.uleb128 0xc
 853 02ee 16000000 		.4byte	.LVL18
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 32


 854 02f2 C1000000 		.4byte	0xc1
 855 02f6 00       		.byte	0
 856 02f7 09       		.uleb128 0x9
 857 02f8 59010000 		.4byte	.LASF38
 858 02fc 01       		.byte	0x1
 859 02fd 3003     		.2byte	0x330
 860 02ff 77000000 		.4byte	0x77
 861 0303 00000000 		.4byte	.LFB14
 862 0307 0C000000 		.4byte	.LFE14-.LFB14
 863 030b 01       		.uleb128 0x1
 864 030c 9C       		.byte	0x9c
 865 030d 09       		.uleb128 0x9
 866 030e 98020000 		.4byte	.LASF39
 867 0312 01       		.byte	0x1
 868 0313 7403     		.2byte	0x374
 869 0315 77000000 		.4byte	0x77
 870 0319 00000000 		.4byte	.LFB15
 871 031d 0C000000 		.4byte	.LFE15-.LFB15
 872 0321 01       		.uleb128 0x1
 873 0322 9C       		.byte	0x9c
 874 0323 11       		.uleb128 0x11
 875 0324 38000000 		.4byte	.LASF44
 876 0328 01       		.byte	0x1
 877 0329 20       		.byte	0x20
 878 032a 6B000000 		.4byte	0x6b
 879 032e 05       		.uleb128 0x5
 880 032f 03       		.byte	0x3
 881 0330 00000000 		.4byte	PWM_Claw_initVar
 882 0334 12       		.uleb128 0x12
 883 0335 FC010000 		.4byte	.LASF45
 884 0339 03       		.byte	0x3
 885 033a 7D       		.byte	0x7d
 886 033b 6B000000 		.4byte	0x6b
 887 033f 13       		.uleb128 0x13
 888 0340 51020000 		.4byte	.LASF46
 889 0344 03       		.byte	0x3
 890 0345 7E       		.byte	0x7e
 891 0346 14       		.uleb128 0x14
 892 0347 6B000000 		.4byte	0x6b
 893 034b 00       		.byte	0
 894 034c 00       		.byte	0
 895              		.section	.debug_abbrev,"",%progbits
 896              	.Ldebug_abbrev0:
 897 0000 01       		.uleb128 0x1
 898 0001 11       		.uleb128 0x11
 899 0002 01       		.byte	0x1
 900 0003 25       		.uleb128 0x25
 901 0004 0E       		.uleb128 0xe
 902 0005 13       		.uleb128 0x13
 903 0006 0B       		.uleb128 0xb
 904 0007 03       		.uleb128 0x3
 905 0008 0E       		.uleb128 0xe
 906 0009 1B       		.uleb128 0x1b
 907 000a 0E       		.uleb128 0xe
 908 000b 55       		.uleb128 0x55
 909 000c 17       		.uleb128 0x17
 910 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 33


 911 000e 01       		.uleb128 0x1
 912 000f 10       		.uleb128 0x10
 913 0010 17       		.uleb128 0x17
 914 0011 00       		.byte	0
 915 0012 00       		.byte	0
 916 0013 02       		.uleb128 0x2
 917 0014 24       		.uleb128 0x24
 918 0015 00       		.byte	0
 919 0016 0B       		.uleb128 0xb
 920 0017 0B       		.uleb128 0xb
 921 0018 3E       		.uleb128 0x3e
 922 0019 0B       		.uleb128 0xb
 923 001a 03       		.uleb128 0x3
 924 001b 0E       		.uleb128 0xe
 925 001c 00       		.byte	0
 926 001d 00       		.byte	0
 927 001e 03       		.uleb128 0x3
 928 001f 24       		.uleb128 0x24
 929 0020 00       		.byte	0
 930 0021 0B       		.uleb128 0xb
 931 0022 0B       		.uleb128 0xb
 932 0023 3E       		.uleb128 0x3e
 933 0024 0B       		.uleb128 0xb
 934 0025 03       		.uleb128 0x3
 935 0026 08       		.uleb128 0x8
 936 0027 00       		.byte	0
 937 0028 00       		.byte	0
 938 0029 04       		.uleb128 0x4
 939 002a 16       		.uleb128 0x16
 940 002b 00       		.byte	0
 941 002c 03       		.uleb128 0x3
 942 002d 0E       		.uleb128 0xe
 943 002e 3A       		.uleb128 0x3a
 944 002f 0B       		.uleb128 0xb
 945 0030 3B       		.uleb128 0x3b
 946 0031 05       		.uleb128 0x5
 947 0032 49       		.uleb128 0x49
 948 0033 13       		.uleb128 0x13
 949 0034 00       		.byte	0
 950 0035 00       		.byte	0
 951 0036 05       		.uleb128 0x5
 952 0037 35       		.uleb128 0x35
 953 0038 00       		.byte	0
 954 0039 49       		.uleb128 0x49
 955 003a 13       		.uleb128 0x13
 956 003b 00       		.byte	0
 957 003c 00       		.byte	0
 958 003d 06       		.uleb128 0x6
 959 003e 2E       		.uleb128 0x2e
 960 003f 00       		.byte	0
 961 0040 3F       		.uleb128 0x3f
 962 0041 19       		.uleb128 0x19
 963 0042 03       		.uleb128 0x3
 964 0043 0E       		.uleb128 0xe
 965 0044 3A       		.uleb128 0x3a
 966 0045 0B       		.uleb128 0xb
 967 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 34


 968 0047 0B       		.uleb128 0xb
 969 0048 27       		.uleb128 0x27
 970 0049 19       		.uleb128 0x19
 971 004a 11       		.uleb128 0x11
 972 004b 01       		.uleb128 0x1
 973 004c 12       		.uleb128 0x12
 974 004d 06       		.uleb128 0x6
 975 004e 40       		.uleb128 0x40
 976 004f 18       		.uleb128 0x18
 977 0050 9742     		.uleb128 0x2117
 978 0052 19       		.uleb128 0x19
 979 0053 00       		.byte	0
 980 0054 00       		.byte	0
 981 0055 07       		.uleb128 0x7
 982 0056 2E       		.uleb128 0x2e
 983 0057 01       		.byte	0x1
 984 0058 3F       		.uleb128 0x3f
 985 0059 19       		.uleb128 0x19
 986 005a 03       		.uleb128 0x3
 987 005b 0E       		.uleb128 0xe
 988 005c 3A       		.uleb128 0x3a
 989 005d 0B       		.uleb128 0xb
 990 005e 3B       		.uleb128 0x3b
 991 005f 05       		.uleb128 0x5
 992 0060 27       		.uleb128 0x27
 993 0061 19       		.uleb128 0x19
 994 0062 11       		.uleb128 0x11
 995 0063 01       		.uleb128 0x1
 996 0064 12       		.uleb128 0x12
 997 0065 06       		.uleb128 0x6
 998 0066 40       		.uleb128 0x40
 999 0067 18       		.uleb128 0x18
 1000 0068 9742     		.uleb128 0x2117
 1001 006a 19       		.uleb128 0x19
 1002 006b 01       		.uleb128 0x1
 1003 006c 13       		.uleb128 0x13
 1004 006d 00       		.byte	0
 1005 006e 00       		.byte	0
 1006 006f 08       		.uleb128 0x8
 1007 0070 05       		.uleb128 0x5
 1008 0071 00       		.byte	0
 1009 0072 03       		.uleb128 0x3
 1010 0073 0E       		.uleb128 0xe
 1011 0074 3A       		.uleb128 0x3a
 1012 0075 0B       		.uleb128 0xb
 1013 0076 3B       		.uleb128 0x3b
 1014 0077 05       		.uleb128 0x5
 1015 0078 49       		.uleb128 0x49
 1016 0079 13       		.uleb128 0x13
 1017 007a 02       		.uleb128 0x2
 1018 007b 18       		.uleb128 0x18
 1019 007c 00       		.byte	0
 1020 007d 00       		.byte	0
 1021 007e 09       		.uleb128 0x9
 1022 007f 2E       		.uleb128 0x2e
 1023 0080 00       		.byte	0
 1024 0081 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 35


 1025 0082 19       		.uleb128 0x19
 1026 0083 03       		.uleb128 0x3
 1027 0084 0E       		.uleb128 0xe
 1028 0085 3A       		.uleb128 0x3a
 1029 0086 0B       		.uleb128 0xb
 1030 0087 3B       		.uleb128 0x3b
 1031 0088 05       		.uleb128 0x5
 1032 0089 27       		.uleb128 0x27
 1033 008a 19       		.uleb128 0x19
 1034 008b 49       		.uleb128 0x49
 1035 008c 13       		.uleb128 0x13
 1036 008d 11       		.uleb128 0x11
 1037 008e 01       		.uleb128 0x1
 1038 008f 12       		.uleb128 0x12
 1039 0090 06       		.uleb128 0x6
 1040 0091 40       		.uleb128 0x40
 1041 0092 18       		.uleb128 0x18
 1042 0093 9742     		.uleb128 0x2117
 1043 0095 19       		.uleb128 0x19
 1044 0096 00       		.byte	0
 1045 0097 00       		.byte	0
 1046 0098 0A       		.uleb128 0xa
 1047 0099 2E       		.uleb128 0x2e
 1048 009a 01       		.byte	0x1
 1049 009b 3F       		.uleb128 0x3f
 1050 009c 19       		.uleb128 0x19
 1051 009d 03       		.uleb128 0x3
 1052 009e 0E       		.uleb128 0xe
 1053 009f 3A       		.uleb128 0x3a
 1054 00a0 0B       		.uleb128 0xb
 1055 00a1 3B       		.uleb128 0x3b
 1056 00a2 05       		.uleb128 0x5
 1057 00a3 27       		.uleb128 0x27
 1058 00a4 19       		.uleb128 0x19
 1059 00a5 49       		.uleb128 0x49
 1060 00a6 13       		.uleb128 0x13
 1061 00a7 11       		.uleb128 0x11
 1062 00a8 01       		.uleb128 0x1
 1063 00a9 12       		.uleb128 0x12
 1064 00aa 06       		.uleb128 0x6
 1065 00ab 40       		.uleb128 0x40
 1066 00ac 18       		.uleb128 0x18
 1067 00ad 9742     		.uleb128 0x2117
 1068 00af 19       		.uleb128 0x19
 1069 00b0 01       		.uleb128 0x1
 1070 00b1 13       		.uleb128 0x13
 1071 00b2 00       		.byte	0
 1072 00b3 00       		.byte	0
 1073 00b4 0B       		.uleb128 0xb
 1074 00b5 34       		.uleb128 0x34
 1075 00b6 00       		.byte	0
 1076 00b7 03       		.uleb128 0x3
 1077 00b8 0E       		.uleb128 0xe
 1078 00b9 3A       		.uleb128 0x3a
 1079 00ba 0B       		.uleb128 0xb
 1080 00bb 3B       		.uleb128 0x3b
 1081 00bc 05       		.uleb128 0x5
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 36


 1082 00bd 49       		.uleb128 0x49
 1083 00be 13       		.uleb128 0x13
 1084 00bf 02       		.uleb128 0x2
 1085 00c0 18       		.uleb128 0x18
 1086 00c1 00       		.byte	0
 1087 00c2 00       		.byte	0
 1088 00c3 0C       		.uleb128 0xc
 1089 00c4 898201   		.uleb128 0x4109
 1090 00c7 00       		.byte	0
 1091 00c8 11       		.uleb128 0x11
 1092 00c9 01       		.uleb128 0x1
 1093 00ca 31       		.uleb128 0x31
 1094 00cb 13       		.uleb128 0x13
 1095 00cc 00       		.byte	0
 1096 00cd 00       		.byte	0
 1097 00ce 0D       		.uleb128 0xd
 1098 00cf 2E       		.uleb128 0x2e
 1099 00d0 01       		.byte	0x1
 1100 00d1 3F       		.uleb128 0x3f
 1101 00d2 19       		.uleb128 0x19
 1102 00d3 03       		.uleb128 0x3
 1103 00d4 0E       		.uleb128 0xe
 1104 00d5 3A       		.uleb128 0x3a
 1105 00d6 0B       		.uleb128 0xb
 1106 00d7 3B       		.uleb128 0x3b
 1107 00d8 0B       		.uleb128 0xb
 1108 00d9 27       		.uleb128 0x27
 1109 00da 19       		.uleb128 0x19
 1110 00db 11       		.uleb128 0x11
 1111 00dc 01       		.uleb128 0x1
 1112 00dd 12       		.uleb128 0x12
 1113 00de 06       		.uleb128 0x6
 1114 00df 40       		.uleb128 0x40
 1115 00e0 18       		.uleb128 0x18
 1116 00e1 9742     		.uleb128 0x2117
 1117 00e3 19       		.uleb128 0x19
 1118 00e4 01       		.uleb128 0x1
 1119 00e5 13       		.uleb128 0x13
 1120 00e6 00       		.byte	0
 1121 00e7 00       		.byte	0
 1122 00e8 0E       		.uleb128 0xe
 1123 00e9 34       		.uleb128 0x34
 1124 00ea 00       		.byte	0
 1125 00eb 03       		.uleb128 0x3
 1126 00ec 0E       		.uleb128 0xe
 1127 00ed 3A       		.uleb128 0x3a
 1128 00ee 0B       		.uleb128 0xb
 1129 00ef 3B       		.uleb128 0x3b
 1130 00f0 0B       		.uleb128 0xb
 1131 00f1 49       		.uleb128 0x49
 1132 00f2 13       		.uleb128 0x13
 1133 00f3 02       		.uleb128 0x2
 1134 00f4 17       		.uleb128 0x17
 1135 00f5 00       		.byte	0
 1136 00f6 00       		.byte	0
 1137 00f7 0F       		.uleb128 0xf
 1138 00f8 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 37


 1139 00fb 01       		.byte	0x1
 1140 00fc 11       		.uleb128 0x11
 1141 00fd 01       		.uleb128 0x1
 1142 00fe 31       		.uleb128 0x31
 1143 00ff 13       		.uleb128 0x13
 1144 0100 01       		.uleb128 0x1
 1145 0101 13       		.uleb128 0x13
 1146 0102 00       		.byte	0
 1147 0103 00       		.byte	0
 1148 0104 10       		.uleb128 0x10
 1149 0105 8A8201   		.uleb128 0x410a
 1150 0108 00       		.byte	0
 1151 0109 02       		.uleb128 0x2
 1152 010a 18       		.uleb128 0x18
 1153 010b 9142     		.uleb128 0x2111
 1154 010d 18       		.uleb128 0x18
 1155 010e 00       		.byte	0
 1156 010f 00       		.byte	0
 1157 0110 11       		.uleb128 0x11
 1158 0111 34       		.uleb128 0x34
 1159 0112 00       		.byte	0
 1160 0113 03       		.uleb128 0x3
 1161 0114 0E       		.uleb128 0xe
 1162 0115 3A       		.uleb128 0x3a
 1163 0116 0B       		.uleb128 0xb
 1164 0117 3B       		.uleb128 0x3b
 1165 0118 0B       		.uleb128 0xb
 1166 0119 49       		.uleb128 0x49
 1167 011a 13       		.uleb128 0x13
 1168 011b 3F       		.uleb128 0x3f
 1169 011c 19       		.uleb128 0x19
 1170 011d 02       		.uleb128 0x2
 1171 011e 18       		.uleb128 0x18
 1172 011f 00       		.byte	0
 1173 0120 00       		.byte	0
 1174 0121 12       		.uleb128 0x12
 1175 0122 2E       		.uleb128 0x2e
 1176 0123 00       		.byte	0
 1177 0124 3F       		.uleb128 0x3f
 1178 0125 19       		.uleb128 0x19
 1179 0126 03       		.uleb128 0x3
 1180 0127 0E       		.uleb128 0xe
 1181 0128 3A       		.uleb128 0x3a
 1182 0129 0B       		.uleb128 0xb
 1183 012a 3B       		.uleb128 0x3b
 1184 012b 0B       		.uleb128 0xb
 1185 012c 27       		.uleb128 0x27
 1186 012d 19       		.uleb128 0x19
 1187 012e 49       		.uleb128 0x49
 1188 012f 13       		.uleb128 0x13
 1189 0130 3C       		.uleb128 0x3c
 1190 0131 19       		.uleb128 0x19
 1191 0132 00       		.byte	0
 1192 0133 00       		.byte	0
 1193 0134 13       		.uleb128 0x13
 1194 0135 2E       		.uleb128 0x2e
 1195 0136 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 38


 1196 0137 3F       		.uleb128 0x3f
 1197 0138 19       		.uleb128 0x19
 1198 0139 03       		.uleb128 0x3
 1199 013a 0E       		.uleb128 0xe
 1200 013b 3A       		.uleb128 0x3a
 1201 013c 0B       		.uleb128 0xb
 1202 013d 3B       		.uleb128 0x3b
 1203 013e 0B       		.uleb128 0xb
 1204 013f 27       		.uleb128 0x27
 1205 0140 19       		.uleb128 0x19
 1206 0141 3C       		.uleb128 0x3c
 1207 0142 19       		.uleb128 0x19
 1208 0143 00       		.byte	0
 1209 0144 00       		.byte	0
 1210 0145 14       		.uleb128 0x14
 1211 0146 05       		.uleb128 0x5
 1212 0147 00       		.byte	0
 1213 0148 49       		.uleb128 0x49
 1214 0149 13       		.uleb128 0x13
 1215 014a 00       		.byte	0
 1216 014b 00       		.byte	0
 1217 014c 00       		.byte	0
 1218              		.section	.debug_loc,"",%progbits
 1219              	.Ldebug_loc0:
 1220              	.LLST0:
 1221 0000 0A000000 		.4byte	.LVL8
 1222 0004 0E000000 		.4byte	.LVL9
 1223 0008 0100     		.2byte	0x1
 1224 000a 53       		.byte	0x53
 1225 000b 00000000 		.4byte	0
 1226 000f 00000000 		.4byte	0
 1227              	.LLST1:
 1228 0013 44000000 		.4byte	.LVL14
 1229 0017 4F000000 		.4byte	.LVL15-1
 1230 001b 0100     		.2byte	0x1
 1231 001d 50       		.byte	0x50
 1232 001e 00000000 		.4byte	0
 1233 0022 00000000 		.4byte	0
 1234              		.section	.debug_aranges,"",%progbits
 1235 0000 94000000 		.4byte	0x94
 1236 0004 0200     		.2byte	0x2
 1237 0006 00000000 		.4byte	.Ldebug_info0
 1238 000a 04       		.byte	0x4
 1239 000b 00       		.byte	0
 1240 000c 0000     		.2byte	0
 1241 000e 0000     		.2byte	0
 1242 0010 00000000 		.4byte	.LFB2
 1243 0014 10000000 		.4byte	.LFE2-.LFB2
 1244 0018 00000000 		.4byte	.LFB3
 1245 001c 10000000 		.4byte	.LFE3-.LFB3
 1246 0020 00000000 		.4byte	.LFB4
 1247 0024 0C000000 		.4byte	.LFE4-.LFB4
 1248 0028 00000000 		.4byte	.LFB5
 1249 002c 14000000 		.4byte	.LFE5-.LFB5
 1250 0030 00000000 		.4byte	.LFB7
 1251 0034 0C000000 		.4byte	.LFE7-.LFB7
 1252 0038 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 39


 1253 003c 0C000000 		.4byte	.LFE8-.LFB8
 1254 0040 00000000 		.4byte	.LFB9
 1255 0044 0C000000 		.4byte	.LFE9-.LFB9
 1256 0048 00000000 		.4byte	.LFB10
 1257 004c 0C000000 		.4byte	.LFE10-.LFB10
 1258 0050 00000000 		.4byte	.LFB11
 1259 0054 0C000000 		.4byte	.LFE11-.LFB11
 1260 0058 00000000 		.4byte	.LFB12
 1261 005c 0C000000 		.4byte	.LFE12-.LFB12
 1262 0060 00000000 		.4byte	.LFB13
 1263 0064 0C000000 		.4byte	.LFE13-.LFB13
 1264 0068 00000000 		.4byte	.LFB6
 1265 006c 14000000 		.4byte	.LFE6-.LFB6
 1266 0070 00000000 		.4byte	.LFB1
 1267 0074 60000000 		.4byte	.LFE1-.LFB1
 1268 0078 00000000 		.4byte	.LFB0
 1269 007c 1C000000 		.4byte	.LFE0-.LFB0
 1270 0080 00000000 		.4byte	.LFB14
 1271 0084 0C000000 		.4byte	.LFE14-.LFB14
 1272 0088 00000000 		.4byte	.LFB15
 1273 008c 0C000000 		.4byte	.LFE15-.LFB15
 1274 0090 00000000 		.4byte	0
 1275 0094 00000000 		.4byte	0
 1276              		.section	.debug_ranges,"",%progbits
 1277              	.Ldebug_ranges0:
 1278 0000 00000000 		.4byte	.LFB2
 1279 0004 10000000 		.4byte	.LFE2
 1280 0008 00000000 		.4byte	.LFB3
 1281 000c 10000000 		.4byte	.LFE3
 1282 0010 00000000 		.4byte	.LFB4
 1283 0014 0C000000 		.4byte	.LFE4
 1284 0018 00000000 		.4byte	.LFB5
 1285 001c 14000000 		.4byte	.LFE5
 1286 0020 00000000 		.4byte	.LFB7
 1287 0024 0C000000 		.4byte	.LFE7
 1288 0028 00000000 		.4byte	.LFB8
 1289 002c 0C000000 		.4byte	.LFE8
 1290 0030 00000000 		.4byte	.LFB9
 1291 0034 0C000000 		.4byte	.LFE9
 1292 0038 00000000 		.4byte	.LFB10
 1293 003c 0C000000 		.4byte	.LFE10
 1294 0040 00000000 		.4byte	.LFB11
 1295 0044 0C000000 		.4byte	.LFE11
 1296 0048 00000000 		.4byte	.LFB12
 1297 004c 0C000000 		.4byte	.LFE12
 1298 0050 00000000 		.4byte	.LFB13
 1299 0054 0C000000 		.4byte	.LFE13
 1300 0058 00000000 		.4byte	.LFB6
 1301 005c 14000000 		.4byte	.LFE6
 1302 0060 00000000 		.4byte	.LFB1
 1303 0064 60000000 		.4byte	.LFE1
 1304 0068 00000000 		.4byte	.LFB0
 1305 006c 1C000000 		.4byte	.LFE0
 1306 0070 00000000 		.4byte	.LFB14
 1307 0074 0C000000 		.4byte	.LFE14
 1308 0078 00000000 		.4byte	.LFB15
 1309 007c 0C000000 		.4byte	.LFE15
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 40


 1310 0080 00000000 		.4byte	0
 1311 0084 00000000 		.4byte	0
 1312              		.section	.debug_line,"",%progbits
 1313              	.Ldebug_line0:
 1314 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1314      02005200 
 1314      00000201 
 1314      FB0E0D00 
 1314      01010101 
 1315              	.LASF15:
 1316 0000 72656731 		.ascii	"reg16\000"
 1316      3600
 1317              	.LASF13:
 1318 0006 63686172 		.ascii	"char\000"
 1318      00
 1319              	.LASF29:
 1320 000b 50574D5F 		.ascii	"PWM_Claw_WriteControlRegister\000"
 1320      436C6177 
 1320      5F577269 
 1320      7465436F 
 1320      6E74726F 
 1321              	.LASF37:
 1322 0029 50574D5F 		.ascii	"PWM_Claw_Start\000"
 1322      436C6177 
 1322      5F537461 
 1322      727400
 1323              	.LASF44:
 1324 0038 50574D5F 		.ascii	"PWM_Claw_initVar\000"
 1324      436C6177 
 1324      5F696E69 
 1324      74566172 
 1324      00
 1325              	.LASF20:
 1326 0049 50574D5F 		.ascii	"PWM_Claw_WritePeriod\000"
 1326      436C6177 
 1326      5F577269 
 1326      74655065 
 1326      72696F64 
 1327              	.LASF24:
 1328 005e 636F6D70 		.ascii	"compare\000"
 1328      61726500 
 1329              	.LASF22:
 1330 0066 70657269 		.ascii	"period\000"
 1330      6F6400
 1331              	.LASF3:
 1332 006d 73686F72 		.ascii	"short unsigned int\000"
 1332      7420756E 
 1332      7369676E 
 1332      65642069 
 1332      6E7400
 1333              	.LASF33:
 1334 0080 50574D5F 		.ascii	"PWM_Claw_Init\000"
 1334      436C6177 
 1334      5F496E69 
 1334      7400
 1335              	.LASF19:
 1336 008e 50574D5F 		.ascii	"PWM_Claw_WriteCounter\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 41


 1336      436C6177 
 1336      5F577269 
 1336      7465436F 
 1336      756E7465 
 1337              	.LASF11:
 1338 00a4 666C6F61 		.ascii	"float\000"
 1338      7400
 1339              	.LASF21:
 1340 00aa 636F756E 		.ascii	"counter\000"
 1340      74657200 
 1341              	.LASF7:
 1342 00b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1342      206C6F6E 
 1342      6720756E 
 1342      7369676E 
 1342      65642069 
 1343              	.LASF1:
 1344 00c9 756E7369 		.ascii	"unsigned char\000"
 1344      676E6564 
 1344      20636861 
 1344      7200
 1345              	.LASF14:
 1346 00d7 72656738 		.ascii	"reg8\000"
 1346      00
 1347              	.LASF5:
 1348 00dc 6C6F6E67 		.ascii	"long unsigned int\000"
 1348      20756E73 
 1348      69676E65 
 1348      6420696E 
 1348      7400
 1349              	.LASF9:
 1350 00ee 75696E74 		.ascii	"uint8\000"
 1350      3800
 1351              	.LASF30:
 1352 00f4 636F6E74 		.ascii	"control\000"
 1352      726F6C00 
 1353              	.LASF32:
 1354 00fc 50574D5F 		.ascii	"PWM_Claw_ClearFIFO\000"
 1354      436C6177 
 1354      5F436C65 
 1354      61724649 
 1354      464F00
 1355              	.LASF12:
 1356 010f 646F7562 		.ascii	"double\000"
 1356      6C6500
 1357              	.LASF41:
 1358 0116 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_Claw.c\000"
 1358      6E657261 
 1358      7465645F 
 1358      536F7572 
 1358      63655C50 
 1359              	.LASF2:
 1360 013a 73686F72 		.ascii	"short int\000"
 1360      7420696E 
 1360      7400
 1361              	.LASF10:
 1362 0144 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 42


 1362      313600
 1363              	.LASF18:
 1364 014b 50574D5F 		.ascii	"PWM_Claw_Stop\000"
 1364      436C6177 
 1364      5F53746F 
 1364      7000
 1365              	.LASF38:
 1366 0159 50574D5F 		.ascii	"PWM_Claw_ReadCompare\000"
 1366      436C6177 
 1366      5F526561 
 1366      64436F6D 
 1366      70617265 
 1367              	.LASF40:
 1368 016e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1368      4320342E 
 1368      392E3320 
 1368      32303135 
 1368      30333033 
 1369 01a1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1369      20726576 
 1369      6973696F 
 1369      6E203232 
 1369      31323230 
 1370 01d4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1370      66756E63 
 1370      74696F6E 
 1370      2D736563 
 1370      74696F6E 
 1371              	.LASF45:
 1372 01fc 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1372      74657243 
 1372      72697469 
 1372      63616C53 
 1372      65637469 
 1373              	.LASF8:
 1374 0213 756E7369 		.ascii	"unsigned int\000"
 1374      676E6564 
 1374      20696E74 
 1374      00
 1375              	.LASF28:
 1376 0220 50574D5F 		.ascii	"PWM_Claw_ReadStatusRegister\000"
 1376      436C6177 
 1376      5F526561 
 1376      64537461 
 1376      74757352 
 1377              	.LASF31:
 1378 023c 50574D5F 		.ascii	"PWM_Claw_ReadCapture\000"
 1378      436C6177 
 1378      5F526561 
 1378      64436170 
 1378      74757265 
 1379              	.LASF46:
 1380 0251 43794578 		.ascii	"CyExitCriticalSection\000"
 1380      69744372 
 1380      69746963 
 1380      616C5365 
 1380      6374696F 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 43


 1381              	.LASF34:
 1382 0267 72657375 		.ascii	"result\000"
 1382      6C7400
 1383              	.LASF35:
 1384 026e 6374726C 		.ascii	"ctrl\000"
 1384      00
 1385              	.LASF16:
 1386 0273 73697A65 		.ascii	"sizetype\000"
 1386      74797065 
 1386      00
 1387              	.LASF6:
 1388 027c 6C6F6E67 		.ascii	"long long int\000"
 1388      206C6F6E 
 1388      6720696E 
 1388      7400
 1389              	.LASF26:
 1390 028a 696E7465 		.ascii	"interruptMode\000"
 1390      72727570 
 1390      744D6F64 
 1390      6500
 1391              	.LASF39:
 1392 0298 50574D5F 		.ascii	"PWM_Claw_ReadPeriod\000"
 1392      436C6177 
 1392      5F526561 
 1392      64506572 
 1392      696F6400 
 1393              	.LASF36:
 1394 02ac 50574D5F 		.ascii	"PWM_Claw_interruptState\000"
 1394      436C6177 
 1394      5F696E74 
 1394      65727275 
 1394      70745374 
 1395              	.LASF4:
 1396 02c4 6C6F6E67 		.ascii	"long int\000"
 1396      20696E74 
 1396      00
 1397              	.LASF23:
 1398 02cd 50574D5F 		.ascii	"PWM_Claw_WriteCompare\000"
 1398      436C6177 
 1398      5F577269 
 1398      7465436F 
 1398      6D706172 
 1399              	.LASF27:
 1400 02e3 50574D5F 		.ascii	"PWM_Claw_ReadCounter\000"
 1400      436C6177 
 1400      5F526561 
 1400      64436F75 
 1400      6E746572 
 1401              	.LASF0:
 1402 02f8 7369676E 		.ascii	"signed char\000"
 1402      65642063 
 1402      68617200 
 1403              	.LASF42:
 1404 0304 433A5C55 		.ascii	"C:\\Users\\Tim\\Documents\\GitHub\\pucktacular\\Dis"
 1404      73657273 
 1404      5C54696D 
 1404      5C446F63 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccoPmBnt.s 			page 44


 1404      756D656E 
 1405 0331 706C6179 		.ascii	"play.cydsn\000"
 1405      2E637964 
 1405      736E00
 1406              	.LASF25:
 1407 033c 50574D5F 		.ascii	"PWM_Claw_SetInterruptMode\000"
 1407      436C6177 
 1407      5F536574 
 1407      496E7465 
 1407      72727570 
 1408              	.LASF17:
 1409 0356 50574D5F 		.ascii	"PWM_Claw_Enable\000"
 1409      436C6177 
 1409      5F456E61 
 1409      626C6500 
 1410              	.LASF43:
 1411 0366 50574D5F 		.ascii	"PWM_Claw_ReadControlRegister\000"
 1411      436C6177 
 1411      5F526561 
 1411      64436F6E 
 1411      74726F6C 
 1412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
