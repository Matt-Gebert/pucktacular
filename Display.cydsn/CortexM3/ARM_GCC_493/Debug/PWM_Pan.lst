ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_Pan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_Pan_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_Pan_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_Pan_Enable, %function
  24              	PWM_Pan_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_Pan.c"
   1:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_Pan.c **** * File Name: PWM_Pan.c
   3:.\Generated_Source\PSoC5/PWM_Pan.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_Pan.c **** *
   5:.\Generated_Source\PSoC5/PWM_Pan.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_Pan.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_Pan.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_Pan.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_Pan.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_Pan.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_Pan.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  15:.\Generated_Source\PSoC5/PWM_Pan.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  17:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_Pan.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_Pan.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_Pan.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_Pan.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  24:.\Generated_Source\PSoC5/PWM_Pan.c **** #include "PWM_Pan.h"
  25:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  26:.\Generated_Source\PSoC5/PWM_Pan.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_Pan.c **** #ifdef PWM_Pan_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_Pan.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_Pan.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* PWM_Pan_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_Pan.c **** uint8 PWM_Pan_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  34:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  35:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Start
  37:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  39:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_Pan.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_Pan.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  44:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  47:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  50:.\Generated_Source\PSoC5/PWM_Pan.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_Pan.c **** *  PWM_Pan_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_Pan.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  54:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  57:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_Pan.c ****     if(PWM_Pan_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
  60:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_Init();
  61:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
  63:.\Generated_Source\PSoC5/PWM_Pan.c ****     PWM_Pan_Enable();
  64:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  65:.\Generated_Source\PSoC5/PWM_Pan.c **** }
  66:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  67:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  68:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Init
  70:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  72:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_Pan.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_Pan.c **** *  PWM_Pan_Start().
  76:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  77:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  80:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_Pan.c **** *
  83:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  86:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl)
  87:.\Generated_Source\PSoC5/PWM_Pan.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl) */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  90:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(!PWM_Pan_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 PWM_Pan_interruptState;
  94:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (!PWM_Pan_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_Pan.c **** 
  97:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL |= PWM_Pan_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL |= PWM_Pan_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 104:.\Generated_Source\PSoC5/PWM_Pan.c ****         ctrl = PWM_Pan_CONTROL3 & ((uint8 )(~PWM_Pan_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL3 = ctrl | PWM_Pan_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 107:.\Generated_Source\PSoC5/PWM_Pan.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 &= ((uint8)(~PWM_Pan_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 |= PWM_Pan_SYNC;
 110:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 111:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 &= ((uint8)(~PWM_Pan_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_RT1 |= PWM_Pan_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 115:.\Generated_Source\PSoC5/PWM_Pan.c ****     #elif (PWM_Pan_UseControl)
 116:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_Pan.c ****         ctrl = PWM_Pan_CONTROL & ((uint8)(~PWM_Pan_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_Pan.c ****                 ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL = ctrl | PWM_Pan_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_Pan.c ****                                    PWM_Pan_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 123:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (!PWM_Pan_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP0 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else /* (PWM_Pan_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP0 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP1 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 133:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_WriteCounter(PWM_Pan_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (!PWM_Pan_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 136:.\Generated_Source\PSoC5/PWM_Pan.c ****     PWM_Pan_WritePeriod(PWM_Pan_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 138:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare(PWM_Pan_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare1(PWM_Pan_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteCompare2(PWM_Pan_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 145:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_KillModeMinTime)
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteKillTime(PWM_Pan_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 149:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_WriteDeadTime(PWM_Pan_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 153:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_SetInterruptMode(PWM_Pan_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 157:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE |= PWM_Pan_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL2 |= PWM_Pan_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 165:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_STATUS_AUX_CTRL |= PWM_Pan_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 171:.\Generated_Source\PSoC5/PWM_Pan.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_Pan.c ****             CyExitCriticalSection(PWM_Pan_interruptState);
 173:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 174:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Clear the FIFO to enable the PWM_Pan_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_Pan.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 180:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 181:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 182:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Enable
 184:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 186:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 189:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 192:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 195:.\Generated_Source\PSoC5/PWM_Pan.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_Pan.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 198:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE |= PWM_Pan_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_STBY_ENABLE |= PWM_Pan_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 207:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL |= PWM_Pan_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 74640040 		.word	1073767540
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_Pan_Enable, .-PWM_Pan_Enable
  45              		.section	.text.PWM_Pan_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_Pan_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_Pan_Stop, %function
  51              	PWM_Pan_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 212:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 213:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 214:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_Stop
 216:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 218:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_Pan.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_Pan.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 222:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 225:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 228:.\Generated_Source\PSoC5/PWM_Pan.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_Pan.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_Pan.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 232:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_Stop(void) 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_Pan.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 74640040 		.word	1073767540
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_Pan_Stop, .-PWM_Pan_Stop
  71              		.section	.text.PWM_Pan_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_Pan_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_Pan_WriteCounter, %function
  77              	PWM_Pan_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseControl || PWM_Pan_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 239:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_ENABLE &= ((uint8)(~PWM_Pan_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Pan_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 245:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 246:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 249:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 250:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 254:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 258:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_Pan.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 262:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 268:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 270:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1_
 272:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 276:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL3 &= ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 279:.\Generated_Source\PSoC5/PWM_Pan.c ****             #elif (PWM_Pan_UseControl)
 280:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 281:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1
 283:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                 PWM_Pan_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode1masked = comparemode & PWM_Pan_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 288:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #if(0 != PWM_Pan_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE2
 290:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                PWM_Pan_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_Pan.c ****                     uint8 comparemode2masked = comparemode & PWM_Pan_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_Pan.c ****                 #endif /* (0 != PWM_Pan_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 295:.\Generated_Source\PSoC5/PWM_Pan.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL &= ((uint8)(~(PWM_Pan_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_Pan.c ****                                             PWM_Pan_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 300:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 304:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 306:.\Generated_Source\PSoC5/PWM_Pan.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 308:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 310:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 311:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 315:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 318:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_Pan.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 325:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 328:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(0 != PWM_Pan_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE1_SHIF
 330:.\Generated_Source\PSoC5/PWM_Pan.c ****                                            PWM_Pan_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_Pan.c ****                 uint8 comparemodemasked = comparemode & PWM_Pan_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (0 != PWM_Pan_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 335:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if (PWM_Pan_UseControl)
 336:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 340:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 342:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 344:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 345:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 349:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 352:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_Pan.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 356:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 359:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 362:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 363:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(0 != PWM_Pan_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Pan_CTRL_CMPMODE2_SHIFT)) 
 365:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                  PWM_Pan_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_Pan.c ****             uint8 comparemodemasked = comparemode & PWM_Pan_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (0 != PWM_Pan_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 370:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_UseControl)
 371:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL &= ((uint8)(~PWM_Pan_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 375:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /*PWM_Pan_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 377:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 380:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (!PWM_Pan_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 382:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 383:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 387:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 393:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 396:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 399:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 402:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_Pan.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 14680040 		.word	1073768468
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_Pan_WriteCounter, .-PWM_Pan_WriteCounter
  96              		.section	.text.PWM_Pan_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_Pan_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_Pan_ReadCounter, %function
 102              	PWM_Pan_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 408:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 409:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 410:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 414:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 418:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 421:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 424:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_Pan.c ****           (void)CY_GET_REG8(PWM_Pan_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 432:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 1A640040 		.word	1073767450
 122 0010 B4680040 		.word	1073768628
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_Pan_ReadCounter, .-PWM_Pan_ReadCounter
 126              		.section	.text.PWM_Pan_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_Pan_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_Pan_WritePeriod, %function
 132              	PWM_Pan_WritePeriod:
 133              	.LFB7:
 435:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 436:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_Pan.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 11


 438:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 439:.\Generated_Source\PSoC5/PWM_Pan.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Function Name: PWM_Pan_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_Pan.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 443:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 446:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 449:.\Generated_Source\PSoC5/PWM_Pan.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_Pan.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_Pan.c ****         *
 452:.\Generated_Source\PSoC5/PWM_Pan.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_Pan.c ****         void PWM_Pan_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_Pan.c ****         {
 455:.\Generated_Source\PSoC5/PWM_Pan.c ****             while(0u != (PWM_Pan_ReadStatusRegister() & PWM_Pan_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_Pan.c ****             {
 457:.\Generated_Source\PSoC5/PWM_Pan.c ****                 (void)PWM_Pan_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_Pan.c ****             }
 459:.\Generated_Source\PSoC5/PWM_Pan.c ****         }
 460:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 461:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* PWM_Pan_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 463:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* !PWM_Pan_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 465:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 466:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 470:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_Pan.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_Pan.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 474:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_Pan.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_Pan.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 478:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 481:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_Pan.c **** void PWM_Pan_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_Pan.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(PWM_Pan_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG16(PWM_Pan_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 94680040 		.word	1073768596
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_Pan_WritePeriod, .-PWM_Pan_WritePeriod
 151              		.section	.text.PWM_Pan_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_Pan_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_Pan_WriteCompare, %function
 157              	PWM_Pan_WriteCompare:
 158              	.LFB8:
 488:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 490:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 491:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 493:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 494:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 498:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 505:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 508:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 511:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 515:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_Pan.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 13


 521:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 54680040 		.word	1073768532
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_Pan_WriteCompare, .-PWM_Pan_WriteCompare
 176              		.section	.text.PWM_Pan_SetInterruptMode,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_Pan_SetInterruptMode
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_Pan_SetInterruptMode, %function
 182              	PWM_Pan_SetInterruptMode:
 183              	.LFB9:
 523:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 525:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if (PWM_Pan_PWMMode == PWM_Pan__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_Pan.c ****                 CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_Pan.c ****                 CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_PWMMode == PWM_Pan__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 533:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 534:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 535:.\Generated_Source\PSoC5/PWM_Pan.c **** #else
 536:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 537:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 538:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 542:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 548:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 551:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 554:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_Pan.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 558:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 14


 559:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 564:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 565:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 566:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 570:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 577:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 580:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 583:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_Pan.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 587:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG16(PWM_Pan_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 593:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 595:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 597:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 598:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 602:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 605:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 608:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 611:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 614:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(!PWM_Pan_DeadBand2_4)
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 15


 616:.\Generated_Source\PSoC5/PWM_Pan.c ****             CY_SET_REG8(PWM_Pan_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_DEADBAND_COUNT &= ((uint8)(~PWM_Pan_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 622:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Pan_DEADBAND_COUNT_SHIFT)
 625:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                     PWM_Pan_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_Pan.c ****                 PWM_Pan_DEADBAND_COUNT |= deadtime & PWM_Pan_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 630:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (!PWM_Pan_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 632:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 633:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 634:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 638:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 641:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 644:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 647:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 650:.\Generated_Source\PSoC5/PWM_Pan.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(!PWM_Pan_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_Pan.c ****             return (CY_GET_REG8(PWM_Pan_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 655:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_Pan.c ****             #if(PWM_Pan_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_Pan.c ****                 return ((uint8)(((uint8)(PWM_Pan_DEADBAND_COUNT & PWM_Pan_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_Pan.c ****                                                                            PWM_Pan_DEADBAND_COUNT_S
 659:.\Generated_Source\PSoC5/PWM_Pan.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_Pan.c ****                 return (PWM_Pan_DEADBAND_COUNT & PWM_Pan_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_Pan.c ****             #endif /* (PWM_Pan_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (!PWM_Pan_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 664:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 666:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 668:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 669:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 16


 673:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 677:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 680:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 683:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 184              		.loc 1 685 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 686:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_STATUS_MASK_PTR, interruptMode);
 190              		.loc 1 686 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 89650040 		.word	1073767817
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	PWM_Pan_SetInterruptMode, .-PWM_Pan_SetInterruptMode
 201              		.section	.text.PWM_Pan_ReadStatusRegister,"ax",%progbits
 202              		.align	2
 203              		.global	PWM_Pan_ReadStatusRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM_Pan_ReadStatusRegister, %function
 207              	PWM_Pan_ReadStatusRegister:
 208              	.LFB10:
 687:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 688:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 689:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 690:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 694:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 697:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 700:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [4]   : FIFO not empty
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 17


 705:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 710:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 209              		.loc 1 712 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG8(PWM_Pan_STATUS_PTR));
 214              		.loc 1 713 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 217              		.loc 1 714 0
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 69650040 		.word	1073767785
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	PWM_Pan_ReadStatusRegister, .-PWM_Pan_ReadStatusRegister
 226              		.section	.text.PWM_Pan_ReadControlRegister,"ax",%progbits
 227              		.align	2
 228              		.global	PWM_Pan_ReadControlRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_Pan_ReadControlRegister, %function
 232              	PWM_Pan_ReadControlRegister:
 233              	.LFB11:
 715:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 716:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 718:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 719:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseControl)
 720:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 721:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 722:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 726:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 730:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 733:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 736:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 18


 737:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint8 PWM_Pan_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 234              		.loc 1 738 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/PWM_Pan.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 741:.\Generated_Source\PSoC5/PWM_Pan.c ****         result = CY_GET_REG8(PWM_Pan_CONTROL_PTR);
 239              		.loc 1 741 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242              	.LVL4:
 742:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 243              		.loc 1 743 0
 244 0004 7047     		bx	lr
 245              	.L27:
 246 0006 00BF     		.align	2
 247              	.L26:
 248 0008 74640040 		.word	1073767540
 249              		.cfi_endproc
 250              	.LFE11:
 251              		.size	PWM_Pan_ReadControlRegister, .-PWM_Pan_ReadControlRegister
 252              		.section	.text.PWM_Pan_WriteControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	PWM_Pan_WriteControlRegister
 255              		.thumb
 256              		.thumb_func
 257              		.type	PWM_Pan_WriteControlRegister, %function
 258              	PWM_Pan_WriteControlRegister:
 259              	.LFB12:
 744:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 745:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 746:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 750:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 754:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 761:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 764:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_Pan.c ****     void PWM_Pan_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 260              		.loc 1 766 0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 19


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL5:
 767:.\Generated_Source\PSoC5/PWM_Pan.c ****         CY_SET_REG8(PWM_Pan_CONTROL_PTR, control);
 266              		.loc 1 767 0
 267 0000 014B     		ldr	r3, .L29
 268 0002 1870     		strb	r0, [r3]
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 74640040 		.word	1073767540
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	PWM_Pan_WriteControlRegister, .-PWM_Pan_WriteControlRegister
 277              		.section	.text.PWM_Pan_ReadCapture,"ax",%progbits
 278              		.align	2
 279              		.global	PWM_Pan_ReadCapture
 280              		.thumb
 281              		.thumb_func
 282              		.type	PWM_Pan_ReadCapture, %function
 283              	PWM_Pan_ReadCapture:
 284              	.LFB13:
 768:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 769:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 770:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 772:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 773:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (!PWM_Pan_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 775:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 776:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 780:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 783:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 786:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 789:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 285              		.loc 1 791 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_CAPTURE_LSB_PTR));
 290              		.loc 1 792 0
 291 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 20


 292 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 293              		.loc 1 793 0
 294 0004 80B2     		uxth	r0, r0
 295 0006 7047     		bx	lr
 296              	.L33:
 297              		.align	2
 298              	.L32:
 299 0008 B4680040 		.word	1073768628
 300              		.cfi_endproc
 301              	.LFE13:
 302              		.size	PWM_Pan_ReadCapture, .-PWM_Pan_ReadCapture
 303              		.section	.text.PWM_Pan_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_Pan_ClearFIFO
 306              		.thumb
 307              		.thumb_func
 308              		.type	PWM_Pan_ClearFIFO, %function
 309              	PWM_Pan_ClearFIFO:
 310              	.LFB6:
 454:.\Generated_Source\PSoC5/PWM_Pan.c ****             while(0u != (PWM_Pan_ReadStatusRegister() & PWM_Pan_STATUS_FIFONEMPTY))
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 08B5     		push	{r3, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/PWM_Pan.c ****             {
 319              		.loc 1 455 0
 320 0002 01E0     		b	.L35
 321              	.L36:
 457:.\Generated_Source\PSoC5/PWM_Pan.c ****             }
 322              		.loc 1 457 0
 323 0004 FFF7FEFF 		bl	PWM_Pan_ReadCapture
 324              	.LVL6:
 325              	.L35:
 455:.\Generated_Source\PSoC5/PWM_Pan.c ****             {
 326              		.loc 1 455 0
 327 0008 FFF7FEFF 		bl	PWM_Pan_ReadStatusRegister
 328              	.LVL7:
 329 000c 10F0100F 		tst	r0, #16
 330 0010 F8D1     		bne	.L36
 459:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 331              		.loc 1 459 0
 332 0012 08BD     		pop	{r3, pc}
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	PWM_Pan_ClearFIFO, .-PWM_Pan_ClearFIFO
 336              		.section	.text.PWM_Pan_Init,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_Pan_Init
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_Pan_Init, %function
 342              	PWM_Pan_Init:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 21


 343              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if (PWM_Pan_UsingFixedFunction || PWM_Pan_UseControl)
 344              		.loc 1 85 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_Pan.c ****                 ((uint8)(~PWM_Pan_CTRL_CMPMODE1_MASK));
 352              		.loc 1 117 0
 353 0002 154A     		ldr	r2, .L40
 354 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 355 0006 03F0C003 		and	r3, r3, #192
 356              	.LVL8:
 119:.\Generated_Source\PSoC5/PWM_Pan.c ****                                    PWM_Pan_DEFAULT_COMPARE1_MODE;
 357              		.loc 1 119 0
 358 000a 43F00903 		orr	r3, r3, #9
 359              	.LVL9:
 360 000e 1370     		strb	r3, [r2]
 129:.\Generated_Source\PSoC5/PWM_Pan.c ****             PWM_Pan_AUX_CONTROLDP1 |= (PWM_Pan_AUX_CTRL_FIFO0_CLR);
 361              		.loc 1 129 0
 362 0010 2632     		adds	r2, r2, #38
 363 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 364 0014 43F00103 		orr	r3, r3, #1
 365 0018 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_Resolution == 8) */
 366              		.loc 1 130 0
 367 001a 0132     		adds	r2, r2, #1
 368 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 369 001e 43F00103 		orr	r3, r3, #1
 370 0022 1370     		strb	r3, [r2]
 133:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (!PWM_Pan_UsingFixedFunction) */
 371              		.loc 1 133 0
 372 0024 40F2CF70 		movw	r0, #1999
 373 0028 FFF7FEFF 		bl	PWM_Pan_WriteCounter
 374              	.LVL10:
 136:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 375              		.loc 1 136 0
 376 002c 40F2CF70 		movw	r0, #1999
 377 0030 FFF7FEFF 		bl	PWM_Pan_WritePeriod
 378              	.LVL11:
 139:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 379              		.loc 1 139 0
 380 0034 8220     		movs	r0, #130
 381 0036 FFF7FEFF 		bl	PWM_Pan_WriteCompare
 382              	.LVL12:
 154:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UseStatus || PWM_Pan_UsingFixedFunction) */
 383              		.loc 1 154 0
 384 003a 0020     		movs	r0, #0
 385 003c FFF7FEFF 		bl	PWM_Pan_SetInterruptMode
 386              	.LVL13:
 167:.\Generated_Source\PSoC5/PWM_Pan.c ****             /* Use the interrupt output of the status register for IRQ output */
 387              		.loc 1 167 0
 388 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL14:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 22


 169:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 390              		.loc 1 169 0
 391 0044 054A     		ldr	r2, .L40+4
 392 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 393 0048 43F01003 		orr	r3, r3, #16
 394 004c 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 395              		.loc 1 172 0
 396 004e FFF7FEFF 		bl	CyExitCriticalSection
 397              	.LVL15:
 176:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UseStatus) */
 398              		.loc 1 176 0
 399 0052 FFF7FEFF 		bl	PWM_Pan_ClearFIFO
 400              	.LVL16:
 401 0056 08BD     		pop	{r3, pc}
 402              	.L41:
 403              		.align	2
 404              	.L40:
 405 0058 74640040 		.word	1073767540
 406 005c 99650040 		.word	1073767833
 407              		.cfi_endproc
 408              	.LFE1:
 409              		.size	PWM_Pan_Init, .-PWM_Pan_Init
 410              		.section	.text.PWM_Pan_Start,"ax",%progbits
 411              		.align	2
 412              		.global	PWM_Pan_Start
 413              		.thumb
 414              		.thumb_func
 415              		.type	PWM_Pan_Start, %function
 416              	PWM_Pan_Start:
 417              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_Pan.c ****     /* If not Initialized then initialize all required hardware and software */
 418              		.loc 1 56 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 426              		.loc 1 58 0
 427 0002 054B     		ldr	r3, .L45
 428 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0006 23B9     		cbnz	r3, .L43
  60:.\Generated_Source\PSoC5/PWM_Pan.c ****         PWM_Pan_initVar = 1u;
 430              		.loc 1 60 0
 431 0008 FFF7FEFF 		bl	PWM_Pan_Init
 432              	.LVL17:
  61:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 433              		.loc 1 61 0
 434 000c 0122     		movs	r2, #1
 435 000e 024B     		ldr	r3, .L45
 436 0010 1A70     		strb	r2, [r3]
 437              	.L43:
  63:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 438              		.loc 1 63 0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 23


 439 0012 FFF7FEFF 		bl	PWM_Pan_Enable
 440              	.LVL18:
 441 0016 08BD     		pop	{r3, pc}
 442              	.L46:
 443              		.align	2
 444              	.L45:
 445 0018 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE0:
 448              		.size	PWM_Pan_Start, .-PWM_Pan_Start
 449              		.section	.text.PWM_Pan_ReadCompare,"ax",%progbits
 450              		.align	2
 451              		.global	PWM_Pan_ReadCompare
 452              		.thumb
 453              		.thumb_func
 454              		.type	PWM_Pan_ReadCompare, %function
 455              	PWM_Pan_ReadCompare:
 456              	.LFB14:
 794:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 795:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (!PWM_Pan_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 797:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 798:.\Generated_Source\PSoC5/PWM_Pan.c **** #if (PWM_Pan_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 800:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 801:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 805:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 809:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 812:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 815:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 457              		.loc 1 817 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/PWM_Pan.c ****         #if(PWM_Pan_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_Pan.c ****             return ((uint16)CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_Pan.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_Pan.c ****             return (CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 462              		.loc 1 821 0
 463 0000 014B     		ldr	r3, .L48
 464 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/PWM_Pan.c ****         #endif /* (PWM_Pan_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 465              		.loc 1 823 0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 24


 466 0004 80B2     		uxth	r0, r0
 467 0006 7047     		bx	lr
 468              	.L49:
 469              		.align	2
 470              	.L48:
 471 0008 54680040 		.word	1073768532
 472              		.cfi_endproc
 473              	.LFE14:
 474              		.size	PWM_Pan_ReadCompare, .-PWM_Pan_ReadCompare
 475              		.section	.text.PWM_Pan_ReadPeriod,"ax",%progbits
 476              		.align	2
 477              		.global	PWM_Pan_ReadPeriod
 478              		.thumb
 479              		.thumb_func
 480              		.type	PWM_Pan_ReadPeriod, %function
 481              	PWM_Pan_ReadPeriod:
 482              	.LFB15:
 824:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 825:.\Generated_Source\PSoC5/PWM_Pan.c **** #else
 826:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 827:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 828:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 832:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 835:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 838:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 841:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
 844:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 846:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 847:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 848:.\Generated_Source\PSoC5/PWM_Pan.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Function Name: PWM_Pan_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_Pan.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 852:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 855:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 858:.\Generated_Source\PSoC5/PWM_Pan.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_Pan.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_Pan.c ****     *
 861:.\Generated_Source\PSoC5/PWM_Pan.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_Pan.c ****     uint16 PWM_Pan_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_Pan.c ****     {
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 25


 864:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/PWM_Pan.c ****     }
 866:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 867:.\Generated_Source\PSoC5/PWM_Pan.c **** #endif /* (PWM_Pan_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 869:.\Generated_Source\PSoC5/PWM_Pan.c **** 
 870:.\Generated_Source\PSoC5/PWM_Pan.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_Pan.c **** * Function Name: PWM_Pan_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_Pan.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 874:.\Generated_Source\PSoC5/PWM_Pan.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_Pan.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 877:.\Generated_Source\PSoC5/PWM_Pan.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_Pan.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 880:.\Generated_Source\PSoC5/PWM_Pan.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_Pan.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_Pan.c **** *
 883:.\Generated_Source\PSoC5/PWM_Pan.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_Pan.c **** uint16 PWM_Pan_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_Pan.c **** {
 483              		.loc 1 885 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_Pan.c ****     #if(PWM_Pan_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_Pan.c ****         return ((uint16)CY_GET_REG16(PWM_Pan_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_Pan.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_Pan.c ****         return (CY_GET_REG16(PWM_Pan_PERIOD_LSB_PTR));
 488              		.loc 1 889 0
 489 0000 014B     		ldr	r3, .L51
 490 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/PWM_Pan.c ****     #endif /* (PWM_Pan_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_Pan.c **** }
 491              		.loc 1 891 0
 492 0004 80B2     		uxth	r0, r0
 493 0006 7047     		bx	lr
 494              	.L52:
 495              		.align	2
 496              	.L51:
 497 0008 94680040 		.word	1073768596
 498              		.cfi_endproc
 499              	.LFE15:
 500              		.size	PWM_Pan_ReadPeriod, .-PWM_Pan_ReadPeriod
 501              		.global	PWM_Pan_initVar
 502              		.bss
 503              		.set	.LANCHOR0,. + 0
 504              		.type	PWM_Pan_initVar, %object
 505              		.size	PWM_Pan_initVar, 1
 506              	PWM_Pan_initVar:
 507 0000 00       		.space	1
 508              		.text
 509              	.Letext0:
 510              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 511              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 26


 512              		.section	.debug_info,"",%progbits
 513              	.Ldebug_info0:
 514 0000 4A030000 		.4byte	0x34a
 515 0004 0400     		.2byte	0x4
 516 0006 00000000 		.4byte	.Ldebug_abbrev0
 517 000a 04       		.byte	0x4
 518 000b 01       		.uleb128 0x1
 519 000c 60010000 		.4byte	.LASF40
 520 0010 01       		.byte	0x1
 521 0011 CF000000 		.4byte	.LASF41
 522 0015 AE020000 		.4byte	.LASF42
 523 0019 00000000 		.4byte	.Ldebug_ranges0+0
 524 001d 00000000 		.4byte	0
 525 0021 00000000 		.4byte	.Ldebug_line0
 526 0025 02       		.uleb128 0x2
 527 0026 01       		.byte	0x1
 528 0027 06       		.byte	0x6
 529 0028 35030000 		.4byte	.LASF0
 530 002c 02       		.uleb128 0x2
 531 002d 01       		.byte	0x1
 532 002e 08       		.byte	0x8
 533 002f B1000000 		.4byte	.LASF1
 534 0033 02       		.uleb128 0x2
 535 0034 02       		.byte	0x2
 536 0035 05       		.byte	0x5
 537 0036 F5020000 		.4byte	.LASF2
 538 003a 02       		.uleb128 0x2
 539 003b 02       		.byte	0x2
 540 003c 07       		.byte	0x7
 541 003d 57000000 		.4byte	.LASF3
 542 0041 02       		.uleb128 0x2
 543 0042 04       		.byte	0x4
 544 0043 05       		.byte	0x5
 545 0044 41000000 		.4byte	.LASF4
 546 0048 02       		.uleb128 0x2
 547 0049 04       		.byte	0x4
 548 004a 07       		.byte	0x7
 549 004b F2000000 		.4byte	.LASF5
 550 004f 02       		.uleb128 0x2
 551 0050 08       		.byte	0x8
 552 0051 05       		.byte	0x5
 553 0052 83020000 		.4byte	.LASF6
 554 0056 02       		.uleb128 0x2
 555 0057 08       		.byte	0x8
 556 0058 07       		.byte	0x7
 557 0059 8C000000 		.4byte	.LASF7
 558 005d 03       		.uleb128 0x3
 559 005e 04       		.byte	0x4
 560 005f 05       		.byte	0x5
 561 0060 696E7400 		.ascii	"int\000"
 562 0064 02       		.uleb128 0x2
 563 0065 04       		.byte	0x4
 564 0066 07       		.byte	0x7
 565 0067 05020000 		.4byte	.LASF8
 566 006b 04       		.uleb128 0x4
 567 006c 1B010000 		.4byte	.LASF9
 568 0070 02       		.byte	0x2
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 27


 569 0071 9201     		.2byte	0x192
 570 0073 2C000000 		.4byte	0x2c
 571 0077 04       		.uleb128 0x4
 572 0078 45010000 		.4byte	.LASF10
 573 007c 02       		.byte	0x2
 574 007d 9301     		.2byte	0x193
 575 007f 3A000000 		.4byte	0x3a
 576 0083 02       		.uleb128 0x2
 577 0084 04       		.byte	0x4
 578 0085 04       		.byte	0x4
 579 0086 7E000000 		.4byte	.LASF11
 580 008a 02       		.uleb128 0x2
 581 008b 08       		.byte	0x8
 582 008c 04       		.byte	0x4
 583 008d 3E010000 		.4byte	.LASF12
 584 0091 02       		.uleb128 0x2
 585 0092 01       		.byte	0x1
 586 0093 08       		.byte	0x8
 587 0094 30030000 		.4byte	.LASF13
 588 0098 04       		.uleb128 0x4
 589 0099 61020000 		.4byte	.LASF14
 590 009d 02       		.byte	0x2
 591 009e 3C02     		.2byte	0x23c
 592 00a0 A4000000 		.4byte	0xa4
 593 00a4 05       		.uleb128 0x5
 594 00a5 6B000000 		.4byte	0x6b
 595 00a9 04       		.uleb128 0x4
 596 00aa 00000000 		.4byte	.LASF15
 597 00ae 02       		.byte	0x2
 598 00af 3D02     		.2byte	0x23d
 599 00b1 B5000000 		.4byte	0xb5
 600 00b5 05       		.uleb128 0x5
 601 00b6 77000000 		.4byte	0x77
 602 00ba 02       		.uleb128 0x2
 603 00bb 04       		.byte	0x4
 604 00bc 07       		.byte	0x7
 605 00bd 66020000 		.4byte	.LASF16
 606 00c1 06       		.uleb128 0x6
 607 00c2 9F020000 		.4byte	.LASF17
 608 00c6 01       		.byte	0x1
 609 00c7 C7       		.byte	0xc7
 610 00c8 00000000 		.4byte	.LFB2
 611 00cc 10000000 		.4byte	.LFE2-.LFB2
 612 00d0 01       		.uleb128 0x1
 613 00d1 9C       		.byte	0x9c
 614 00d2 06       		.uleb128 0x6
 615 00d3 28020000 		.4byte	.LASF18
 616 00d7 01       		.byte	0x1
 617 00d8 E9       		.byte	0xe9
 618 00d9 00000000 		.4byte	.LFB3
 619 00dd 10000000 		.4byte	.LFE3-.LFB3
 620 00e1 01       		.uleb128 0x1
 621 00e2 9C       		.byte	0x9c
 622 00e3 07       		.uleb128 0x7
 623 00e4 4E030000 		.4byte	.LASF19
 624 00e8 01       		.byte	0x1
 625 00e9 9301     		.2byte	0x193
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 28


 626 00eb 00000000 		.4byte	.LFB4
 627 00ef 0C000000 		.4byte	.LFE4-.LFB4
 628 00f3 01       		.uleb128 0x1
 629 00f4 9C       		.byte	0x9c
 630 00f5 08010000 		.4byte	0x108
 631 00f9 08       		.uleb128 0x8
 632 00fa 84000000 		.4byte	.LASF21
 633 00fe 01       		.byte	0x1
 634 00ff 9301     		.2byte	0x193
 635 0101 77000000 		.4byte	0x77
 636 0105 01       		.uleb128 0x1
 637 0106 50       		.byte	0x50
 638 0107 00       		.byte	0
 639 0108 09       		.uleb128 0x9
 640 0109 1C030000 		.4byte	.LASF27
 641 010d 01       		.byte	0x1
 642 010e A901     		.2byte	0x1a9
 643 0110 77000000 		.4byte	0x77
 644 0114 00000000 		.4byte	.LFB5
 645 0118 14000000 		.4byte	.LFE5-.LFB5
 646 011c 01       		.uleb128 0x1
 647 011d 9C       		.byte	0x9c
 648 011e 07       		.uleb128 0x7
 649 011f 6A000000 		.4byte	.LASF20
 650 0123 01       		.byte	0x1
 651 0124 E201     		.2byte	0x1e2
 652 0126 00000000 		.4byte	.LFB7
 653 012a 0C000000 		.4byte	.LFE7-.LFB7
 654 012e 01       		.uleb128 0x1
 655 012f 9C       		.byte	0x9c
 656 0130 43010000 		.4byte	0x143
 657 0134 08       		.uleb128 0x8
 658 0135 3A000000 		.4byte	.LASF22
 659 0139 01       		.byte	0x1
 660 013a E201     		.2byte	0x1e2
 661 013c 77000000 		.4byte	0x77
 662 0140 01       		.uleb128 0x1
 663 0141 50       		.byte	0x50
 664 0142 00       		.byte	0
 665 0143 07       		.uleb128 0x7
 666 0144 29010000 		.4byte	.LASF23
 667 0148 01       		.byte	0x1
 668 0149 0402     		.2byte	0x204
 669 014b 00000000 		.4byte	.LFB8
 670 014f 0C000000 		.4byte	.LFE8-.LFB8
 671 0153 01       		.uleb128 0x1
 672 0154 9C       		.byte	0x9c
 673 0155 68010000 		.4byte	0x168
 674 0159 08       		.uleb128 0x8
 675 015a 41030000 		.4byte	.LASF24
 676 015e 01       		.byte	0x1
 677 015f 0402     		.2byte	0x204
 678 0161 77000000 		.4byte	0x77
 679 0165 01       		.uleb128 0x1
 680 0166 50       		.byte	0x50
 681 0167 00       		.byte	0
 682 0168 07       		.uleb128 0x7
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 29


 683 0169 21000000 		.4byte	.LASF25
 684 016d 01       		.byte	0x1
 685 016e AC02     		.2byte	0x2ac
 686 0170 00000000 		.4byte	.LFB9
 687 0174 0C000000 		.4byte	.LFE9-.LFB9
 688 0178 01       		.uleb128 0x1
 689 0179 9C       		.byte	0x9c
 690 017a 8D010000 		.4byte	0x18d
 691 017e 08       		.uleb128 0x8
 692 017f 91020000 		.4byte	.LASF26
 693 0183 01       		.byte	0x1
 694 0184 AC02     		.2byte	0x2ac
 695 0186 6B000000 		.4byte	0x6b
 696 018a 01       		.uleb128 0x1
 697 018b 50       		.byte	0x50
 698 018c 00       		.byte	0
 699 018d 09       		.uleb128 0x9
 700 018e 06000000 		.4byte	.LASF28
 701 0192 01       		.byte	0x1
 702 0193 C702     		.2byte	0x2c7
 703 0195 6B000000 		.4byte	0x6b
 704 0199 00000000 		.4byte	.LFB10
 705 019d 0C000000 		.4byte	.LFE10-.LFB10
 706 01a1 01       		.uleb128 0x1
 707 01a2 9C       		.byte	0x9c
 708 01a3 0A       		.uleb128 0xa
 709 01a4 63030000 		.4byte	.LASF43
 710 01a8 01       		.byte	0x1
 711 01a9 E102     		.2byte	0x2e1
 712 01ab 6B000000 		.4byte	0x6b
 713 01af 00000000 		.4byte	.LFB11
 714 01b3 0C000000 		.4byte	.LFE11-.LFB11
 715 01b7 01       		.uleb128 0x1
 716 01b8 9C       		.byte	0x9c
 717 01b9 CC010000 		.4byte	0x1cc
 718 01bd 0B       		.uleb128 0xb
 719 01be 48020000 		.4byte	.LASF34
 720 01c2 01       		.byte	0x1
 721 01c3 E302     		.2byte	0x2e3
 722 01c5 6B000000 		.4byte	0x6b
 723 01c9 01       		.uleb128 0x1
 724 01ca 50       		.byte	0x50
 725 01cb 00       		.byte	0
 726 01cc 07       		.uleb128 0x7
 727 01cd FF020000 		.4byte	.LASF29
 728 01d1 01       		.byte	0x1
 729 01d2 FD02     		.2byte	0x2fd
 730 01d4 00000000 		.4byte	.LFB12
 731 01d8 0C000000 		.4byte	.LFE12-.LFB12
 732 01dc 01       		.uleb128 0x1
 733 01dd 9C       		.byte	0x9c
 734 01de F1010000 		.4byte	0x1f1
 735 01e2 08       		.uleb128 0x8
 736 01e3 21010000 		.4byte	.LASF30
 737 01e7 01       		.byte	0x1
 738 01e8 FD02     		.2byte	0x2fd
 739 01ea 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 30


 740 01ee 01       		.uleb128 0x1
 741 01ef 50       		.byte	0x50
 742 01f0 00       		.byte	0
 743 01f1 09       		.uleb128 0x9
 744 01f2 6F020000 		.4byte	.LASF31
 745 01f6 01       		.byte	0x1
 746 01f7 1603     		.2byte	0x316
 747 01f9 77000000 		.4byte	0x77
 748 01fd 00000000 		.4byte	.LFB13
 749 0201 0C000000 		.4byte	.LFE13-.LFB13
 750 0205 01       		.uleb128 0x1
 751 0206 9C       		.byte	0x9c
 752 0207 07       		.uleb128 0x7
 753 0208 4F020000 		.4byte	.LASF32
 754 020c 01       		.byte	0x1
 755 020d C501     		.2byte	0x1c5
 756 020f 00000000 		.4byte	.LFB6
 757 0213 14000000 		.4byte	.LFE6-.LFB6
 758 0217 01       		.uleb128 0x1
 759 0218 9C       		.byte	0x9c
 760 0219 30020000 		.4byte	0x230
 761 021d 0C       		.uleb128 0xc
 762 021e 08000000 		.4byte	.LVL6
 763 0222 F1010000 		.4byte	0x1f1
 764 0226 0C       		.uleb128 0xc
 765 0227 0C000000 		.4byte	.LVL7
 766 022b 8D010000 		.4byte	0x18d
 767 022f 00       		.byte	0
 768 0230 0D       		.uleb128 0xd
 769 0231 4A000000 		.4byte	.LASF33
 770 0235 01       		.byte	0x1
 771 0236 54       		.byte	0x54
 772 0237 00000000 		.4byte	.LFB1
 773 023b 60000000 		.4byte	.LFE1-.LFB1
 774 023f 01       		.uleb128 0x1
 775 0240 9C       		.byte	0x9c
 776 0241 D0020000 		.4byte	0x2d0
 777 0245 0E       		.uleb128 0xe
 778 0246 49030000 		.4byte	.LASF35
 779 024a 01       		.byte	0x1
 780 024b 57       		.byte	0x57
 781 024c 6B000000 		.4byte	0x6b
 782 0250 00000000 		.4byte	.LLST0
 783 0254 0E       		.uleb128 0xe
 784 0255 04010000 		.4byte	.LASF36
 785 0259 01       		.byte	0x1
 786 025a 5D       		.byte	0x5d
 787 025b 6B000000 		.4byte	0x6b
 788 025f 13000000 		.4byte	.LLST1
 789 0263 0F       		.uleb128 0xf
 790 0264 2C000000 		.4byte	.LVL10
 791 0268 E3000000 		.4byte	0xe3
 792 026c 78020000 		.4byte	0x278
 793 0270 10       		.uleb128 0x10
 794 0271 01       		.uleb128 0x1
 795 0272 50       		.byte	0x50
 796 0273 03       		.uleb128 0x3
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 31


 797 0274 0A       		.byte	0xa
 798 0275 CF07     		.2byte	0x7cf
 799 0277 00       		.byte	0
 800 0278 0F       		.uleb128 0xf
 801 0279 34000000 		.4byte	.LVL11
 802 027d 1E010000 		.4byte	0x11e
 803 0281 8D020000 		.4byte	0x28d
 804 0285 10       		.uleb128 0x10
 805 0286 01       		.uleb128 0x1
 806 0287 50       		.byte	0x50
 807 0288 03       		.uleb128 0x3
 808 0289 0A       		.byte	0xa
 809 028a CF07     		.2byte	0x7cf
 810 028c 00       		.byte	0
 811 028d 0F       		.uleb128 0xf
 812 028e 3A000000 		.4byte	.LVL12
 813 0292 43010000 		.4byte	0x143
 814 0296 A1020000 		.4byte	0x2a1
 815 029a 10       		.uleb128 0x10
 816 029b 01       		.uleb128 0x1
 817 029c 50       		.byte	0x50
 818 029d 02       		.uleb128 0x2
 819 029e 08       		.byte	0x8
 820 029f 82       		.byte	0x82
 821 02a0 00       		.byte	0
 822 02a1 0F       		.uleb128 0xf
 823 02a2 40000000 		.4byte	.LVL13
 824 02a6 68010000 		.4byte	0x168
 825 02aa B4020000 		.4byte	0x2b4
 826 02ae 10       		.uleb128 0x10
 827 02af 01       		.uleb128 0x1
 828 02b0 50       		.byte	0x50
 829 02b1 01       		.uleb128 0x1
 830 02b2 30       		.byte	0x30
 831 02b3 00       		.byte	0
 832 02b4 0C       		.uleb128 0xc
 833 02b5 44000000 		.4byte	.LVL14
 834 02b9 35030000 		.4byte	0x335
 835 02bd 0C       		.uleb128 0xc
 836 02be 52000000 		.4byte	.LVL15
 837 02c2 40030000 		.4byte	0x340
 838 02c6 0C       		.uleb128 0xc
 839 02c7 56000000 		.4byte	.LVL16
 840 02cb 07020000 		.4byte	0x207
 841 02cf 00       		.byte	0
 842 02d0 0D       		.uleb128 0xd
 843 02d1 A3000000 		.4byte	.LASF37
 844 02d5 01       		.byte	0x1
 845 02d6 37       		.byte	0x37
 846 02d7 00000000 		.4byte	.LFB0
 847 02db 1C000000 		.4byte	.LFE0-.LFB0
 848 02df 01       		.uleb128 0x1
 849 02e0 9C       		.byte	0x9c
 850 02e1 F8020000 		.4byte	0x2f8
 851 02e5 0C       		.uleb128 0xc
 852 02e6 0C000000 		.4byte	.LVL17
 853 02ea 30020000 		.4byte	0x230
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 32


 854 02ee 0C       		.uleb128 0xc
 855 02ef 16000000 		.4byte	.LVL18
 856 02f3 C1000000 		.4byte	0xc1
 857 02f7 00       		.byte	0
 858 02f8 09       		.uleb128 0x9
 859 02f9 4C010000 		.4byte	.LASF38
 860 02fd 01       		.byte	0x1
 861 02fe 3003     		.2byte	0x330
 862 0300 77000000 		.4byte	0x77
 863 0304 00000000 		.4byte	.LFB14
 864 0308 0C000000 		.4byte	.LFE14-.LFB14
 865 030c 01       		.uleb128 0x1
 866 030d 9C       		.byte	0x9c
 867 030e 09       		.uleb128 0x9
 868 030f 35020000 		.4byte	.LASF39
 869 0313 01       		.byte	0x1
 870 0314 7403     		.2byte	0x374
 871 0316 77000000 		.4byte	0x77
 872 031a 00000000 		.4byte	.LFB15
 873 031e 0C000000 		.4byte	.LFE15-.LFB15
 874 0322 01       		.uleb128 0x1
 875 0323 9C       		.byte	0x9c
 876 0324 11       		.uleb128 0x11
 877 0325 BF000000 		.4byte	.LASF44
 878 0329 01       		.byte	0x1
 879 032a 20       		.byte	0x20
 880 032b 6B000000 		.4byte	0x6b
 881 032f 05       		.uleb128 0x5
 882 0330 03       		.byte	0x3
 883 0331 00000000 		.4byte	PWM_Pan_initVar
 884 0335 12       		.uleb128 0x12
 885 0336 EE010000 		.4byte	.LASF45
 886 033a 03       		.byte	0x3
 887 033b 7D       		.byte	0x7d
 888 033c 6B000000 		.4byte	0x6b
 889 0340 13       		.uleb128 0x13
 890 0341 12020000 		.4byte	.LASF46
 891 0345 03       		.byte	0x3
 892 0346 7E       		.byte	0x7e
 893 0347 14       		.uleb128 0x14
 894 0348 6B000000 		.4byte	0x6b
 895 034c 00       		.byte	0
 896 034d 00       		.byte	0
 897              		.section	.debug_abbrev,"",%progbits
 898              	.Ldebug_abbrev0:
 899 0000 01       		.uleb128 0x1
 900 0001 11       		.uleb128 0x11
 901 0002 01       		.byte	0x1
 902 0003 25       		.uleb128 0x25
 903 0004 0E       		.uleb128 0xe
 904 0005 13       		.uleb128 0x13
 905 0006 0B       		.uleb128 0xb
 906 0007 03       		.uleb128 0x3
 907 0008 0E       		.uleb128 0xe
 908 0009 1B       		.uleb128 0x1b
 909 000a 0E       		.uleb128 0xe
 910 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 33


 911 000c 17       		.uleb128 0x17
 912 000d 11       		.uleb128 0x11
 913 000e 01       		.uleb128 0x1
 914 000f 10       		.uleb128 0x10
 915 0010 17       		.uleb128 0x17
 916 0011 00       		.byte	0
 917 0012 00       		.byte	0
 918 0013 02       		.uleb128 0x2
 919 0014 24       		.uleb128 0x24
 920 0015 00       		.byte	0
 921 0016 0B       		.uleb128 0xb
 922 0017 0B       		.uleb128 0xb
 923 0018 3E       		.uleb128 0x3e
 924 0019 0B       		.uleb128 0xb
 925 001a 03       		.uleb128 0x3
 926 001b 0E       		.uleb128 0xe
 927 001c 00       		.byte	0
 928 001d 00       		.byte	0
 929 001e 03       		.uleb128 0x3
 930 001f 24       		.uleb128 0x24
 931 0020 00       		.byte	0
 932 0021 0B       		.uleb128 0xb
 933 0022 0B       		.uleb128 0xb
 934 0023 3E       		.uleb128 0x3e
 935 0024 0B       		.uleb128 0xb
 936 0025 03       		.uleb128 0x3
 937 0026 08       		.uleb128 0x8
 938 0027 00       		.byte	0
 939 0028 00       		.byte	0
 940 0029 04       		.uleb128 0x4
 941 002a 16       		.uleb128 0x16
 942 002b 00       		.byte	0
 943 002c 03       		.uleb128 0x3
 944 002d 0E       		.uleb128 0xe
 945 002e 3A       		.uleb128 0x3a
 946 002f 0B       		.uleb128 0xb
 947 0030 3B       		.uleb128 0x3b
 948 0031 05       		.uleb128 0x5
 949 0032 49       		.uleb128 0x49
 950 0033 13       		.uleb128 0x13
 951 0034 00       		.byte	0
 952 0035 00       		.byte	0
 953 0036 05       		.uleb128 0x5
 954 0037 35       		.uleb128 0x35
 955 0038 00       		.byte	0
 956 0039 49       		.uleb128 0x49
 957 003a 13       		.uleb128 0x13
 958 003b 00       		.byte	0
 959 003c 00       		.byte	0
 960 003d 06       		.uleb128 0x6
 961 003e 2E       		.uleb128 0x2e
 962 003f 00       		.byte	0
 963 0040 3F       		.uleb128 0x3f
 964 0041 19       		.uleb128 0x19
 965 0042 03       		.uleb128 0x3
 966 0043 0E       		.uleb128 0xe
 967 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 34


 968 0045 0B       		.uleb128 0xb
 969 0046 3B       		.uleb128 0x3b
 970 0047 0B       		.uleb128 0xb
 971 0048 27       		.uleb128 0x27
 972 0049 19       		.uleb128 0x19
 973 004a 11       		.uleb128 0x11
 974 004b 01       		.uleb128 0x1
 975 004c 12       		.uleb128 0x12
 976 004d 06       		.uleb128 0x6
 977 004e 40       		.uleb128 0x40
 978 004f 18       		.uleb128 0x18
 979 0050 9742     		.uleb128 0x2117
 980 0052 19       		.uleb128 0x19
 981 0053 00       		.byte	0
 982 0054 00       		.byte	0
 983 0055 07       		.uleb128 0x7
 984 0056 2E       		.uleb128 0x2e
 985 0057 01       		.byte	0x1
 986 0058 3F       		.uleb128 0x3f
 987 0059 19       		.uleb128 0x19
 988 005a 03       		.uleb128 0x3
 989 005b 0E       		.uleb128 0xe
 990 005c 3A       		.uleb128 0x3a
 991 005d 0B       		.uleb128 0xb
 992 005e 3B       		.uleb128 0x3b
 993 005f 05       		.uleb128 0x5
 994 0060 27       		.uleb128 0x27
 995 0061 19       		.uleb128 0x19
 996 0062 11       		.uleb128 0x11
 997 0063 01       		.uleb128 0x1
 998 0064 12       		.uleb128 0x12
 999 0065 06       		.uleb128 0x6
 1000 0066 40       		.uleb128 0x40
 1001 0067 18       		.uleb128 0x18
 1002 0068 9742     		.uleb128 0x2117
 1003 006a 19       		.uleb128 0x19
 1004 006b 01       		.uleb128 0x1
 1005 006c 13       		.uleb128 0x13
 1006 006d 00       		.byte	0
 1007 006e 00       		.byte	0
 1008 006f 08       		.uleb128 0x8
 1009 0070 05       		.uleb128 0x5
 1010 0071 00       		.byte	0
 1011 0072 03       		.uleb128 0x3
 1012 0073 0E       		.uleb128 0xe
 1013 0074 3A       		.uleb128 0x3a
 1014 0075 0B       		.uleb128 0xb
 1015 0076 3B       		.uleb128 0x3b
 1016 0077 05       		.uleb128 0x5
 1017 0078 49       		.uleb128 0x49
 1018 0079 13       		.uleb128 0x13
 1019 007a 02       		.uleb128 0x2
 1020 007b 18       		.uleb128 0x18
 1021 007c 00       		.byte	0
 1022 007d 00       		.byte	0
 1023 007e 09       		.uleb128 0x9
 1024 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 35


 1025 0080 00       		.byte	0
 1026 0081 3F       		.uleb128 0x3f
 1027 0082 19       		.uleb128 0x19
 1028 0083 03       		.uleb128 0x3
 1029 0084 0E       		.uleb128 0xe
 1030 0085 3A       		.uleb128 0x3a
 1031 0086 0B       		.uleb128 0xb
 1032 0087 3B       		.uleb128 0x3b
 1033 0088 05       		.uleb128 0x5
 1034 0089 27       		.uleb128 0x27
 1035 008a 19       		.uleb128 0x19
 1036 008b 49       		.uleb128 0x49
 1037 008c 13       		.uleb128 0x13
 1038 008d 11       		.uleb128 0x11
 1039 008e 01       		.uleb128 0x1
 1040 008f 12       		.uleb128 0x12
 1041 0090 06       		.uleb128 0x6
 1042 0091 40       		.uleb128 0x40
 1043 0092 18       		.uleb128 0x18
 1044 0093 9742     		.uleb128 0x2117
 1045 0095 19       		.uleb128 0x19
 1046 0096 00       		.byte	0
 1047 0097 00       		.byte	0
 1048 0098 0A       		.uleb128 0xa
 1049 0099 2E       		.uleb128 0x2e
 1050 009a 01       		.byte	0x1
 1051 009b 3F       		.uleb128 0x3f
 1052 009c 19       		.uleb128 0x19
 1053 009d 03       		.uleb128 0x3
 1054 009e 0E       		.uleb128 0xe
 1055 009f 3A       		.uleb128 0x3a
 1056 00a0 0B       		.uleb128 0xb
 1057 00a1 3B       		.uleb128 0x3b
 1058 00a2 05       		.uleb128 0x5
 1059 00a3 27       		.uleb128 0x27
 1060 00a4 19       		.uleb128 0x19
 1061 00a5 49       		.uleb128 0x49
 1062 00a6 13       		.uleb128 0x13
 1063 00a7 11       		.uleb128 0x11
 1064 00a8 01       		.uleb128 0x1
 1065 00a9 12       		.uleb128 0x12
 1066 00aa 06       		.uleb128 0x6
 1067 00ab 40       		.uleb128 0x40
 1068 00ac 18       		.uleb128 0x18
 1069 00ad 9742     		.uleb128 0x2117
 1070 00af 19       		.uleb128 0x19
 1071 00b0 01       		.uleb128 0x1
 1072 00b1 13       		.uleb128 0x13
 1073 00b2 00       		.byte	0
 1074 00b3 00       		.byte	0
 1075 00b4 0B       		.uleb128 0xb
 1076 00b5 34       		.uleb128 0x34
 1077 00b6 00       		.byte	0
 1078 00b7 03       		.uleb128 0x3
 1079 00b8 0E       		.uleb128 0xe
 1080 00b9 3A       		.uleb128 0x3a
 1081 00ba 0B       		.uleb128 0xb
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 36


 1082 00bb 3B       		.uleb128 0x3b
 1083 00bc 05       		.uleb128 0x5
 1084 00bd 49       		.uleb128 0x49
 1085 00be 13       		.uleb128 0x13
 1086 00bf 02       		.uleb128 0x2
 1087 00c0 18       		.uleb128 0x18
 1088 00c1 00       		.byte	0
 1089 00c2 00       		.byte	0
 1090 00c3 0C       		.uleb128 0xc
 1091 00c4 898201   		.uleb128 0x4109
 1092 00c7 00       		.byte	0
 1093 00c8 11       		.uleb128 0x11
 1094 00c9 01       		.uleb128 0x1
 1095 00ca 31       		.uleb128 0x31
 1096 00cb 13       		.uleb128 0x13
 1097 00cc 00       		.byte	0
 1098 00cd 00       		.byte	0
 1099 00ce 0D       		.uleb128 0xd
 1100 00cf 2E       		.uleb128 0x2e
 1101 00d0 01       		.byte	0x1
 1102 00d1 3F       		.uleb128 0x3f
 1103 00d2 19       		.uleb128 0x19
 1104 00d3 03       		.uleb128 0x3
 1105 00d4 0E       		.uleb128 0xe
 1106 00d5 3A       		.uleb128 0x3a
 1107 00d6 0B       		.uleb128 0xb
 1108 00d7 3B       		.uleb128 0x3b
 1109 00d8 0B       		.uleb128 0xb
 1110 00d9 27       		.uleb128 0x27
 1111 00da 19       		.uleb128 0x19
 1112 00db 11       		.uleb128 0x11
 1113 00dc 01       		.uleb128 0x1
 1114 00dd 12       		.uleb128 0x12
 1115 00de 06       		.uleb128 0x6
 1116 00df 40       		.uleb128 0x40
 1117 00e0 18       		.uleb128 0x18
 1118 00e1 9742     		.uleb128 0x2117
 1119 00e3 19       		.uleb128 0x19
 1120 00e4 01       		.uleb128 0x1
 1121 00e5 13       		.uleb128 0x13
 1122 00e6 00       		.byte	0
 1123 00e7 00       		.byte	0
 1124 00e8 0E       		.uleb128 0xe
 1125 00e9 34       		.uleb128 0x34
 1126 00ea 00       		.byte	0
 1127 00eb 03       		.uleb128 0x3
 1128 00ec 0E       		.uleb128 0xe
 1129 00ed 3A       		.uleb128 0x3a
 1130 00ee 0B       		.uleb128 0xb
 1131 00ef 3B       		.uleb128 0x3b
 1132 00f0 0B       		.uleb128 0xb
 1133 00f1 49       		.uleb128 0x49
 1134 00f2 13       		.uleb128 0x13
 1135 00f3 02       		.uleb128 0x2
 1136 00f4 17       		.uleb128 0x17
 1137 00f5 00       		.byte	0
 1138 00f6 00       		.byte	0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 37


 1139 00f7 0F       		.uleb128 0xf
 1140 00f8 898201   		.uleb128 0x4109
 1141 00fb 01       		.byte	0x1
 1142 00fc 11       		.uleb128 0x11
 1143 00fd 01       		.uleb128 0x1
 1144 00fe 31       		.uleb128 0x31
 1145 00ff 13       		.uleb128 0x13
 1146 0100 01       		.uleb128 0x1
 1147 0101 13       		.uleb128 0x13
 1148 0102 00       		.byte	0
 1149 0103 00       		.byte	0
 1150 0104 10       		.uleb128 0x10
 1151 0105 8A8201   		.uleb128 0x410a
 1152 0108 00       		.byte	0
 1153 0109 02       		.uleb128 0x2
 1154 010a 18       		.uleb128 0x18
 1155 010b 9142     		.uleb128 0x2111
 1156 010d 18       		.uleb128 0x18
 1157 010e 00       		.byte	0
 1158 010f 00       		.byte	0
 1159 0110 11       		.uleb128 0x11
 1160 0111 34       		.uleb128 0x34
 1161 0112 00       		.byte	0
 1162 0113 03       		.uleb128 0x3
 1163 0114 0E       		.uleb128 0xe
 1164 0115 3A       		.uleb128 0x3a
 1165 0116 0B       		.uleb128 0xb
 1166 0117 3B       		.uleb128 0x3b
 1167 0118 0B       		.uleb128 0xb
 1168 0119 49       		.uleb128 0x49
 1169 011a 13       		.uleb128 0x13
 1170 011b 3F       		.uleb128 0x3f
 1171 011c 19       		.uleb128 0x19
 1172 011d 02       		.uleb128 0x2
 1173 011e 18       		.uleb128 0x18
 1174 011f 00       		.byte	0
 1175 0120 00       		.byte	0
 1176 0121 12       		.uleb128 0x12
 1177 0122 2E       		.uleb128 0x2e
 1178 0123 00       		.byte	0
 1179 0124 3F       		.uleb128 0x3f
 1180 0125 19       		.uleb128 0x19
 1181 0126 03       		.uleb128 0x3
 1182 0127 0E       		.uleb128 0xe
 1183 0128 3A       		.uleb128 0x3a
 1184 0129 0B       		.uleb128 0xb
 1185 012a 3B       		.uleb128 0x3b
 1186 012b 0B       		.uleb128 0xb
 1187 012c 27       		.uleb128 0x27
 1188 012d 19       		.uleb128 0x19
 1189 012e 49       		.uleb128 0x49
 1190 012f 13       		.uleb128 0x13
 1191 0130 3C       		.uleb128 0x3c
 1192 0131 19       		.uleb128 0x19
 1193 0132 00       		.byte	0
 1194 0133 00       		.byte	0
 1195 0134 13       		.uleb128 0x13
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 38


 1196 0135 2E       		.uleb128 0x2e
 1197 0136 01       		.byte	0x1
 1198 0137 3F       		.uleb128 0x3f
 1199 0138 19       		.uleb128 0x19
 1200 0139 03       		.uleb128 0x3
 1201 013a 0E       		.uleb128 0xe
 1202 013b 3A       		.uleb128 0x3a
 1203 013c 0B       		.uleb128 0xb
 1204 013d 3B       		.uleb128 0x3b
 1205 013e 0B       		.uleb128 0xb
 1206 013f 27       		.uleb128 0x27
 1207 0140 19       		.uleb128 0x19
 1208 0141 3C       		.uleb128 0x3c
 1209 0142 19       		.uleb128 0x19
 1210 0143 00       		.byte	0
 1211 0144 00       		.byte	0
 1212 0145 14       		.uleb128 0x14
 1213 0146 05       		.uleb128 0x5
 1214 0147 00       		.byte	0
 1215 0148 49       		.uleb128 0x49
 1216 0149 13       		.uleb128 0x13
 1217 014a 00       		.byte	0
 1218 014b 00       		.byte	0
 1219 014c 00       		.byte	0
 1220              		.section	.debug_loc,"",%progbits
 1221              	.Ldebug_loc0:
 1222              	.LLST0:
 1223 0000 0A000000 		.4byte	.LVL8
 1224 0004 0E000000 		.4byte	.LVL9
 1225 0008 0100     		.2byte	0x1
 1226 000a 53       		.byte	0x53
 1227 000b 00000000 		.4byte	0
 1228 000f 00000000 		.4byte	0
 1229              	.LLST1:
 1230 0013 44000000 		.4byte	.LVL14
 1231 0017 51000000 		.4byte	.LVL15-1
 1232 001b 0100     		.2byte	0x1
 1233 001d 50       		.byte	0x50
 1234 001e 00000000 		.4byte	0
 1235 0022 00000000 		.4byte	0
 1236              		.section	.debug_aranges,"",%progbits
 1237 0000 94000000 		.4byte	0x94
 1238 0004 0200     		.2byte	0x2
 1239 0006 00000000 		.4byte	.Ldebug_info0
 1240 000a 04       		.byte	0x4
 1241 000b 00       		.byte	0
 1242 000c 0000     		.2byte	0
 1243 000e 0000     		.2byte	0
 1244 0010 00000000 		.4byte	.LFB2
 1245 0014 10000000 		.4byte	.LFE2-.LFB2
 1246 0018 00000000 		.4byte	.LFB3
 1247 001c 10000000 		.4byte	.LFE3-.LFB3
 1248 0020 00000000 		.4byte	.LFB4
 1249 0024 0C000000 		.4byte	.LFE4-.LFB4
 1250 0028 00000000 		.4byte	.LFB5
 1251 002c 14000000 		.4byte	.LFE5-.LFB5
 1252 0030 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 39


 1253 0034 0C000000 		.4byte	.LFE7-.LFB7
 1254 0038 00000000 		.4byte	.LFB8
 1255 003c 0C000000 		.4byte	.LFE8-.LFB8
 1256 0040 00000000 		.4byte	.LFB9
 1257 0044 0C000000 		.4byte	.LFE9-.LFB9
 1258 0048 00000000 		.4byte	.LFB10
 1259 004c 0C000000 		.4byte	.LFE10-.LFB10
 1260 0050 00000000 		.4byte	.LFB11
 1261 0054 0C000000 		.4byte	.LFE11-.LFB11
 1262 0058 00000000 		.4byte	.LFB12
 1263 005c 0C000000 		.4byte	.LFE12-.LFB12
 1264 0060 00000000 		.4byte	.LFB13
 1265 0064 0C000000 		.4byte	.LFE13-.LFB13
 1266 0068 00000000 		.4byte	.LFB6
 1267 006c 14000000 		.4byte	.LFE6-.LFB6
 1268 0070 00000000 		.4byte	.LFB1
 1269 0074 60000000 		.4byte	.LFE1-.LFB1
 1270 0078 00000000 		.4byte	.LFB0
 1271 007c 1C000000 		.4byte	.LFE0-.LFB0
 1272 0080 00000000 		.4byte	.LFB14
 1273 0084 0C000000 		.4byte	.LFE14-.LFB14
 1274 0088 00000000 		.4byte	.LFB15
 1275 008c 0C000000 		.4byte	.LFE15-.LFB15
 1276 0090 00000000 		.4byte	0
 1277 0094 00000000 		.4byte	0
 1278              		.section	.debug_ranges,"",%progbits
 1279              	.Ldebug_ranges0:
 1280 0000 00000000 		.4byte	.LFB2
 1281 0004 10000000 		.4byte	.LFE2
 1282 0008 00000000 		.4byte	.LFB3
 1283 000c 10000000 		.4byte	.LFE3
 1284 0010 00000000 		.4byte	.LFB4
 1285 0014 0C000000 		.4byte	.LFE4
 1286 0018 00000000 		.4byte	.LFB5
 1287 001c 14000000 		.4byte	.LFE5
 1288 0020 00000000 		.4byte	.LFB7
 1289 0024 0C000000 		.4byte	.LFE7
 1290 0028 00000000 		.4byte	.LFB8
 1291 002c 0C000000 		.4byte	.LFE8
 1292 0030 00000000 		.4byte	.LFB9
 1293 0034 0C000000 		.4byte	.LFE9
 1294 0038 00000000 		.4byte	.LFB10
 1295 003c 0C000000 		.4byte	.LFE10
 1296 0040 00000000 		.4byte	.LFB11
 1297 0044 0C000000 		.4byte	.LFE11
 1298 0048 00000000 		.4byte	.LFB12
 1299 004c 0C000000 		.4byte	.LFE12
 1300 0050 00000000 		.4byte	.LFB13
 1301 0054 0C000000 		.4byte	.LFE13
 1302 0058 00000000 		.4byte	.LFB6
 1303 005c 14000000 		.4byte	.LFE6
 1304 0060 00000000 		.4byte	.LFB1
 1305 0064 60000000 		.4byte	.LFE1
 1306 0068 00000000 		.4byte	.LFB0
 1307 006c 1C000000 		.4byte	.LFE0
 1308 0070 00000000 		.4byte	.LFB14
 1309 0074 0C000000 		.4byte	.LFE14
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 40


 1310 0078 00000000 		.4byte	.LFB15
 1311 007c 0C000000 		.4byte	.LFE15
 1312 0080 00000000 		.4byte	0
 1313 0084 00000000 		.4byte	0
 1314              		.section	.debug_line,"",%progbits
 1315              	.Ldebug_line0:
 1316 0000 88010000 		.section	.debug_str,"MS",%progbits,1
 1316      02005100 
 1316      00000201 
 1316      FB0E0D00 
 1316      01010101 
 1317              	.LASF15:
 1318 0000 72656731 		.ascii	"reg16\000"
 1318      3600
 1319              	.LASF28:
 1320 0006 50574D5F 		.ascii	"PWM_Pan_ReadStatusRegister\000"
 1320      50616E5F 
 1320      52656164 
 1320      53746174 
 1320      75735265 
 1321              	.LASF25:
 1322 0021 50574D5F 		.ascii	"PWM_Pan_SetInterruptMode\000"
 1322      50616E5F 
 1322      53657449 
 1322      6E746572 
 1322      72757074 
 1323              	.LASF22:
 1324 003a 70657269 		.ascii	"period\000"
 1324      6F6400
 1325              	.LASF4:
 1326 0041 6C6F6E67 		.ascii	"long int\000"
 1326      20696E74 
 1326      00
 1327              	.LASF33:
 1328 004a 50574D5F 		.ascii	"PWM_Pan_Init\000"
 1328      50616E5F 
 1328      496E6974 
 1328      00
 1329              	.LASF3:
 1330 0057 73686F72 		.ascii	"short unsigned int\000"
 1330      7420756E 
 1330      7369676E 
 1330      65642069 
 1330      6E7400
 1331              	.LASF20:
 1332 006a 50574D5F 		.ascii	"PWM_Pan_WritePeriod\000"
 1332      50616E5F 
 1332      57726974 
 1332      65506572 
 1332      696F6400 
 1333              	.LASF11:
 1334 007e 666C6F61 		.ascii	"float\000"
 1334      7400
 1335              	.LASF21:
 1336 0084 636F756E 		.ascii	"counter\000"
 1336      74657200 
 1337              	.LASF7:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 41


 1338 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1338      206C6F6E 
 1338      6720756E 
 1338      7369676E 
 1338      65642069 
 1339              	.LASF37:
 1340 00a3 50574D5F 		.ascii	"PWM_Pan_Start\000"
 1340      50616E5F 
 1340      53746172 
 1340      7400
 1341              	.LASF1:
 1342 00b1 756E7369 		.ascii	"unsigned char\000"
 1342      676E6564 
 1342      20636861 
 1342      7200
 1343              	.LASF44:
 1344 00bf 50574D5F 		.ascii	"PWM_Pan_initVar\000"
 1344      50616E5F 
 1344      696E6974 
 1344      56617200 
 1345              	.LASF41:
 1346 00cf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_Pan.c\000"
 1346      6E657261 
 1346      7465645F 
 1346      536F7572 
 1346      63655C50 
 1347              	.LASF5:
 1348 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 1348      20756E73 
 1348      69676E65 
 1348      6420696E 
 1348      7400
 1349              	.LASF36:
 1350 0104 50574D5F 		.ascii	"PWM_Pan_interruptState\000"
 1350      50616E5F 
 1350      696E7465 
 1350      72727570 
 1350      74537461 
 1351              	.LASF9:
 1352 011b 75696E74 		.ascii	"uint8\000"
 1352      3800
 1353              	.LASF30:
 1354 0121 636F6E74 		.ascii	"control\000"
 1354      726F6C00 
 1355              	.LASF23:
 1356 0129 50574D5F 		.ascii	"PWM_Pan_WriteCompare\000"
 1356      50616E5F 
 1356      57726974 
 1356      65436F6D 
 1356      70617265 
 1357              	.LASF12:
 1358 013e 646F7562 		.ascii	"double\000"
 1358      6C6500
 1359              	.LASF10:
 1360 0145 75696E74 		.ascii	"uint16\000"
 1360      313600
 1361              	.LASF38:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 42


 1362 014c 50574D5F 		.ascii	"PWM_Pan_ReadCompare\000"
 1362      50616E5F 
 1362      52656164 
 1362      436F6D70 
 1362      61726500 
 1363              	.LASF40:
 1364 0160 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1364      4320342E 
 1364      392E3320 
 1364      32303135 
 1364      30333033 
 1365 0193 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1365      20726576 
 1365      6973696F 
 1365      6E203232 
 1365      31323230 
 1366 01c6 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1366      66756E63 
 1366      74696F6E 
 1366      2D736563 
 1366      74696F6E 
 1367              	.LASF45:
 1368 01ee 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1368      74657243 
 1368      72697469 
 1368      63616C53 
 1368      65637469 
 1369              	.LASF8:
 1370 0205 756E7369 		.ascii	"unsigned int\000"
 1370      676E6564 
 1370      20696E74 
 1370      00
 1371              	.LASF46:
 1372 0212 43794578 		.ascii	"CyExitCriticalSection\000"
 1372      69744372 
 1372      69746963 
 1372      616C5365 
 1372      6374696F 
 1373              	.LASF18:
 1374 0228 50574D5F 		.ascii	"PWM_Pan_Stop\000"
 1374      50616E5F 
 1374      53746F70 
 1374      00
 1375              	.LASF39:
 1376 0235 50574D5F 		.ascii	"PWM_Pan_ReadPeriod\000"
 1376      50616E5F 
 1376      52656164 
 1376      50657269 
 1376      6F6400
 1377              	.LASF34:
 1378 0248 72657375 		.ascii	"result\000"
 1378      6C7400
 1379              	.LASF32:
 1380 024f 50574D5F 		.ascii	"PWM_Pan_ClearFIFO\000"
 1380      50616E5F 
 1380      436C6561 
 1380      72464946 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 43


 1380      4F00
 1381              	.LASF14:
 1382 0261 72656738 		.ascii	"reg8\000"
 1382      00
 1383              	.LASF16:
 1384 0266 73697A65 		.ascii	"sizetype\000"
 1384      74797065 
 1384      00
 1385              	.LASF31:
 1386 026f 50574D5F 		.ascii	"PWM_Pan_ReadCapture\000"
 1386      50616E5F 
 1386      52656164 
 1386      43617074 
 1386      75726500 
 1387              	.LASF6:
 1388 0283 6C6F6E67 		.ascii	"long long int\000"
 1388      206C6F6E 
 1388      6720696E 
 1388      7400
 1389              	.LASF26:
 1390 0291 696E7465 		.ascii	"interruptMode\000"
 1390      72727570 
 1390      744D6F64 
 1390      6500
 1391              	.LASF17:
 1392 029f 50574D5F 		.ascii	"PWM_Pan_Enable\000"
 1392      50616E5F 
 1392      456E6162 
 1392      6C6500
 1393              	.LASF42:
 1394 02ae 433A5C55 		.ascii	"C:\\Users\\Daniel\\Documents\\PSoC Creator\\ECE3091"
 1394      73657273 
 1394      5C44616E 
 1394      69656C5C 
 1394      446F6375 
 1395 02dc 20466173 		.ascii	" Faster V3\\Display.cydsn\000"
 1395      74657220 
 1395      56335C44 
 1395      6973706C 
 1395      61792E63 
 1396              	.LASF2:
 1397 02f5 73686F72 		.ascii	"short int\000"
 1397      7420696E 
 1397      7400
 1398              	.LASF29:
 1399 02ff 50574D5F 		.ascii	"PWM_Pan_WriteControlRegister\000"
 1399      50616E5F 
 1399      57726974 
 1399      65436F6E 
 1399      74726F6C 
 1400              	.LASF27:
 1401 031c 50574D5F 		.ascii	"PWM_Pan_ReadCounter\000"
 1401      50616E5F 
 1401      52656164 
 1401      436F756E 
 1401      74657200 
 1402              	.LASF13:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cctoXK3p.s 			page 44


 1403 0330 63686172 		.ascii	"char\000"
 1403      00
 1404              	.LASF0:
 1405 0335 7369676E 		.ascii	"signed char\000"
 1405      65642063 
 1405      68617200 
 1406              	.LASF24:
 1407 0341 636F6D70 		.ascii	"compare\000"
 1407      61726500 
 1408              	.LASF35:
 1409 0349 6374726C 		.ascii	"ctrl\000"
 1409      00
 1410              	.LASF19:
 1411 034e 50574D5F 		.ascii	"PWM_Pan_WriteCounter\000"
 1411      50616E5F 
 1411      57726974 
 1411      65436F75 
 1411      6E746572 
 1412              	.LASF43:
 1413 0363 50574D5F 		.ascii	"PWM_Pan_ReadControlRegister\000"
 1413      50616E5F 
 1413      52656164 
 1413      436F6E74 
 1413      726F6C52 
 1414              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
